
FinalProject_STM_V1_0_0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005ef0  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000b34  08006090  08006090  00007090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006bc4  08006bc4  000080cc  2**0
                  CONTENTS
  4 .ARM          00000008  08006bc4  08006bc4  00007bc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006bcc  08006bcc  000080cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006bcc  08006bcc  00007bcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006bd0  08006bd0  00007bd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000cc  20000000  08006bd4  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000014a0  200000cc  08006ca0  000080cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000156c  08006ca0  0000856c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000080cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00039a05  00000000  00000000  000080fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000032b5  00000000  00000000  00041b01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001060  00000000  00000000  00044db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001e8  00000000  00000000  00045e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011542  00000000  00000000  00046000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000c85f  00000000  00000000  00057542  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00053306  00000000  00000000  00063da1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000be  00000000  00000000  000b70a7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004700  00000000  00000000  000b7168  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  000bb868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000c10  00000000  00000000  000bb8c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000cc 	.word	0x200000cc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006078 	.word	0x08006078

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000d0 	.word	0x200000d0
 80001dc:	08006078 	.word	0x08006078

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <flashConfig>:
uint32_t uwAddress = 0;


static uint32_t GetSector(uint32_t Address);

void flashConfig(){
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	FLASH_Unlock();
 8000284:	f000 f90c 	bl	80004a0 <FLASH_Unlock>
	FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |
 8000288:	20f3      	movs	r0, #243	@ 0xf3
 800028a:	f000 f9b5 	bl	80005f8 <FLASH_ClearFlag>
	                  FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR|FLASH_FLAG_PGSERR);


	//Get available flash range
	uwStartSector = GetSector(FLASH_USER_START_ADDR);
 800028e:	480a      	ldr	r0, [pc, #40]	@ (80002b8 <flashConfig+0x38>)
 8000290:	f000 f868 	bl	8000364 <GetSector>
 8000294:	4603      	mov	r3, r0
 8000296:	4a09      	ldr	r2, [pc, #36]	@ (80002bc <flashConfig+0x3c>)
 8000298:	6013      	str	r3, [r2, #0]
	uwEndSector = GetSector(FLASH_USER_END_ADDR);
 800029a:	4809      	ldr	r0, [pc, #36]	@ (80002c0 <flashConfig+0x40>)
 800029c:	f000 f862 	bl	8000364 <GetSector>
 80002a0:	4603      	mov	r3, r0
 80002a2:	4a08      	ldr	r2, [pc, #32]	@ (80002c4 <flashConfig+0x44>)
 80002a4:	6013      	str	r3, [r2, #0]

	/* Start the erase operation */
	uwSectorCounter = uwStartSector;
 80002a6:	4b05      	ldr	r3, [pc, #20]	@ (80002bc <flashConfig+0x3c>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a07      	ldr	r2, [pc, #28]	@ (80002c8 <flashConfig+0x48>)
 80002ac:	6013      	str	r3, [r2, #0]
	uwAddress = FLASH_USER_START_ADDR;
 80002ae:	4b07      	ldr	r3, [pc, #28]	@ (80002cc <flashConfig+0x4c>)
 80002b0:	4a01      	ldr	r2, [pc, #4]	@ (80002b8 <flashConfig+0x38>)
 80002b2:	601a      	str	r2, [r3, #0]
}
 80002b4:	bf00      	nop
 80002b6:	bd80      	pop	{r7, pc}
 80002b8:	08010000 	.word	0x08010000
 80002bc:	200000ec 	.word	0x200000ec
 80002c0:	080e0000 	.word	0x080e0000
 80002c4:	200000f0 	.word	0x200000f0
 80002c8:	200000f4 	.word	0x200000f4
 80002cc:	200000f8 	.word	0x200000f8

080002d0 <flashWrite>:

FLASH_Status flashWrite(uint32_t ID, uint32_t data){
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b084      	sub	sp, #16
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	6039      	str	r1, [r7, #0]
	FLASH_Unlock();
 80002da:	f000 f8e1 	bl	80004a0 <FLASH_Unlock>
	uint32_t currentAddress = uwAddress + ID*4;
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	009a      	lsls	r2, r3, #2
 80002e2:	4b06      	ldr	r3, [pc, #24]	@ (80002fc <flashWrite+0x2c>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4413      	add	r3, r2
 80002e8:	60fb      	str	r3, [r7, #12]
	return FLASH_ProgramWord(currentAddress, data);
 80002ea:	6839      	ldr	r1, [r7, #0]
 80002ec:	68f8      	ldr	r0, [r7, #12]
 80002ee:	f000 f94f 	bl	8000590 <FLASH_ProgramWord>
 80002f2:	4603      	mov	r3, r0

}
 80002f4:	4618      	mov	r0, r3
 80002f6:	3710      	adds	r7, #16
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	200000f8 	.word	0x200000f8

08000300 <flashReadWord>:

uint32_t flashReadWord(uint32_t ID){
 8000300:	b580      	push	{r7, lr}
 8000302:	b084      	sub	sp, #16
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
	FLASH_Unlock();
 8000308:	f000 f8ca 	bl	80004a0 <FLASH_Unlock>
	uint32_t currentAddress = uwAddress + ID*4;
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	009a      	lsls	r2, r3, #2
 8000310:	4b07      	ldr	r3, [pc, #28]	@ (8000330 <flashReadWord+0x30>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	4413      	add	r3, r2
 8000316:	60fb      	str	r3, [r7, #12]
	uwData32 = *(__IO uint32_t*)currentAddress;
 8000318:	68fb      	ldr	r3, [r7, #12]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	b2da      	uxtb	r2, r3
 800031e:	4b05      	ldr	r3, [pc, #20]	@ (8000334 <flashReadWord+0x34>)
 8000320:	701a      	strb	r2, [r3, #0]
	return uwData32;
 8000322:	4b04      	ldr	r3, [pc, #16]	@ (8000334 <flashReadWord+0x34>)
 8000324:	781b      	ldrb	r3, [r3, #0]
 8000326:	b2db      	uxtb	r3, r3

}
 8000328:	4618      	mov	r0, r3
 800032a:	3710      	adds	r7, #16
 800032c:	46bd      	mov	sp, r7
 800032e:	bd80      	pop	{r7, pc}
 8000330:	200000f8 	.word	0x200000f8
 8000334:	200000e8 	.word	0x200000e8

08000338 <flashClear>:
//Must clear before writing
FLASH_Status flashClear(){
 8000338:	b580      	push	{r7, lr}
 800033a:	b082      	sub	sp, #8
 800033c:	af00      	add	r7, sp, #0
	FLASH_Unlock();
 800033e:	f000 f8af 	bl	80004a0 <FLASH_Unlock>
	uint32_t sector;
	sector = GetSector(uwAddress);
 8000342:	4b07      	ldr	r3, [pc, #28]	@ (8000360 <flashClear+0x28>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4618      	mov	r0, r3
 8000348:	f000 f80c 	bl	8000364 <GetSector>
 800034c:	6078      	str	r0, [r7, #4]
	return FLASH_EraseSector(sector, VoltageRange_3);
 800034e:	2102      	movs	r1, #2
 8000350:	6878      	ldr	r0, [r7, #4]
 8000352:	f000 f8bd 	bl	80004d0 <FLASH_EraseSector>
 8000356:	4603      	mov	r3, r0

}
 8000358:	4618      	mov	r0, r3
 800035a:	3708      	adds	r7, #8
 800035c:	46bd      	mov	sp, r7
 800035e:	bd80      	pop	{r7, pc}
 8000360:	200000f8 	.word	0x200000f8

08000364 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
 8000364:	b480      	push	{r7}
 8000366:	b085      	sub	sp, #20
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
	uint32_t sector = 0;
 800036c:	2300      	movs	r3, #0
 800036e:	60fb      	str	r3, [r7, #12]
	if((Address < ADDR_FLASH_SECTOR_1) && (Address >= ADDR_FLASH_SECTOR_0))
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a40      	ldr	r2, [pc, #256]	@ (8000474 <GetSector+0x110>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d206      	bcs.n	8000386 <GetSector+0x22>
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800037e:	d302      	bcc.n	8000386 <GetSector+0x22>
	{
		sector = FLASH_Sector_0;
 8000380:	2300      	movs	r3, #0
 8000382:	60fb      	str	r3, [r7, #12]
 8000384:	e06f      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_2) && (Address >= ADDR_FLASH_SECTOR_1))
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a3b      	ldr	r2, [pc, #236]	@ (8000478 <GetSector+0x114>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d206      	bcs.n	800039c <GetSector+0x38>
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a38      	ldr	r2, [pc, #224]	@ (8000474 <GetSector+0x110>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d302      	bcc.n	800039c <GetSector+0x38>
	{
		sector = FLASH_Sector_1;
 8000396:	2308      	movs	r3, #8
 8000398:	60fb      	str	r3, [r7, #12]
 800039a:	e064      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_3) && (Address >= ADDR_FLASH_SECTOR_2))
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a37      	ldr	r2, [pc, #220]	@ (800047c <GetSector+0x118>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d206      	bcs.n	80003b2 <GetSector+0x4e>
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a34      	ldr	r2, [pc, #208]	@ (8000478 <GetSector+0x114>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d302      	bcc.n	80003b2 <GetSector+0x4e>
	{
		sector = FLASH_Sector_2;
 80003ac:	2310      	movs	r3, #16
 80003ae:	60fb      	str	r3, [r7, #12]
 80003b0:	e059      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_4) && (Address >= ADDR_FLASH_SECTOR_3))
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a32      	ldr	r2, [pc, #200]	@ (8000480 <GetSector+0x11c>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d806      	bhi.n	80003c8 <GetSector+0x64>
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a2f      	ldr	r2, [pc, #188]	@ (800047c <GetSector+0x118>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d302      	bcc.n	80003c8 <GetSector+0x64>
	{
		sector = FLASH_Sector_3;
 80003c2:	2318      	movs	r3, #24
 80003c4:	60fb      	str	r3, [r7, #12]
 80003c6:	e04e      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_5) && (Address >= ADDR_FLASH_SECTOR_4))
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a2e      	ldr	r2, [pc, #184]	@ (8000484 <GetSector+0x120>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d806      	bhi.n	80003de <GetSector+0x7a>
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a2b      	ldr	r2, [pc, #172]	@ (8000480 <GetSector+0x11c>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d902      	bls.n	80003de <GetSector+0x7a>
	{
		sector = FLASH_Sector_4;
 80003d8:	2320      	movs	r3, #32
 80003da:	60fb      	str	r3, [r7, #12]
 80003dc:	e043      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_6) && (Address >= ADDR_FLASH_SECTOR_5))
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a29      	ldr	r2, [pc, #164]	@ (8000488 <GetSector+0x124>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d806      	bhi.n	80003f4 <GetSector+0x90>
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a26      	ldr	r2, [pc, #152]	@ (8000484 <GetSector+0x120>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d902      	bls.n	80003f4 <GetSector+0x90>
	{
		sector = FLASH_Sector_5;
 80003ee:	2328      	movs	r3, #40	@ 0x28
 80003f0:	60fb      	str	r3, [r7, #12]
 80003f2:	e038      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_7) && (Address >= ADDR_FLASH_SECTOR_6))
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a25      	ldr	r2, [pc, #148]	@ (800048c <GetSector+0x128>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d806      	bhi.n	800040a <GetSector+0xa6>
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a22      	ldr	r2, [pc, #136]	@ (8000488 <GetSector+0x124>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d902      	bls.n	800040a <GetSector+0xa6>
	{
		sector = FLASH_Sector_6;
 8000404:	2330      	movs	r3, #48	@ 0x30
 8000406:	60fb      	str	r3, [r7, #12]
 8000408:	e02d      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_8) && (Address >= ADDR_FLASH_SECTOR_7))
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a20      	ldr	r2, [pc, #128]	@ (8000490 <GetSector+0x12c>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d806      	bhi.n	8000420 <GetSector+0xbc>
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a1d      	ldr	r2, [pc, #116]	@ (800048c <GetSector+0x128>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d902      	bls.n	8000420 <GetSector+0xbc>
	{
		sector = FLASH_Sector_7;
 800041a:	2338      	movs	r3, #56	@ 0x38
 800041c:	60fb      	str	r3, [r7, #12]
 800041e:	e022      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_9) && (Address >= ADDR_FLASH_SECTOR_8))
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a1c      	ldr	r2, [pc, #112]	@ (8000494 <GetSector+0x130>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d806      	bhi.n	8000436 <GetSector+0xd2>
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a19      	ldr	r2, [pc, #100]	@ (8000490 <GetSector+0x12c>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d902      	bls.n	8000436 <GetSector+0xd2>
	{
		sector = FLASH_Sector_8;
 8000430:	2340      	movs	r3, #64	@ 0x40
 8000432:	60fb      	str	r3, [r7, #12]
 8000434:	e017      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_10) && (Address >= ADDR_FLASH_SECTOR_9))
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a17      	ldr	r2, [pc, #92]	@ (8000498 <GetSector+0x134>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d806      	bhi.n	800044c <GetSector+0xe8>
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a14      	ldr	r2, [pc, #80]	@ (8000494 <GetSector+0x130>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d902      	bls.n	800044c <GetSector+0xe8>
	{
		sector = FLASH_Sector_9;
 8000446:	2348      	movs	r3, #72	@ 0x48
 8000448:	60fb      	str	r3, [r7, #12]
 800044a:	e00c      	b.n	8000466 <GetSector+0x102>
	}
	else if((Address < ADDR_FLASH_SECTOR_11) && (Address >= ADDR_FLASH_SECTOR_10))
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a13      	ldr	r2, [pc, #76]	@ (800049c <GetSector+0x138>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d806      	bhi.n	8000462 <GetSector+0xfe>
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a10      	ldr	r2, [pc, #64]	@ (8000498 <GetSector+0x134>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d902      	bls.n	8000462 <GetSector+0xfe>
	{
		sector = FLASH_Sector_10;
 800045c:	2350      	movs	r3, #80	@ 0x50
 800045e:	60fb      	str	r3, [r7, #12]
 8000460:	e001      	b.n	8000466 <GetSector+0x102>
	}
	else/*(Address < FLASH_END_ADDR) && (Address >= ADDR_FLASH_SECTOR_11))*/
	{
		sector = FLASH_Sector_11;
 8000462:	2358      	movs	r3, #88	@ 0x58
 8000464:	60fb      	str	r3, [r7, #12]
	}
	/* USE_STM324x7I_EVAL or USE_STM324x9I_EVAL */
	return (uint32_t)sector;
 8000466:	68fb      	ldr	r3, [r7, #12]
}
 8000468:	4618      	mov	r0, r3
 800046a:	3714      	adds	r7, #20
 800046c:	46bd      	mov	sp, r7
 800046e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000472:	4770      	bx	lr
 8000474:	08004000 	.word	0x08004000
 8000478:	08008000 	.word	0x08008000
 800047c:	0800c000 	.word	0x0800c000
 8000480:	0800ffff 	.word	0x0800ffff
 8000484:	0801ffff 	.word	0x0801ffff
 8000488:	0803ffff 	.word	0x0803ffff
 800048c:	0805ffff 	.word	0x0805ffff
 8000490:	0807ffff 	.word	0x0807ffff
 8000494:	0809ffff 	.word	0x0809ffff
 8000498:	080bffff 	.word	0x080bffff
 800049c:	080dffff 	.word	0x080dffff

080004a0 <FLASH_Unlock>:
  * @brief  Unlocks the FLASH control register access
  * @param  None
  * @retval None
  */
void FLASH_Unlock(void)
{
 80004a0:	b480      	push	{r7}
 80004a2:	af00      	add	r7, sp, #0
  if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 80004a4:	4b07      	ldr	r3, [pc, #28]	@ (80004c4 <FLASH_Unlock+0x24>)
 80004a6:	691b      	ldr	r3, [r3, #16]
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	da05      	bge.n	80004b8 <FLASH_Unlock+0x18>
  {
    /* Authorize the FLASH Registers access */
    FLASH->KEYR = FLASH_KEY1;
 80004ac:	4b05      	ldr	r3, [pc, #20]	@ (80004c4 <FLASH_Unlock+0x24>)
 80004ae:	4a06      	ldr	r2, [pc, #24]	@ (80004c8 <FLASH_Unlock+0x28>)
 80004b0:	605a      	str	r2, [r3, #4]
    FLASH->KEYR = FLASH_KEY2;
 80004b2:	4b04      	ldr	r3, [pc, #16]	@ (80004c4 <FLASH_Unlock+0x24>)
 80004b4:	4a05      	ldr	r2, [pc, #20]	@ (80004cc <FLASH_Unlock+0x2c>)
 80004b6:	605a      	str	r2, [r3, #4]
  }  
}
 80004b8:	bf00      	nop
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	40023c00 	.word	0x40023c00
 80004c8:	45670123 	.word	0x45670123
 80004cc:	cdef89ab 	.word	0xcdef89ab

080004d0 <FLASH_EraseSector>:
  *       
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
{
 80004d0:	b580      	push	{r7, lr}
 80004d2:	b084      	sub	sp, #16
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
 80004d8:	460b      	mov	r3, r1
 80004da:	70fb      	strb	r3, [r7, #3]
  uint32_t tmp_psize = 0x0;
 80004dc:	2300      	movs	r3, #0
 80004de:	60fb      	str	r3, [r7, #12]
  FLASH_Status status = FLASH_COMPLETE;
 80004e0:	2309      	movs	r3, #9
 80004e2:	72fb      	strb	r3, [r7, #11]

  /* Check the parameters */
  assert_param(IS_FLASH_SECTOR(FLASH_Sector));
  assert_param(IS_VOLTAGERANGE(VoltageRange));
  
  if(VoltageRange == VoltageRange_1)
 80004e4:	78fb      	ldrb	r3, [r7, #3]
 80004e6:	2b00      	cmp	r3, #0
 80004e8:	d102      	bne.n	80004f0 <FLASH_EraseSector+0x20>
  {
     tmp_psize = FLASH_PSIZE_BYTE;
 80004ea:	2300      	movs	r3, #0
 80004ec:	60fb      	str	r3, [r7, #12]
 80004ee:	e010      	b.n	8000512 <FLASH_EraseSector+0x42>
  }
  else if(VoltageRange == VoltageRange_2)
 80004f0:	78fb      	ldrb	r3, [r7, #3]
 80004f2:	2b01      	cmp	r3, #1
 80004f4:	d103      	bne.n	80004fe <FLASH_EraseSector+0x2e>
  {
    tmp_psize = FLASH_PSIZE_HALF_WORD;
 80004f6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80004fa:	60fb      	str	r3, [r7, #12]
 80004fc:	e009      	b.n	8000512 <FLASH_EraseSector+0x42>
  }
  else if(VoltageRange == VoltageRange_3)
 80004fe:	78fb      	ldrb	r3, [r7, #3]
 8000500:	2b02      	cmp	r3, #2
 8000502:	d103      	bne.n	800050c <FLASH_EraseSector+0x3c>
  {
    tmp_psize = FLASH_PSIZE_WORD;
 8000504:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000508:	60fb      	str	r3, [r7, #12]
 800050a:	e002      	b.n	8000512 <FLASH_EraseSector+0x42>
  }
  else
  {
    tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 800050c:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8000510:	60fb      	str	r3, [r7, #12]
  }
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation();
 8000512:	f000 f8bf 	bl	8000694 <FLASH_WaitForLastOperation>
 8000516:	4603      	mov	r3, r0
 8000518:	72fb      	strb	r3, [r7, #11]
  
  if(status == FLASH_COMPLETE)
 800051a:	7afb      	ldrb	r3, [r7, #11]
 800051c:	2b09      	cmp	r3, #9
 800051e:	d12f      	bne.n	8000580 <FLASH_EraseSector+0xb0>
  { 
    /* if the previous operation is completed, proceed to erase the sector */
    FLASH->CR &= CR_PSIZE_MASK;
 8000520:	4b1a      	ldr	r3, [pc, #104]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000522:	691b      	ldr	r3, [r3, #16]
 8000524:	4a19      	ldr	r2, [pc, #100]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000526:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800052a:	6113      	str	r3, [r2, #16]
    FLASH->CR |= tmp_psize;
 800052c:	4b17      	ldr	r3, [pc, #92]	@ (800058c <FLASH_EraseSector+0xbc>)
 800052e:	691a      	ldr	r2, [r3, #16]
 8000530:	4916      	ldr	r1, [pc, #88]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000532:	68fb      	ldr	r3, [r7, #12]
 8000534:	4313      	orrs	r3, r2
 8000536:	610b      	str	r3, [r1, #16]
    FLASH->CR &= SECTOR_MASK;
 8000538:	4b14      	ldr	r3, [pc, #80]	@ (800058c <FLASH_EraseSector+0xbc>)
 800053a:	691b      	ldr	r3, [r3, #16]
 800053c:	4a13      	ldr	r2, [pc, #76]	@ (800058c <FLASH_EraseSector+0xbc>)
 800053e:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8000542:	6113      	str	r3, [r2, #16]
    FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 8000544:	4b11      	ldr	r3, [pc, #68]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000546:	691a      	ldr	r2, [r3, #16]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	4313      	orrs	r3, r2
 800054c:	4a0f      	ldr	r2, [pc, #60]	@ (800058c <FLASH_EraseSector+0xbc>)
 800054e:	f043 0302 	orr.w	r3, r3, #2
 8000552:	6113      	str	r3, [r2, #16]
    FLASH->CR |= FLASH_CR_STRT;
 8000554:	4b0d      	ldr	r3, [pc, #52]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000556:	691b      	ldr	r3, [r3, #16]
 8000558:	4a0c      	ldr	r2, [pc, #48]	@ (800058c <FLASH_EraseSector+0xbc>)
 800055a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800055e:	6113      	str	r3, [r2, #16]
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation();
 8000560:	f000 f898 	bl	8000694 <FLASH_WaitForLastOperation>
 8000564:	4603      	mov	r3, r0
 8000566:	72fb      	strb	r3, [r7, #11]
    
    /* if the erase operation is completed, disable the SER Bit */
    FLASH->CR &= (~FLASH_CR_SER);
 8000568:	4b08      	ldr	r3, [pc, #32]	@ (800058c <FLASH_EraseSector+0xbc>)
 800056a:	691b      	ldr	r3, [r3, #16]
 800056c:	4a07      	ldr	r2, [pc, #28]	@ (800058c <FLASH_EraseSector+0xbc>)
 800056e:	f023 0302 	bic.w	r3, r3, #2
 8000572:	6113      	str	r3, [r2, #16]
    FLASH->CR &= SECTOR_MASK; 
 8000574:	4b05      	ldr	r3, [pc, #20]	@ (800058c <FLASH_EraseSector+0xbc>)
 8000576:	691b      	ldr	r3, [r3, #16]
 8000578:	4a04      	ldr	r2, [pc, #16]	@ (800058c <FLASH_EraseSector+0xbc>)
 800057a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800057e:	6113      	str	r3, [r2, #16]
  }
  /* Return the Erase Status */
  return status;
 8000580:	7afb      	ldrb	r3, [r7, #11]
}
 8000582:	4618      	mov	r0, r3
 8000584:	3710      	adds	r7, #16
 8000586:	46bd      	mov	sp, r7
 8000588:	bd80      	pop	{r7, pc}
 800058a:	bf00      	nop
 800058c:	40023c00 	.word	0x40023c00

08000590 <FLASH_ProgramWord>:
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
{
 8000590:	b580      	push	{r7, lr}
 8000592:	b084      	sub	sp, #16
 8000594:	af00      	add	r7, sp, #0
 8000596:	6078      	str	r0, [r7, #4]
 8000598:	6039      	str	r1, [r7, #0]
  FLASH_Status status = FLASH_COMPLETE;
 800059a:	2309      	movs	r3, #9
 800059c:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation();
 800059e:	f000 f879 	bl	8000694 <FLASH_WaitForLastOperation>
 80005a2:	4603      	mov	r3, r0
 80005a4:	73fb      	strb	r3, [r7, #15]
  
  if(status == FLASH_COMPLETE)
 80005a6:	7bfb      	ldrb	r3, [r7, #15]
 80005a8:	2b09      	cmp	r3, #9
 80005aa:	d11e      	bne.n	80005ea <FLASH_ProgramWord+0x5a>
  {
    /* if the previous operation is completed, proceed to program the new data */
    FLASH->CR &= CR_PSIZE_MASK;
 80005ac:	4b11      	ldr	r3, [pc, #68]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005ae:	691b      	ldr	r3, [r3, #16]
 80005b0:	4a10      	ldr	r2, [pc, #64]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005b2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80005b6:	6113      	str	r3, [r2, #16]
    FLASH->CR |= FLASH_PSIZE_WORD;
 80005b8:	4b0e      	ldr	r3, [pc, #56]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005ba:	691b      	ldr	r3, [r3, #16]
 80005bc:	4a0d      	ldr	r2, [pc, #52]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005be:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80005c2:	6113      	str	r3, [r2, #16]
    FLASH->CR |= FLASH_CR_PG;
 80005c4:	4b0b      	ldr	r3, [pc, #44]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005c6:	691b      	ldr	r3, [r3, #16]
 80005c8:	4a0a      	ldr	r2, [pc, #40]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005ca:	f043 0301 	orr.w	r3, r3, #1
 80005ce:	6113      	str	r3, [r2, #16]
  
    *(__IO uint32_t*)Address = Data;
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	683a      	ldr	r2, [r7, #0]
 80005d4:	601a      	str	r2, [r3, #0]
        
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation();
 80005d6:	f000 f85d 	bl	8000694 <FLASH_WaitForLastOperation>
 80005da:	4603      	mov	r3, r0
 80005dc:	73fb      	strb	r3, [r7, #15]

    /* if the program operation is completed, disable the PG Bit */
    FLASH->CR &= (~FLASH_CR_PG);
 80005de:	4b05      	ldr	r3, [pc, #20]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005e0:	691b      	ldr	r3, [r3, #16]
 80005e2:	4a04      	ldr	r2, [pc, #16]	@ (80005f4 <FLASH_ProgramWord+0x64>)
 80005e4:	f023 0301 	bic.w	r3, r3, #1
 80005e8:	6113      	str	r3, [r2, #16]
  } 
  /* Return the Program Status */
  return status;
 80005ea:	7bfb      	ldrb	r3, [r7, #15]
}
 80005ec:	4618      	mov	r0, r3
 80005ee:	3710      	adds	r7, #16
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bd80      	pop	{r7, pc}
 80005f4:	40023c00 	.word	0x40023c00

080005f8 <FLASH_ClearFlag>:
  *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
  *            @arg FLASH_FLAG_RDERR: FLASH Read Protection error flag (STM32F42xx/43xxx and STM32F401xx/411xE devices)   
  * @retval None
  */
void FLASH_ClearFlag(uint32_t FLASH_FLAG)
{
 80005f8:	b480      	push	{r7}
 80005fa:	b083      	sub	sp, #12
 80005fc:	af00      	add	r7, sp, #0
 80005fe:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
  
  /* Clear the flags */
  FLASH->SR = FLASH_FLAG;
 8000600:	4a04      	ldr	r2, [pc, #16]	@ (8000614 <FLASH_ClearFlag+0x1c>)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	60d3      	str	r3, [r2, #12]
}
 8000606:	bf00      	nop
 8000608:	370c      	adds	r7, #12
 800060a:	46bd      	mov	sp, r7
 800060c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000610:	4770      	bx	lr
 8000612:	bf00      	nop
 8000614:	40023c00 	.word	0x40023c00

08000618 <FLASH_GetStatus>:
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_RD, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_GetStatus(void)
{
 8000618:	b480      	push	{r7}
 800061a:	b083      	sub	sp, #12
 800061c:	af00      	add	r7, sp, #0
  FLASH_Status flashstatus = FLASH_COMPLETE;
 800061e:	2309      	movs	r3, #9
 8000620:	71fb      	strb	r3, [r7, #7]
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 8000622:	4b1b      	ldr	r3, [pc, #108]	@ (8000690 <FLASH_GetStatus+0x78>)
 8000624:	68db      	ldr	r3, [r3, #12]
 8000626:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800062a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800062e:	d102      	bne.n	8000636 <FLASH_GetStatus+0x1e>
  {
    flashstatus = FLASH_BUSY;
 8000630:	2301      	movs	r3, #1
 8000632:	71fb      	strb	r3, [r7, #7]
 8000634:	e025      	b.n	8000682 <FLASH_GetStatus+0x6a>
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 8000636:	4b16      	ldr	r3, [pc, #88]	@ (8000690 <FLASH_GetStatus+0x78>)
 8000638:	68db      	ldr	r3, [r3, #12]
 800063a:	f003 0310 	and.w	r3, r3, #16
 800063e:	2b00      	cmp	r3, #0
 8000640:	d002      	beq.n	8000648 <FLASH_GetStatus+0x30>
    { 
      flashstatus = FLASH_ERROR_WRP;
 8000642:	2306      	movs	r3, #6
 8000644:	71fb      	strb	r3, [r7, #7]
 8000646:	e01c      	b.n	8000682 <FLASH_GetStatus+0x6a>
    }
    else
    {
      if((FLASH->SR & FLASH_FLAG_RDERR) != (uint32_t)0x00)
 8000648:	4b11      	ldr	r3, [pc, #68]	@ (8000690 <FLASH_GetStatus+0x78>)
 800064a:	68db      	ldr	r3, [r3, #12]
 800064c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000650:	2b00      	cmp	r3, #0
 8000652:	d002      	beq.n	800065a <FLASH_GetStatus+0x42>
      { 
        flashstatus = FLASH_ERROR_RD;
 8000654:	2302      	movs	r3, #2
 8000656:	71fb      	strb	r3, [r7, #7]
 8000658:	e013      	b.n	8000682 <FLASH_GetStatus+0x6a>
      } 
      else 
      {
        if((FLASH->SR & (uint32_t)0xE0) != (uint32_t)0x00)
 800065a:	4b0d      	ldr	r3, [pc, #52]	@ (8000690 <FLASH_GetStatus+0x78>)
 800065c:	68db      	ldr	r3, [r3, #12]
 800065e:	f003 03e0 	and.w	r3, r3, #224	@ 0xe0
 8000662:	2b00      	cmp	r3, #0
 8000664:	d002      	beq.n	800066c <FLASH_GetStatus+0x54>
        {
          flashstatus = FLASH_ERROR_PROGRAM; 
 8000666:	2307      	movs	r3, #7
 8000668:	71fb      	strb	r3, [r7, #7]
 800066a:	e00a      	b.n	8000682 <FLASH_GetStatus+0x6a>
        }
        else
        {
          if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 800066c:	4b08      	ldr	r3, [pc, #32]	@ (8000690 <FLASH_GetStatus+0x78>)
 800066e:	68db      	ldr	r3, [r3, #12]
 8000670:	f003 0302 	and.w	r3, r3, #2
 8000674:	2b00      	cmp	r3, #0
 8000676:	d002      	beq.n	800067e <FLASH_GetStatus+0x66>
          {
            flashstatus = FLASH_ERROR_OPERATION;
 8000678:	2308      	movs	r3, #8
 800067a:	71fb      	strb	r3, [r7, #7]
 800067c:	e001      	b.n	8000682 <FLASH_GetStatus+0x6a>
          }
          else
          {
            flashstatus = FLASH_COMPLETE;
 800067e:	2309      	movs	r3, #9
 8000680:	71fb      	strb	r3, [r7, #7]
        }
      }
    }
  }
  /* Return the FLASH Status */
  return flashstatus;
 8000682:	79fb      	ldrb	r3, [r7, #7]
}
 8000684:	4618      	mov	r0, r3
 8000686:	370c      	adds	r7, #12
 8000688:	46bd      	mov	sp, r7
 800068a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800068e:	4770      	bx	lr
 8000690:	40023c00 	.word	0x40023c00

08000694 <FLASH_WaitForLastOperation>:
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_WaitForLastOperation(void)
{ 
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
  __IO FLASH_Status status = FLASH_COMPLETE;
 800069a:	2309      	movs	r3, #9
 800069c:	71fb      	strb	r3, [r7, #7]
   
  /* Check for the FLASH Status */
  status = FLASH_GetStatus();
 800069e:	f7ff ffbb 	bl	8000618 <FLASH_GetStatus>
 80006a2:	4603      	mov	r3, r0
 80006a4:	71fb      	strb	r3, [r7, #7]

  /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
     Even if the FLASH operation fails, the BUSY flag will be reset and an error
     flag will be set */
  while(status == FLASH_BUSY)
 80006a6:	e003      	b.n	80006b0 <FLASH_WaitForLastOperation+0x1c>
  {
    status = FLASH_GetStatus();
 80006a8:	f7ff ffb6 	bl	8000618 <FLASH_GetStatus>
 80006ac:	4603      	mov	r3, r0
 80006ae:	71fb      	strb	r3, [r7, #7]
  while(status == FLASH_BUSY)
 80006b0:	79fb      	ldrb	r3, [r7, #7]
 80006b2:	b2db      	uxtb	r3, r3
 80006b4:	2b01      	cmp	r3, #1
 80006b6:	d0f7      	beq.n	80006a8 <FLASH_WaitForLastOperation+0x14>
  }
  /* Return the operation status */
  return status;
 80006b8:	79fb      	ldrb	r3, [r7, #7]
 80006ba:	b2db      	uxtb	r3, r3
}
 80006bc:	4618      	mov	r0, r3
 80006be:	3708      	adds	r7, #8
 80006c0:	46bd      	mov	sp, r7
 80006c2:	bd80      	pop	{r7, pc}

080006c4 <main>:

void RetrieveDataFromFlash();
void UpdateDataToFlash();

int main(void)
{
 80006c4:	b580      	push	{r7, lr}
 80006c6:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 80006c8:	f001 fc6c 	bl	8001fa4 <SystemCoreClockUpdate>
	AppInitCommon();
 80006cc:	f000 f928 	bl	8000920 <AppInitCommon>
	flashConfig();
 80006d0:	f7ff fdd6 	bl	8000280 <flashConfig>
	RetrieveDataFromFlash();
 80006d4:	f000 f8a8 	bl	8000828 <RetrieveDataFromFlash>
	TimeBasic_Init();
 80006d8:	f000 f810 	bl	80006fc <TimeBasic_Init>
	ConfigUSARTBuffer(Room, room);
 80006dc:	4b06      	ldr	r3, [pc, #24]	@ (80006f8 <main+0x34>)
 80006de:	781b      	ldrb	r3, [r3, #0]
 80006e0:	4619      	mov	r1, r3
 80006e2:	2002      	movs	r0, #2
 80006e4:	f001 fbb2 	bl	8001e4c <ConfigUSARTBuffer>
	USART2_SendMessage();
 80006e8:	f001 fb70 	bl	8001dcc <USART2_SendMessage>
    /* Loop forever */
	while(1){
		processTimerScheduler();
 80006ec:	f002 fc64 	bl	8002fb8 <processTimerScheduler>
		appStateManager();
 80006f0:	f000 f93a 	bl	8000968 <appStateManager>
		processTimerScheduler();
 80006f4:	bf00      	nop
 80006f6:	e7f9      	b.n	80006ec <main+0x28>
 80006f8:	2000025c 	.word	0x2000025c

080006fc <TimeBasic_Init>:
	}
}


void TimeBasic_Init(){
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b084      	sub	sp, #16
 8000700:	af00      	add	r7, sp, #0
	TIM_TimeBaseInitTypeDef Timer_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 8000702:	2101      	movs	r1, #1
 8000704:	2001      	movs	r0, #1
 8000706:	f001 ffe3 	bl	80026d0 <RCC_APB1PeriphClockCmd>

	Timer_InitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
 800070a:	2300      	movs	r3, #0
 800070c:	81bb      	strh	r3, [r7, #12]
	Timer_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;
 800070e:	2300      	movs	r3, #0
 8000710:	80fb      	strh	r3, [r7, #6]
	Timer_InitStructure.TIM_Period = 999999;
 8000712:	4b15      	ldr	r3, [pc, #84]	@ (8000768 <TimeBasic_Init+0x6c>)
 8000714:	60bb      	str	r3, [r7, #8]
	Timer_InitStructure.TIM_Prescaler = 83; //1MHz
 8000716:	2353      	movs	r3, #83	@ 0x53
 8000718:	80bb      	strh	r3, [r7, #4]
	Timer_InitStructure.TIM_RepetitionCounter = 0;
 800071a:	2300      	movs	r3, #0
 800071c:	73bb      	strb	r3, [r7, #14]

	TIM_TimeBaseInit(TIM2, &Timer_InitStructure);
 800071e:	1d3b      	adds	r3, r7, #4
 8000720:	4619      	mov	r1, r3
 8000722:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8000726:	f002 f855 	bl	80027d4 <TIM_TimeBaseInit>
	TIM_Cmd(TIM2, ENABLE);
 800072a:	2101      	movs	r1, #1
 800072c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8000730:	f002 f8ca 	bl	80028c8 <TIM_Cmd>

	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
 8000734:	2201      	movs	r2, #1
 8000736:	2101      	movs	r1, #1
 8000738:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800073c:	f002 f8e4 	bl	8002908 <TIM_ITConfig>

	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 8000740:	f44f 60e0 	mov.w	r0, #1792	@ 0x700
 8000744:	f001 fcfa 	bl	800213c <NVIC_PriorityGroupConfig>
	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
 8000748:	231c      	movs	r3, #28
 800074a:	703b      	strb	r3, [r7, #0]
	NVIC_InitStructure.NVIC_IRQChannelCmd = 0;
 800074c:	2300      	movs	r3, #0
 800074e:	70fb      	strb	r3, [r7, #3]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000750:	2300      	movs	r3, #0
 8000752:	70bb      	strb	r3, [r7, #2]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000754:	2301      	movs	r3, #1
 8000756:	70fb      	strb	r3, [r7, #3]

	NVIC_Init(&NVIC_InitStructure);
 8000758:	463b      	mov	r3, r7
 800075a:	4618      	mov	r0, r3
 800075c:	f001 fd02 	bl	8002164 <NVIC_Init>
}
 8000760:	bf00      	nop
 8000762:	3710      	adds	r7, #16
 8000764:	46bd      	mov	sp, r7
 8000766:	bd80      	pop	{r7, pc}
 8000768:	000f423f 	.word	0x000f423f

0800076c <TIM2_IRQHandler>:

void TIM2_IRQHandler(void){
 800076c:	b580      	push	{r7, lr}
 800076e:	af00      	add	r7, sp, #0
	time[2]++;
 8000770:	4b2a      	ldr	r3, [pc, #168]	@ (800081c <TIM2_IRQHandler+0xb0>)
 8000772:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8000776:	b29b      	uxth	r3, r3
 8000778:	3301      	adds	r3, #1
 800077a:	b29b      	uxth	r3, r3
 800077c:	b21a      	sxth	r2, r3
 800077e:	4b27      	ldr	r3, [pc, #156]	@ (800081c <TIM2_IRQHandler+0xb0>)
 8000780:	809a      	strh	r2, [r3, #4]
	if (time[2] >= 60){
 8000782:	4b26      	ldr	r3, [pc, #152]	@ (800081c <TIM2_IRQHandler+0xb0>)
 8000784:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8000788:	2b3b      	cmp	r3, #59	@ 0x3b
 800078a:	dd17      	ble.n	80007bc <TIM2_IRQHandler+0x50>
		time[2] = 0;
 800078c:	4b23      	ldr	r3, [pc, #140]	@ (800081c <TIM2_IRQHandler+0xb0>)
 800078e:	2200      	movs	r2, #0
 8000790:	809a      	strh	r2, [r3, #4]
		time[1]++;
 8000792:	4b22      	ldr	r3, [pc, #136]	@ (800081c <TIM2_IRQHandler+0xb0>)
 8000794:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8000798:	b29b      	uxth	r3, r3
 800079a:	3301      	adds	r3, #1
 800079c:	b29b      	uxth	r3, r3
 800079e:	b21a      	sxth	r2, r3
 80007a0:	4b1e      	ldr	r3, [pc, #120]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007a2:	805a      	strh	r2, [r3, #2]
		UpdateDataToFlash();
 80007a4:	f000 f874 	bl	8000890 <UpdateDataToFlash>
		if((sceneNumber == 0) && (currentChoice == Screen0_None)){
 80007a8:	4b1d      	ldr	r3, [pc, #116]	@ (8000820 <TIM2_IRQHandler+0xb4>)
 80007aa:	781b      	ldrb	r3, [r3, #0]
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d105      	bne.n	80007bc <TIM2_IRQHandler+0x50>
 80007b0:	4b1c      	ldr	r3, [pc, #112]	@ (8000824 <TIM2_IRQHandler+0xb8>)
 80007b2:	781b      	ldrb	r3, [r3, #0]
 80007b4:	2b00      	cmp	r3, #0
 80007b6:	d101      	bne.n	80007bc <TIM2_IRQHandler+0x50>
			LoadConfiguration();
 80007b8:	f001 f9cc 	bl	8001b54 <LoadConfiguration>
		}
	}if(time[1] >= 60){
 80007bc:	4b17      	ldr	r3, [pc, #92]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80007c2:	2b3b      	cmp	r3, #59	@ 0x3b
 80007c4:	dd15      	ble.n	80007f2 <TIM2_IRQHandler+0x86>
		time[1] = 0;
 80007c6:	4b15      	ldr	r3, [pc, #84]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007c8:	2200      	movs	r2, #0
 80007ca:	805a      	strh	r2, [r3, #2]
		time[1]++;
 80007cc:	4b13      	ldr	r3, [pc, #76]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80007d2:	b29b      	uxth	r3, r3
 80007d4:	3301      	adds	r3, #1
 80007d6:	b29b      	uxth	r3, r3
 80007d8:	b21a      	sxth	r2, r3
 80007da:	4b10      	ldr	r3, [pc, #64]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007dc:	805a      	strh	r2, [r3, #2]

		ConfigUSARTBuffer(Hour, time[0]);
 80007de:	4b0f      	ldr	r3, [pc, #60]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007e0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80007e4:	b2db      	uxtb	r3, r3
 80007e6:	4619      	mov	r1, r3
 80007e8:	2001      	movs	r0, #1
 80007ea:	f001 fb2f 	bl	8001e4c <ConfigUSARTBuffer>
		USART2_SendMessage();
 80007ee:	f001 faed 	bl	8001dcc <USART2_SendMessage>
	}if(time[0] >= 24){
 80007f2:	4b0a      	ldr	r3, [pc, #40]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80007f8:	2b17      	cmp	r3, #23
 80007fa:	dd02      	ble.n	8000802 <TIM2_IRQHandler+0x96>
		time[0] = 0;
 80007fc:	4b07      	ldr	r3, [pc, #28]	@ (800081c <TIM2_IRQHandler+0xb0>)
 80007fe:	2200      	movs	r2, #0
 8000800:	801a      	strh	r2, [r3, #0]
	}
	TIM_SetCounter(TIM2, 0);
 8000802:	2100      	movs	r1, #0
 8000804:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8000808:	f002 f850 	bl	80028ac <TIM_SetCounter>
	TIM_ClearFlag(TIM2, TIM_IT_Update);
 800080c:	2101      	movs	r1, #1
 800080e:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8000812:	f002 f89d 	bl	8002950 <TIM_ClearFlag>
}
 8000816:	bf00      	nop
 8000818:	bd80      	pop	{r7, pc}
 800081a:	bf00      	nop
 800081c:	20000204 	.word	0x20000204
 8000820:	200000fc 	.word	0x200000fc
 8000824:	200001bc 	.word	0x200001bc

08000828 <RetrieveDataFromFlash>:

void RetrieveDataFromFlash(){
 8000828:	b580      	push	{r7, lr}
 800082a:	af00      	add	r7, sp, #0
	color[0] = (int16_t)flashReadWord(FLASH_ID_RED);
 800082c:	2003      	movs	r0, #3
 800082e:	f7ff fd67 	bl	8000300 <flashReadWord>
 8000832:	4603      	mov	r3, r0
 8000834:	b21a      	sxth	r2, r3
 8000836:	4b13      	ldr	r3, [pc, #76]	@ (8000884 <RetrieveDataFromFlash+0x5c>)
 8000838:	801a      	strh	r2, [r3, #0]
	color[1] = (int16_t)flashReadWord(FLASH_ID_GREEN);
 800083a:	2004      	movs	r0, #4
 800083c:	f7ff fd60 	bl	8000300 <flashReadWord>
 8000840:	4603      	mov	r3, r0
 8000842:	b21a      	sxth	r2, r3
 8000844:	4b0f      	ldr	r3, [pc, #60]	@ (8000884 <RetrieveDataFromFlash+0x5c>)
 8000846:	805a      	strh	r2, [r3, #2]
	color[2] = (int16_t)flashReadWord(FLASH_ID_BLUE);
 8000848:	2005      	movs	r0, #5
 800084a:	f7ff fd59 	bl	8000300 <flashReadWord>
 800084e:	4603      	mov	r3, r0
 8000850:	b21a      	sxth	r2, r3
 8000852:	4b0c      	ldr	r3, [pc, #48]	@ (8000884 <RetrieveDataFromFlash+0x5c>)
 8000854:	809a      	strh	r2, [r3, #4]

	time[0] = (int16_t)flashReadWord(FLASH_ID_HOUR);
 8000856:	2001      	movs	r0, #1
 8000858:	f7ff fd52 	bl	8000300 <flashReadWord>
 800085c:	4603      	mov	r3, r0
 800085e:	b21a      	sxth	r2, r3
 8000860:	4b09      	ldr	r3, [pc, #36]	@ (8000888 <RetrieveDataFromFlash+0x60>)
 8000862:	801a      	strh	r2, [r3, #0]
	time[1] = (int16_t)flashReadWord(FLASH_ID_MINUTE);
 8000864:	2002      	movs	r0, #2
 8000866:	f7ff fd4b 	bl	8000300 <flashReadWord>
 800086a:	4603      	mov	r3, r0
 800086c:	b21a      	sxth	r2, r3
 800086e:	4b06      	ldr	r3, [pc, #24]	@ (8000888 <RetrieveDataFromFlash+0x60>)
 8000870:	805a      	strh	r2, [r3, #2]
	room = (uint8_t)flashReadWord(FLASH_ID_ROOM);
 8000872:	2006      	movs	r0, #6
 8000874:	f7ff fd44 	bl	8000300 <flashReadWord>
 8000878:	4603      	mov	r3, r0
 800087a:	b2da      	uxtb	r2, r3
 800087c:	4b03      	ldr	r3, [pc, #12]	@ (800088c <RetrieveDataFromFlash+0x64>)
 800087e:	701a      	strb	r2, [r3, #0]
}
 8000880:	bf00      	nop
 8000882:	bd80      	pop	{r7, pc}
 8000884:	200001c0 	.word	0x200001c0
 8000888:	20000204 	.word	0x20000204
 800088c:	2000025c 	.word	0x2000025c

08000890 <UpdateDataToFlash>:


void UpdateDataToFlash(){
 8000890:	b580      	push	{r7, lr}
 8000892:	b082      	sub	sp, #8
 8000894:	af00      	add	r7, sp, #0
	FLASH_Status stat;
	while (flashClear() != FLASH_COMPLETE);
 8000896:	bf00      	nop
 8000898:	f7ff fd4e 	bl	8000338 <flashClear>
 800089c:	4603      	mov	r3, r0
 800089e:	2b09      	cmp	r3, #9
 80008a0:	d1fa      	bne.n	8000898 <UpdateDataToFlash+0x8>
	stat= flashWrite(FLASH_ID_RED, (uint32_t)color[0]);
 80008a2:	4b1c      	ldr	r3, [pc, #112]	@ (8000914 <UpdateDataToFlash+0x84>)
 80008a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80008a8:	4619      	mov	r1, r3
 80008aa:	2003      	movs	r0, #3
 80008ac:	f7ff fd10 	bl	80002d0 <flashWrite>
 80008b0:	4603      	mov	r3, r0
 80008b2:	71fb      	strb	r3, [r7, #7]
	stat=flashWrite(FLASH_ID_GREEN,(uint32_t)color[1]);
 80008b4:	4b17      	ldr	r3, [pc, #92]	@ (8000914 <UpdateDataToFlash+0x84>)
 80008b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80008ba:	4619      	mov	r1, r3
 80008bc:	2004      	movs	r0, #4
 80008be:	f7ff fd07 	bl	80002d0 <flashWrite>
 80008c2:	4603      	mov	r3, r0
 80008c4:	71fb      	strb	r3, [r7, #7]
	stat=flashWrite(FLASH_ID_BLUE, (uint32_t)color[2]);
 80008c6:	4b13      	ldr	r3, [pc, #76]	@ (8000914 <UpdateDataToFlash+0x84>)
 80008c8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80008cc:	4619      	mov	r1, r3
 80008ce:	2005      	movs	r0, #5
 80008d0:	f7ff fcfe 	bl	80002d0 <flashWrite>
 80008d4:	4603      	mov	r3, r0
 80008d6:	71fb      	strb	r3, [r7, #7]

	stat=flashWrite(FLASH_ID_HOUR, (uint32_t)time[0]);
 80008d8:	4b0f      	ldr	r3, [pc, #60]	@ (8000918 <UpdateDataToFlash+0x88>)
 80008da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80008de:	4619      	mov	r1, r3
 80008e0:	2001      	movs	r0, #1
 80008e2:	f7ff fcf5 	bl	80002d0 <flashWrite>
 80008e6:	4603      	mov	r3, r0
 80008e8:	71fb      	strb	r3, [r7, #7]
	stat=flashWrite(FLASH_ID_MINUTE, (uint32_t)time[1]);
 80008ea:	4b0b      	ldr	r3, [pc, #44]	@ (8000918 <UpdateDataToFlash+0x88>)
 80008ec:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80008f0:	4619      	mov	r1, r3
 80008f2:	2002      	movs	r0, #2
 80008f4:	f7ff fcec 	bl	80002d0 <flashWrite>
 80008f8:	4603      	mov	r3, r0
 80008fa:	71fb      	strb	r3, [r7, #7]
	stat=flashWrite(FLASH_ID_ROOM, (uint32_t)room);
 80008fc:	4b07      	ldr	r3, [pc, #28]	@ (800091c <UpdateDataToFlash+0x8c>)
 80008fe:	781b      	ldrb	r3, [r3, #0]
 8000900:	4619      	mov	r1, r3
 8000902:	2006      	movs	r0, #6
 8000904:	f7ff fce4 	bl	80002d0 <flashWrite>
 8000908:	4603      	mov	r3, r0
 800090a:	71fb      	strb	r3, [r7, #7]
}
 800090c:	bf00      	nop
 800090e:	3708      	adds	r7, #8
 8000910:	46bd      	mov	sp, r7
 8000912:	bd80      	pop	{r7, pc}
 8000914:	200001c0 	.word	0x200001c0
 8000918:	20000204 	.word	0x20000204
 800091c:	2000025c 	.word	0x2000025c

08000920 <AppInitCommon>:


void AppInitCommon(){
 8000920:	b580      	push	{r7, lr}
 8000922:	b082      	sub	sp, #8
 8000924:	af02      	add	r7, sp, #8
	TimerInit();
 8000926:	f002 fa67 	bl	8002df8 <TimerInit>
	Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID);
 800092a:	2100      	movs	r1, #0
 800092c:	480c      	ldr	r0, [pc, #48]	@ (8000960 <AppInitCommon+0x40>)
 800092e:	f002 fd99 	bl	8003464 <Ucglib4WireSWSPI_begin>
	ucg_SetFont(&ucg ,ucg_font_ncenB10_hr);
 8000932:	490c      	ldr	r1, [pc, #48]	@ (8000964 <AppInitCommon+0x44>)
 8000934:	480a      	ldr	r0, [pc, #40]	@ (8000960 <AppInitCommon+0x40>)
 8000936:	f003 fef5 	bl	8004724 <ucg_SetFont>
	ucg_SetColor(&ucg, 0, 255, 255, 255); // Trang
 800093a:	23ff      	movs	r3, #255	@ 0xff
 800093c:	9300      	str	r3, [sp, #0]
 800093e:	23ff      	movs	r3, #255	@ 0xff
 8000940:	22ff      	movs	r2, #255	@ 0xff
 8000942:	2100      	movs	r1, #0
 8000944:	4806      	ldr	r0, [pc, #24]	@ (8000960 <AppInitCommon+0x40>)
 8000946:	f003 ffcc 	bl	80048e2 <ucg_SetColor>
	ucg_SetRotate180(&ucg);
 800094a:	4805      	ldr	r0, [pc, #20]	@ (8000960 <AppInitCommon+0x40>)
 800094c:	f004 f8c4 	bl	8004ad8 <ucg_SetRotate180>
	USART2_Init();
 8000950:	f001 f982 	bl	8001c58 <USART2_Init>
	ButtonInit();
 8000954:	f001 f85a 	bl	8001a0c <ButtonInit>
}
 8000958:	bf00      	nop
 800095a:	46bd      	mov	sp, r7
 800095c:	bd80      	pop	{r7, pc}
 800095e:	bf00      	nop
 8000960:	20000100 	.word	0x20000100
 8000964:	0800645c 	.word	0x0800645c

08000968 <appStateManager>:

void appStateManager(){
 8000968:	b580      	push	{r7, lr}
 800096a:	af00      	add	r7, sp, #0
	switch(deviceState){
 800096c:	4b08      	ldr	r3, [pc, #32]	@ (8000990 <appStateManager+0x28>)
 800096e:	781b      	ldrb	r3, [r3, #0]
 8000970:	2b00      	cmp	r3, #0
 8000972:	d002      	beq.n	800097a <appStateManager+0x12>
 8000974:	2b02      	cmp	r3, #2
 8000976:	d006      	beq.n	8000986 <appStateManager+0x1e>
		break;
	case MAIN:
		MAIN_RefreshChoices();
		break;
	default:
		break;
 8000978:	e008      	b.n	800098c <appStateManager+0x24>
		LoadConfiguration();
 800097a:	f001 f8eb 	bl	8001b54 <LoadConfiguration>
		deviceState = MAIN;
 800097e:	4b04      	ldr	r3, [pc, #16]	@ (8000990 <appStateManager+0x28>)
 8000980:	2202      	movs	r2, #2
 8000982:	701a      	strb	r2, [r3, #0]
		break;
 8000984:	e002      	b.n	800098c <appStateManager+0x24>
		MAIN_RefreshChoices();
 8000986:	f000 f805 	bl	8000994 <MAIN_RefreshChoices>
		break;
 800098a:	bf00      	nop
	}
}
 800098c:	bf00      	nop
 800098e:	bd80      	pop	{r7, pc}
 8000990:	200000fe 	.word	0x200000fe

08000994 <MAIN_RefreshChoices>:

void MAIN_RefreshChoices(){
 8000994:	b590      	push	{r4, r7, lr}
 8000996:	b083      	sub	sp, #12
 8000998:	af02      	add	r7, sp, #8
	//wait till all button is release
	switch(ButtonState){
 800099a:	4b76      	ldr	r3, [pc, #472]	@ (8000b74 <MAIN_RefreshChoices+0x1e0>)
 800099c:	781b      	ldrb	r3, [r3, #0]
 800099e:	2b03      	cmp	r3, #3
 80009a0:	f200 80e3 	bhi.w	8000b6a <MAIN_RefreshChoices+0x1d6>
 80009a4:	a201      	add	r2, pc, #4	@ (adr r2, 80009ac <MAIN_RefreshChoices+0x18>)
 80009a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009aa:	bf00      	nop
 80009ac:	080009bd 	.word	0x080009bd
 80009b0:	08000a03 	.word	0x08000a03
 80009b4:	08000a93 	.word	0x08000a93
 80009b8:	08000b3d 	.word	0x08000b3d
	case ButtonReleased:
		VerticalValue = 0;
 80009bc:	4b6e      	ldr	r3, [pc, #440]	@ (8000b78 <MAIN_RefreshChoices+0x1e4>)
 80009be:	2200      	movs	r2, #0
 80009c0:	701a      	strb	r2, [r3, #0]
		HorizontalValue = 0;
 80009c2:	4b6e      	ldr	r3, [pc, #440]	@ (8000b7c <MAIN_RefreshChoices+0x1e8>)
 80009c4:	2200      	movs	r2, #0
 80009c6:	701a      	strb	r2, [r3, #0]
		if(ALL_BUTTON_NOT_RELEASED){
 80009c8:	2001      	movs	r0, #1
 80009ca:	f002 f9ab 	bl	8002d24 <Button_GetLogicInputPin>
 80009ce:	4603      	mov	r3, r0
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d012      	beq.n	80009fa <MAIN_RefreshChoices+0x66>
 80009d4:	2002      	movs	r0, #2
 80009d6:	f002 f9a5 	bl	8002d24 <Button_GetLogicInputPin>
 80009da:	4603      	mov	r3, r0
 80009dc:	2b00      	cmp	r3, #0
 80009de:	d00c      	beq.n	80009fa <MAIN_RefreshChoices+0x66>
 80009e0:	2004      	movs	r0, #4
 80009e2:	f002 f99f 	bl	8002d24 <Button_GetLogicInputPin>
 80009e6:	4603      	mov	r3, r0
 80009e8:	2b00      	cmp	r3, #0
 80009ea:	d006      	beq.n	80009fa <MAIN_RefreshChoices+0x66>
 80009ec:	2005      	movs	r0, #5
 80009ee:	f002 f999 	bl	8002d24 <Button_GetLogicInputPin>
 80009f2:	4603      	mov	r3, r0
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	f040 80b7 	bne.w	8000b68 <MAIN_RefreshChoices+0x1d4>
			ButtonState = ButtonPressed;
 80009fa:	4b5e      	ldr	r3, [pc, #376]	@ (8000b74 <MAIN_RefreshChoices+0x1e0>)
 80009fc:	2201      	movs	r2, #1
 80009fe:	701a      	strb	r2, [r3, #0]
		}
		break;
 8000a00:	e0b2      	b.n	8000b68 <MAIN_RefreshChoices+0x1d4>
	case ButtonPressed:
		 HorizontalValue= - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID2) + (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID4);
 8000a02:	2004      	movs	r0, #4
 8000a04:	f002 f98e 	bl	8002d24 <Button_GetLogicInputPin>
 8000a08:	4603      	mov	r3, r0
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	bf0c      	ite	eq
 8000a0e:	2301      	moveq	r3, #1
 8000a10:	2300      	movne	r3, #0
 8000a12:	b2db      	uxtb	r3, r3
 8000a14:	461c      	mov	r4, r3
 8000a16:	2002      	movs	r0, #2
 8000a18:	f002 f984 	bl	8002d24 <Button_GetLogicInputPin>
 8000a1c:	4603      	mov	r3, r0
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	bf0c      	ite	eq
 8000a22:	2301      	moveq	r3, #1
 8000a24:	2300      	movne	r3, #0
 8000a26:	b2db      	uxtb	r3, r3
 8000a28:	1ae3      	subs	r3, r4, r3
 8000a2a:	b2db      	uxtb	r3, r3
 8000a2c:	b25a      	sxtb	r2, r3
 8000a2e:	4b53      	ldr	r3, [pc, #332]	@ (8000b7c <MAIN_RefreshChoices+0x1e8>)
 8000a30:	701a      	strb	r2, [r3, #0]
		 VerticalValue=  (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID5) - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID1);
 8000a32:	2005      	movs	r0, #5
 8000a34:	f002 f976 	bl	8002d24 <Button_GetLogicInputPin>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	bf0c      	ite	eq
 8000a3e:	2301      	moveq	r3, #1
 8000a40:	2300      	movne	r3, #0
 8000a42:	b2db      	uxtb	r3, r3
 8000a44:	461c      	mov	r4, r3
 8000a46:	2001      	movs	r0, #1
 8000a48:	f002 f96c 	bl	8002d24 <Button_GetLogicInputPin>
 8000a4c:	4603      	mov	r3, r0
 8000a4e:	2b00      	cmp	r3, #0
 8000a50:	bf0c      	ite	eq
 8000a52:	2301      	moveq	r3, #1
 8000a54:	2300      	movne	r3, #0
 8000a56:	b2db      	uxtb	r3, r3
 8000a58:	1ae3      	subs	r3, r4, r3
 8000a5a:	b2db      	uxtb	r3, r3
 8000a5c:	b25a      	sxtb	r2, r3
 8000a5e:	4b46      	ldr	r3, [pc, #280]	@ (8000b78 <MAIN_RefreshChoices+0x1e4>)
 8000a60:	701a      	strb	r2, [r3, #0]
		ProcessDirection();
 8000a62:	f000 f933 	bl	8000ccc <ProcessDirection>
		TimerStop(ButtonHoldTimer);
 8000a66:	4b46      	ldr	r3, [pc, #280]	@ (8000b80 <MAIN_RefreshChoices+0x1ec>)
 8000a68:	781b      	ldrb	r3, [r3, #0]
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	f002 fa48 	bl	8002f00 <TimerStop>
		ButtonHoldTimer = TimerStart("ProcessDir",500, TIMER_REPEAT_FOREVER, ProcessDirection, 0);
 8000a70:	2300      	movs	r3, #0
 8000a72:	9300      	str	r3, [sp, #0]
 8000a74:	4b43      	ldr	r3, [pc, #268]	@ (8000b84 <MAIN_RefreshChoices+0x1f0>)
 8000a76:	22ff      	movs	r2, #255	@ 0xff
 8000a78:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000a7c:	4842      	ldr	r0, [pc, #264]	@ (8000b88 <MAIN_RefreshChoices+0x1f4>)
 8000a7e:	f002 f9dd 	bl	8002e3c <TimerStart>
 8000a82:	4603      	mov	r3, r0
 8000a84:	461a      	mov	r2, r3
 8000a86:	4b3e      	ldr	r3, [pc, #248]	@ (8000b80 <MAIN_RefreshChoices+0x1ec>)
 8000a88:	701a      	strb	r2, [r3, #0]
		ButtonState = ButtonHolding;
 8000a8a:	4b3a      	ldr	r3, [pc, #232]	@ (8000b74 <MAIN_RefreshChoices+0x1e0>)
 8000a8c:	2202      	movs	r2, #2
 8000a8e:	701a      	strb	r2, [r3, #0]
		break;
 8000a90:	e06b      	b.n	8000b6a <MAIN_RefreshChoices+0x1d6>
	case ButtonHolding:
		if(ALL_BUTTON_RELEASED){
 8000a92:	2001      	movs	r0, #1
 8000a94:	f002 f946 	bl	8002d24 <Button_GetLogicInputPin>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d01d      	beq.n	8000ada <MAIN_RefreshChoices+0x146>
 8000a9e:	2002      	movs	r0, #2
 8000aa0:	f002 f940 	bl	8002d24 <Button_GetLogicInputPin>
 8000aa4:	4603      	mov	r3, r0
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	d017      	beq.n	8000ada <MAIN_RefreshChoices+0x146>
 8000aaa:	2004      	movs	r0, #4
 8000aac:	f002 f93a 	bl	8002d24 <Button_GetLogicInputPin>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d011      	beq.n	8000ada <MAIN_RefreshChoices+0x146>
 8000ab6:	2005      	movs	r0, #5
 8000ab8:	f002 f934 	bl	8002d24 <Button_GetLogicInputPin>
 8000abc:	4603      	mov	r3, r0
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d00b      	beq.n	8000ada <MAIN_RefreshChoices+0x146>
			ButtonState = ButtonSubmitted;
 8000ac2:	4b2c      	ldr	r3, [pc, #176]	@ (8000b74 <MAIN_RefreshChoices+0x1e0>)
 8000ac4:	2203      	movs	r2, #3
 8000ac6:	701a      	strb	r2, [r3, #0]
			TimerStop(ButtonHoldTimer);
 8000ac8:	4b2d      	ldr	r3, [pc, #180]	@ (8000b80 <MAIN_RefreshChoices+0x1ec>)
 8000aca:	781b      	ldrb	r3, [r3, #0]
 8000acc:	4618      	mov	r0, r3
 8000ace:	f002 fa17 	bl	8002f00 <TimerStop>
			ButtonHoldTimer = NO_TIMER;
 8000ad2:	4b2b      	ldr	r3, [pc, #172]	@ (8000b80 <MAIN_RefreshChoices+0x1ec>)
 8000ad4:	22ff      	movs	r2, #255	@ 0xff
 8000ad6:	701a      	strb	r2, [r3, #0]
		}else{
			HorizontalValue= - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID2) + (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID4);
			VerticalValue = (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID5) - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID1);
		}
		break;
 8000ad8:	e047      	b.n	8000b6a <MAIN_RefreshChoices+0x1d6>
			HorizontalValue= - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID2) + (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID4);
 8000ada:	2004      	movs	r0, #4
 8000adc:	f002 f922 	bl	8002d24 <Button_GetLogicInputPin>
 8000ae0:	4603      	mov	r3, r0
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	bf0c      	ite	eq
 8000ae6:	2301      	moveq	r3, #1
 8000ae8:	2300      	movne	r3, #0
 8000aea:	b2db      	uxtb	r3, r3
 8000aec:	461c      	mov	r4, r3
 8000aee:	2002      	movs	r0, #2
 8000af0:	f002 f918 	bl	8002d24 <Button_GetLogicInputPin>
 8000af4:	4603      	mov	r3, r0
 8000af6:	2b00      	cmp	r3, #0
 8000af8:	bf0c      	ite	eq
 8000afa:	2301      	moveq	r3, #1
 8000afc:	2300      	movne	r3, #0
 8000afe:	b2db      	uxtb	r3, r3
 8000b00:	1ae3      	subs	r3, r4, r3
 8000b02:	b2db      	uxtb	r3, r3
 8000b04:	b25a      	sxtb	r2, r3
 8000b06:	4b1d      	ldr	r3, [pc, #116]	@ (8000b7c <MAIN_RefreshChoices+0x1e8>)
 8000b08:	701a      	strb	r2, [r3, #0]
			VerticalValue = (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID5) - (int8_t)!Button_GetLogicInputPin(BUTTON_KIT_ID1);
 8000b0a:	2005      	movs	r0, #5
 8000b0c:	f002 f90a 	bl	8002d24 <Button_GetLogicInputPin>
 8000b10:	4603      	mov	r3, r0
 8000b12:	2b00      	cmp	r3, #0
 8000b14:	bf0c      	ite	eq
 8000b16:	2301      	moveq	r3, #1
 8000b18:	2300      	movne	r3, #0
 8000b1a:	b2db      	uxtb	r3, r3
 8000b1c:	461c      	mov	r4, r3
 8000b1e:	2001      	movs	r0, #1
 8000b20:	f002 f900 	bl	8002d24 <Button_GetLogicInputPin>
 8000b24:	4603      	mov	r3, r0
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	bf0c      	ite	eq
 8000b2a:	2301      	moveq	r3, #1
 8000b2c:	2300      	movne	r3, #0
 8000b2e:	b2db      	uxtb	r3, r3
 8000b30:	1ae3      	subs	r3, r4, r3
 8000b32:	b2db      	uxtb	r3, r3
 8000b34:	b25a      	sxtb	r2, r3
 8000b36:	4b10      	ldr	r3, [pc, #64]	@ (8000b78 <MAIN_RefreshChoices+0x1e4>)
 8000b38:	701a      	strb	r2, [r3, #0]
		break;
 8000b3a:	e016      	b.n	8000b6a <MAIN_RefreshChoices+0x1d6>
	case ButtonSubmitted:
		ButtonState = ButtonReleased;
 8000b3c:	4b0d      	ldr	r3, [pc, #52]	@ (8000b74 <MAIN_RefreshChoices+0x1e0>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	701a      	strb	r2, [r3, #0]
		TimerStop(SendDataTimer);
 8000b42:	4b12      	ldr	r3, [pc, #72]	@ (8000b8c <MAIN_RefreshChoices+0x1f8>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	4618      	mov	r0, r3
 8000b48:	f002 f9da 	bl	8002f00 <TimerStop>
		SendDataTimer = TimerStart("SendData",1000, TIMER_REPEAT_ONE_TIME, USART2_SendMessage, 0);
 8000b4c:	2300      	movs	r3, #0
 8000b4e:	9300      	str	r3, [sp, #0]
 8000b50:	4b0f      	ldr	r3, [pc, #60]	@ (8000b90 <MAIN_RefreshChoices+0x1fc>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000b58:	480e      	ldr	r0, [pc, #56]	@ (8000b94 <MAIN_RefreshChoices+0x200>)
 8000b5a:	f002 f96f 	bl	8002e3c <TimerStart>
 8000b5e:	4603      	mov	r3, r0
 8000b60:	461a      	mov	r2, r3
 8000b62:	4b0a      	ldr	r3, [pc, #40]	@ (8000b8c <MAIN_RefreshChoices+0x1f8>)
 8000b64:	701a      	strb	r2, [r3, #0]
		break;
 8000b66:	e000      	b.n	8000b6a <MAIN_RefreshChoices+0x1d6>
		break;
 8000b68:	bf00      	nop
	}
}
 8000b6a:	bf00      	nop
 8000b6c:	3704      	adds	r7, #4
 8000b6e:	46bd      	mov	sp, r7
 8000b70:	bd90      	pop	{r4, r7, pc}
 8000b72:	bf00      	nop
 8000b74:	2000025d 	.word	0x2000025d
 8000b78:	200001b4 	.word	0x200001b4
 8000b7c:	200001b5 	.word	0x200001b5
 8000b80:	2000001b 	.word	0x2000001b
 8000b84:	08000ccd 	.word	0x08000ccd
 8000b88:	08006090 	.word	0x08006090
 8000b8c:	2000001c 	.word	0x2000001c
 8000b90:	08001dcd 	.word	0x08001dcd
 8000b94:	0800609c 	.word	0x0800609c

08000b98 <SubmitButtonHandler>:

void SubmitButtonHandler(){
 8000b98:	b580      	push	{r7, lr}
 8000b9a:	af00      	add	r7, sp, #0
	UpdateDataToFlash();
 8000b9c:	f7ff fe78 	bl	8000890 <UpdateDataToFlash>
	if (sceneNumber == 0){
 8000ba0:	4b47      	ldr	r3, [pc, #284]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000ba2:	781b      	ldrb	r3, [r3, #0]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d106      	bne.n	8000bb6 <SubmitButtonHandler+0x1e>
		sceneNumber = 1;
 8000ba8:	4b45      	ldr	r3, [pc, #276]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000baa:	2201      	movs	r2, #1
 8000bac:	701a      	strb	r2, [r3, #0]
		currentChoice = Screen1_Setting;
 8000bae:	4b45      	ldr	r3, [pc, #276]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000bb0:	2208      	movs	r2, #8
 8000bb2:	701a      	strb	r2, [r3, #0]
 8000bb4:	e080      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}
	else if(sceneNumber == 1){
 8000bb6:	4b42      	ldr	r3, [pc, #264]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000bb8:	781b      	ldrb	r3, [r3, #0]
 8000bba:	2b01      	cmp	r3, #1
 8000bbc:	d122      	bne.n	8000c04 <SubmitButtonHandler+0x6c>
		if (currentChoice == Screen1_Manual){
 8000bbe:	4b41      	ldr	r3, [pc, #260]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000bc0:	781b      	ldrb	r3, [r3, #0]
 8000bc2:	2b01      	cmp	r3, #1
 8000bc4:	d106      	bne.n	8000bd4 <SubmitButtonHandler+0x3c>
			sceneNumber = 2;
 8000bc6:	4b3e      	ldr	r3, [pc, #248]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000bc8:	2202      	movs	r2, #2
 8000bca:	701a      	strb	r2, [r3, #0]
			currentChoice = Screen2_Red;
 8000bcc:	4b3d      	ldr	r3, [pc, #244]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000bce:	220a      	movs	r2, #10
 8000bd0:	701a      	strb	r2, [r3, #0]
 8000bd2:	e010      	b.n	8000bf6 <SubmitButtonHandler+0x5e>
		}else if (currentChoice == Screen1_Setting){
 8000bd4:	4b3b      	ldr	r3, [pc, #236]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000bd6:	781b      	ldrb	r3, [r3, #0]
 8000bd8:	2b08      	cmp	r3, #8
 8000bda:	d106      	bne.n	8000bea <SubmitButtonHandler+0x52>
			sceneNumber = 3;
 8000bdc:	4b38      	ldr	r3, [pc, #224]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000bde:	2203      	movs	r2, #3
 8000be0:	701a      	strb	r2, [r3, #0]
			currentChoice = Screen3_Room;
 8000be2:	4b38      	ldr	r3, [pc, #224]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000be4:	220d      	movs	r2, #13
 8000be6:	701a      	strb	r2, [r3, #0]
 8000be8:	e005      	b.n	8000bf6 <SubmitButtonHandler+0x5e>
		}else{
			sceneNumber = 6;
 8000bea:	4b35      	ldr	r3, [pc, #212]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000bec:	2206      	movs	r2, #6
 8000bee:	701a      	strb	r2, [r3, #0]
			currentChoice = Screen6_End;
 8000bf0:	4b34      	ldr	r3, [pc, #208]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000bf2:	2216      	movs	r2, #22
 8000bf4:	701a      	strb	r2, [r3, #0]
		}
		userChoiceXY[0] = 0;
 8000bf6:	4b34      	ldr	r3, [pc, #208]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	801a      	strh	r2, [r3, #0]
		userChoiceXY[1] = 0;
 8000bfc:	4b32      	ldr	r3, [pc, #200]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	805a      	strh	r2, [r3, #2]
 8000c02:	e059      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}else if (sceneNumber == 2){
 8000c04:	4b2e      	ldr	r3, [pc, #184]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	2b02      	cmp	r3, #2
 8000c0a:	d109      	bne.n	8000c20 <SubmitButtonHandler+0x88>
		sceneNumber = 6;
 8000c0c:	4b2c      	ldr	r3, [pc, #176]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c0e:	2206      	movs	r2, #6
 8000c10:	701a      	strb	r2, [r3, #0]
		currentChoice = Screen6_End;
 8000c12:	4b2c      	ldr	r3, [pc, #176]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c14:	2216      	movs	r2, #22
 8000c16:	701a      	strb	r2, [r3, #0]
		userChoiceXY[0] = 0;
 8000c18:	4b2b      	ldr	r3, [pc, #172]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c1a:	2200      	movs	r2, #0
 8000c1c:	801a      	strh	r2, [r3, #0]
 8000c1e:	e04b      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}else if (sceneNumber == 3){
 8000c20:	4b27      	ldr	r3, [pc, #156]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c22:	781b      	ldrb	r3, [r3, #0]
 8000c24:	2b03      	cmp	r3, #3
 8000c26:	d11b      	bne.n	8000c60 <SubmitButtonHandler+0xc8>
		if (currentChoice == Screen3_Room){
 8000c28:	4b26      	ldr	r3, [pc, #152]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c2a:	781b      	ldrb	r3, [r3, #0]
 8000c2c:	2b0d      	cmp	r3, #13
 8000c2e:	d106      	bne.n	8000c3e <SubmitButtonHandler+0xa6>
			sceneNumber = 4;
 8000c30:	4b23      	ldr	r3, [pc, #140]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c32:	2204      	movs	r2, #4
 8000c34:	701a      	strb	r2, [r3, #0]
			currentChoice = Screen4_Living;
 8000c36:	4b23      	ldr	r3, [pc, #140]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c38:	220f      	movs	r2, #15
 8000c3a:	701a      	strb	r2, [r3, #0]
 8000c3c:	e009      	b.n	8000c52 <SubmitButtonHandler+0xba>
		}else if (currentChoice == Screen3_Time){
 8000c3e:	4b21      	ldr	r3, [pc, #132]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c40:	781b      	ldrb	r3, [r3, #0]
 8000c42:	2b0e      	cmp	r3, #14
 8000c44:	d105      	bne.n	8000c52 <SubmitButtonHandler+0xba>
			sceneNumber = 5;
 8000c46:	4b1e      	ldr	r3, [pc, #120]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c48:	2205      	movs	r2, #5
 8000c4a:	701a      	strb	r2, [r3, #0]
			currentChoice = Screen5_Hour;
 8000c4c:	4b1d      	ldr	r3, [pc, #116]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c4e:	2214      	movs	r2, #20
 8000c50:	701a      	strb	r2, [r3, #0]
		}
		userChoiceXY[0] = 0;
 8000c52:	4b1d      	ldr	r3, [pc, #116]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c54:	2200      	movs	r2, #0
 8000c56:	801a      	strh	r2, [r3, #0]
		userChoiceXY[1] = 0;
 8000c58:	4b1b      	ldr	r3, [pc, #108]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	805a      	strh	r2, [r3, #2]
 8000c5e:	e02b      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}else if (sceneNumber == 4){
 8000c60:	4b17      	ldr	r3, [pc, #92]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c62:	781b      	ldrb	r3, [r3, #0]
 8000c64:	2b04      	cmp	r3, #4
 8000c66:	d10c      	bne.n	8000c82 <SubmitButtonHandler+0xea>
		sceneNumber = 6;
 8000c68:	4b15      	ldr	r3, [pc, #84]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c6a:	2206      	movs	r2, #6
 8000c6c:	701a      	strb	r2, [r3, #0]
		currentChoice = Screen6_End;
 8000c6e:	4b15      	ldr	r3, [pc, #84]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c70:	2216      	movs	r2, #22
 8000c72:	701a      	strb	r2, [r3, #0]
		userChoiceXY[0] = 0;
 8000c74:	4b14      	ldr	r3, [pc, #80]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c76:	2200      	movs	r2, #0
 8000c78:	801a      	strh	r2, [r3, #0]
		userChoiceXY[1] = 0;
 8000c7a:	4b13      	ldr	r3, [pc, #76]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	805a      	strh	r2, [r3, #2]
 8000c80:	e01a      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}else if (sceneNumber == 5){
 8000c82:	4b0f      	ldr	r3, [pc, #60]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c84:	781b      	ldrb	r3, [r3, #0]
 8000c86:	2b05      	cmp	r3, #5
 8000c88:	d109      	bne.n	8000c9e <SubmitButtonHandler+0x106>
		sceneNumber = 6;
 8000c8a:	4b0d      	ldr	r3, [pc, #52]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000c8c:	2206      	movs	r2, #6
 8000c8e:	701a      	strb	r2, [r3, #0]
		currentChoice = Screen6_End;
 8000c90:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000c92:	2216      	movs	r2, #22
 8000c94:	701a      	strb	r2, [r3, #0]
		userChoiceXY[0] = 0;
 8000c96:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000c98:	2200      	movs	r2, #0
 8000c9a:	801a      	strh	r2, [r3, #0]
 8000c9c:	e00c      	b.n	8000cb8 <SubmitButtonHandler+0x120>
	}else if (sceneNumber == 6){
 8000c9e:	4b08      	ldr	r3, [pc, #32]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000ca0:	781b      	ldrb	r3, [r3, #0]
 8000ca2:	2b06      	cmp	r3, #6
 8000ca4:	d108      	bne.n	8000cb8 <SubmitButtonHandler+0x120>
		sceneNumber = 0;
 8000ca6:	4b06      	ldr	r3, [pc, #24]	@ (8000cc0 <SubmitButtonHandler+0x128>)
 8000ca8:	2200      	movs	r2, #0
 8000caa:	701a      	strb	r2, [r3, #0]
		currentChoice = Screen0_None;
 8000cac:	4b05      	ldr	r3, [pc, #20]	@ (8000cc4 <SubmitButtonHandler+0x12c>)
 8000cae:	2200      	movs	r2, #0
 8000cb0:	701a      	strb	r2, [r3, #0]
		userChoiceXY[0] = 0;
 8000cb2:	4b05      	ldr	r3, [pc, #20]	@ (8000cc8 <SubmitButtonHandler+0x130>)
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	801a      	strh	r2, [r3, #0]
	}
	screenRefresh();
 8000cb8:	f000 f9fa 	bl	80010b0 <screenRefresh>
}
 8000cbc:	bf00      	nop
 8000cbe:	bd80      	pop	{r7, pc}
 8000cc0:	200000fc 	.word	0x200000fc
 8000cc4:	200001bc 	.word	0x200001bc
 8000cc8:	200001b8 	.word	0x200001b8

08000ccc <ProcessDirection>:

void ProcessDirection(){
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	af00      	add	r7, sp, #0
	if(sceneNumber == 1){
 8000cd0:	4b90      	ldr	r3, [pc, #576]	@ (8000f14 <ProcessDirection+0x248>)
 8000cd2:	781b      	ldrb	r3, [r3, #0]
 8000cd4:	2b01      	cmp	r3, #1
 8000cd6:	d131      	bne.n	8000d3c <ProcessDirection+0x70>
		if(VerticalValue || HorizontalValue){
 8000cd8:	4b8f      	ldr	r3, [pc, #572]	@ (8000f18 <ProcessDirection+0x24c>)
 8000cda:	f993 3000 	ldrsb.w	r3, [r3]
 8000cde:	2b00      	cmp	r3, #0
 8000ce0:	d105      	bne.n	8000cee <ProcessDirection+0x22>
 8000ce2:	4b8e      	ldr	r3, [pc, #568]	@ (8000f1c <ProcessDirection+0x250>)
 8000ce4:	f993 3000 	ldrsb.w	r3, [r3]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	f000 81ce 	beq.w	800108a <ProcessDirection+0x3be>
			userChoiceXY[0] += VerticalValue;
 8000cee:	4b8c      	ldr	r3, [pc, #560]	@ (8000f20 <ProcessDirection+0x254>)
 8000cf0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000cf4:	b29a      	uxth	r2, r3
 8000cf6:	4b88      	ldr	r3, [pc, #544]	@ (8000f18 <ProcessDirection+0x24c>)
 8000cf8:	f993 3000 	ldrsb.w	r3, [r3]
 8000cfc:	b29b      	uxth	r3, r3
 8000cfe:	4413      	add	r3, r2
 8000d00:	b29b      	uxth	r3, r3
 8000d02:	b21a      	sxth	r2, r3
 8000d04:	4b86      	ldr	r3, [pc, #536]	@ (8000f20 <ProcessDirection+0x254>)
 8000d06:	801a      	strh	r2, [r3, #0]
			if(userChoiceXY[0] < 0){
 8000d08:	4b85      	ldr	r3, [pc, #532]	@ (8000f20 <ProcessDirection+0x254>)
 8000d0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	da03      	bge.n	8000d1a <ProcessDirection+0x4e>
				userChoiceXY[0] = 7;
 8000d12:	4b83      	ldr	r3, [pc, #524]	@ (8000f20 <ProcessDirection+0x254>)
 8000d14:	2207      	movs	r2, #7
 8000d16:	801a      	strh	r2, [r3, #0]
 8000d18:	e007      	b.n	8000d2a <ProcessDirection+0x5e>
			}else if(userChoiceXY[0] > 7){
 8000d1a:	4b81      	ldr	r3, [pc, #516]	@ (8000f20 <ProcessDirection+0x254>)
 8000d1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d20:	2b07      	cmp	r3, #7
 8000d22:	dd02      	ble.n	8000d2a <ProcessDirection+0x5e>
				userChoiceXY[0] = 0;
 8000d24:	4b7e      	ldr	r3, [pc, #504]	@ (8000f20 <ProcessDirection+0x254>)
 8000d26:	2200      	movs	r2, #0
 8000d28:	801a      	strh	r2, [r3, #0]
			}
			currentChoice = screen1List[userChoiceXY[0]];
 8000d2a:	4b7d      	ldr	r3, [pc, #500]	@ (8000f20 <ProcessDirection+0x254>)
 8000d2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d30:	461a      	mov	r2, r3
 8000d32:	4b7c      	ldr	r3, [pc, #496]	@ (8000f24 <ProcessDirection+0x258>)
 8000d34:	5c9a      	ldrb	r2, [r3, r2]
 8000d36:	4b7c      	ldr	r3, [pc, #496]	@ (8000f28 <ProcessDirection+0x25c>)
 8000d38:	701a      	strb	r2, [r3, #0]
 8000d3a:	e1a6      	b.n	800108a <ProcessDirection+0x3be>
		}
	}else if (sceneNumber == 2){
 8000d3c:	4b75      	ldr	r3, [pc, #468]	@ (8000f14 <ProcessDirection+0x248>)
 8000d3e:	781b      	ldrb	r3, [r3, #0]
 8000d40:	2b02      	cmp	r3, #2
 8000d42:	d17b      	bne.n	8000e3c <ProcessDirection+0x170>
		if(VerticalValue || HorizontalValue){
 8000d44:	4b74      	ldr	r3, [pc, #464]	@ (8000f18 <ProcessDirection+0x24c>)
 8000d46:	f993 3000 	ldrsb.w	r3, [r3]
 8000d4a:	2b00      	cmp	r3, #0
 8000d4c:	d105      	bne.n	8000d5a <ProcessDirection+0x8e>
 8000d4e:	4b73      	ldr	r3, [pc, #460]	@ (8000f1c <ProcessDirection+0x250>)
 8000d50:	f993 3000 	ldrsb.w	r3, [r3]
 8000d54:	2b00      	cmp	r3, #0
 8000d56:	f000 8198 	beq.w	800108a <ProcessDirection+0x3be>
			userChoiceXY[0] += VerticalValue;
 8000d5a:	4b71      	ldr	r3, [pc, #452]	@ (8000f20 <ProcessDirection+0x254>)
 8000d5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d60:	b29a      	uxth	r2, r3
 8000d62:	4b6d      	ldr	r3, [pc, #436]	@ (8000f18 <ProcessDirection+0x24c>)
 8000d64:	f993 3000 	ldrsb.w	r3, [r3]
 8000d68:	b29b      	uxth	r3, r3
 8000d6a:	4413      	add	r3, r2
 8000d6c:	b29b      	uxth	r3, r3
 8000d6e:	b21a      	sxth	r2, r3
 8000d70:	4b6b      	ldr	r3, [pc, #428]	@ (8000f20 <ProcessDirection+0x254>)
 8000d72:	801a      	strh	r2, [r3, #0]
			if(userChoiceXY[0] < 0){
 8000d74:	4b6a      	ldr	r3, [pc, #424]	@ (8000f20 <ProcessDirection+0x254>)
 8000d76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d7a:	2b00      	cmp	r3, #0
 8000d7c:	da09      	bge.n	8000d92 <ProcessDirection+0xc6>
				userChoiceXY[0] += 1;
 8000d7e:	4b68      	ldr	r3, [pc, #416]	@ (8000f20 <ProcessDirection+0x254>)
 8000d80:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d84:	b29b      	uxth	r3, r3
 8000d86:	3301      	adds	r3, #1
 8000d88:	b29b      	uxth	r3, r3
 8000d8a:	b21a      	sxth	r2, r3
 8000d8c:	4b64      	ldr	r3, [pc, #400]	@ (8000f20 <ProcessDirection+0x254>)
 8000d8e:	801a      	strh	r2, [r3, #0]
 8000d90:	e00d      	b.n	8000dae <ProcessDirection+0xe2>
			}else if(userChoiceXY[0] > 2){
 8000d92:	4b63      	ldr	r3, [pc, #396]	@ (8000f20 <ProcessDirection+0x254>)
 8000d94:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d98:	2b02      	cmp	r3, #2
 8000d9a:	dd08      	ble.n	8000dae <ProcessDirection+0xe2>
				userChoiceXY[0] -= 1;
 8000d9c:	4b60      	ldr	r3, [pc, #384]	@ (8000f20 <ProcessDirection+0x254>)
 8000d9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000da2:	b29b      	uxth	r3, r3
 8000da4:	3b01      	subs	r3, #1
 8000da6:	b29b      	uxth	r3, r3
 8000da8:	b21a      	sxth	r2, r3
 8000daa:	4b5d      	ldr	r3, [pc, #372]	@ (8000f20 <ProcessDirection+0x254>)
 8000dac:	801a      	strh	r2, [r3, #0]
			}
			currentChoice = screen2List[userChoiceXY[0]];
 8000dae:	4b5c      	ldr	r3, [pc, #368]	@ (8000f20 <ProcessDirection+0x254>)
 8000db0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000db4:	461a      	mov	r2, r3
 8000db6:	4b5d      	ldr	r3, [pc, #372]	@ (8000f2c <ProcessDirection+0x260>)
 8000db8:	5c9a      	ldrb	r2, [r3, r2]
 8000dba:	4b5b      	ldr	r3, [pc, #364]	@ (8000f28 <ProcessDirection+0x25c>)
 8000dbc:	701a      	strb	r2, [r3, #0]
			color[userChoiceXY[0]] += 5*HorizontalValue;
 8000dbe:	4b58      	ldr	r3, [pc, #352]	@ (8000f20 <ProcessDirection+0x254>)
 8000dc0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000dc4:	461a      	mov	r2, r3
 8000dc6:	4b5a      	ldr	r3, [pc, #360]	@ (8000f30 <ProcessDirection+0x264>)
 8000dc8:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8000dcc:	b29a      	uxth	r2, r3
 8000dce:	4b53      	ldr	r3, [pc, #332]	@ (8000f1c <ProcessDirection+0x250>)
 8000dd0:	f993 3000 	ldrsb.w	r3, [r3]
 8000dd4:	b29b      	uxth	r3, r3
 8000dd6:	4619      	mov	r1, r3
 8000dd8:	0089      	lsls	r1, r1, #2
 8000dda:	440b      	add	r3, r1
 8000ddc:	b29b      	uxth	r3, r3
 8000dde:	4413      	add	r3, r2
 8000de0:	b299      	uxth	r1, r3
 8000de2:	4b4f      	ldr	r3, [pc, #316]	@ (8000f20 <ProcessDirection+0x254>)
 8000de4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000de8:	461a      	mov	r2, r3
 8000dea:	b209      	sxth	r1, r1
 8000dec:	4b50      	ldr	r3, [pc, #320]	@ (8000f30 <ProcessDirection+0x264>)
 8000dee:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]

			if(color[userChoiceXY[0]] < 0){
 8000df2:	4b4b      	ldr	r3, [pc, #300]	@ (8000f20 <ProcessDirection+0x254>)
 8000df4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000df8:	461a      	mov	r2, r3
 8000dfa:	4b4d      	ldr	r3, [pc, #308]	@ (8000f30 <ProcessDirection+0x264>)
 8000dfc:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	da08      	bge.n	8000e16 <ProcessDirection+0x14a>
				color[userChoiceXY[0]] = 255;
 8000e04:	4b46      	ldr	r3, [pc, #280]	@ (8000f20 <ProcessDirection+0x254>)
 8000e06:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	4b48      	ldr	r3, [pc, #288]	@ (8000f30 <ProcessDirection+0x264>)
 8000e0e:	21ff      	movs	r1, #255	@ 0xff
 8000e10:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e14:	e139      	b.n	800108a <ProcessDirection+0x3be>
			}else if(color[userChoiceXY[0]] > 255){
 8000e16:	4b42      	ldr	r3, [pc, #264]	@ (8000f20 <ProcessDirection+0x254>)
 8000e18:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e1c:	461a      	mov	r2, r3
 8000e1e:	4b44      	ldr	r3, [pc, #272]	@ (8000f30 <ProcessDirection+0x264>)
 8000e20:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8000e24:	2bff      	cmp	r3, #255	@ 0xff
 8000e26:	f340 8130 	ble.w	800108a <ProcessDirection+0x3be>
				color[userChoiceXY[0]] = 0;
 8000e2a:	4b3d      	ldr	r3, [pc, #244]	@ (8000f20 <ProcessDirection+0x254>)
 8000e2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e30:	461a      	mov	r2, r3
 8000e32:	4b3f      	ldr	r3, [pc, #252]	@ (8000f30 <ProcessDirection+0x264>)
 8000e34:	2100      	movs	r1, #0
 8000e36:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e3a:	e126      	b.n	800108a <ProcessDirection+0x3be>
			}
		}
	}else if (sceneNumber == 3){
 8000e3c:	4b35      	ldr	r3, [pc, #212]	@ (8000f14 <ProcessDirection+0x248>)
 8000e3e:	781b      	ldrb	r3, [r3, #0]
 8000e40:	2b03      	cmp	r3, #3
 8000e42:	d131      	bne.n	8000ea8 <ProcessDirection+0x1dc>
		if(VerticalValue || HorizontalValue){
 8000e44:	4b34      	ldr	r3, [pc, #208]	@ (8000f18 <ProcessDirection+0x24c>)
 8000e46:	f993 3000 	ldrsb.w	r3, [r3]
 8000e4a:	2b00      	cmp	r3, #0
 8000e4c:	d105      	bne.n	8000e5a <ProcessDirection+0x18e>
 8000e4e:	4b33      	ldr	r3, [pc, #204]	@ (8000f1c <ProcessDirection+0x250>)
 8000e50:	f993 3000 	ldrsb.w	r3, [r3]
 8000e54:	2b00      	cmp	r3, #0
 8000e56:	f000 8118 	beq.w	800108a <ProcessDirection+0x3be>
			userChoiceXY[0] += VerticalValue;
 8000e5a:	4b31      	ldr	r3, [pc, #196]	@ (8000f20 <ProcessDirection+0x254>)
 8000e5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e60:	b29a      	uxth	r2, r3
 8000e62:	4b2d      	ldr	r3, [pc, #180]	@ (8000f18 <ProcessDirection+0x24c>)
 8000e64:	f993 3000 	ldrsb.w	r3, [r3]
 8000e68:	b29b      	uxth	r3, r3
 8000e6a:	4413      	add	r3, r2
 8000e6c:	b29b      	uxth	r3, r3
 8000e6e:	b21a      	sxth	r2, r3
 8000e70:	4b2b      	ldr	r3, [pc, #172]	@ (8000f20 <ProcessDirection+0x254>)
 8000e72:	801a      	strh	r2, [r3, #0]


			if(userChoiceXY[0] < 0){
 8000e74:	4b2a      	ldr	r3, [pc, #168]	@ (8000f20 <ProcessDirection+0x254>)
 8000e76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	da03      	bge.n	8000e86 <ProcessDirection+0x1ba>
				userChoiceXY[0] = 1;
 8000e7e:	4b28      	ldr	r3, [pc, #160]	@ (8000f20 <ProcessDirection+0x254>)
 8000e80:	2201      	movs	r2, #1
 8000e82:	801a      	strh	r2, [r3, #0]
 8000e84:	e007      	b.n	8000e96 <ProcessDirection+0x1ca>
			}else if(userChoiceXY[0] > 1){
 8000e86:	4b26      	ldr	r3, [pc, #152]	@ (8000f20 <ProcessDirection+0x254>)
 8000e88:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e8c:	2b01      	cmp	r3, #1
 8000e8e:	dd02      	ble.n	8000e96 <ProcessDirection+0x1ca>
				userChoiceXY[0] = 0;
 8000e90:	4b23      	ldr	r3, [pc, #140]	@ (8000f20 <ProcessDirection+0x254>)
 8000e92:	2200      	movs	r2, #0
 8000e94:	801a      	strh	r2, [r3, #0]
			}
			currentChoice = screen3List[userChoiceXY[0]];
 8000e96:	4b22      	ldr	r3, [pc, #136]	@ (8000f20 <ProcessDirection+0x254>)
 8000e98:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e9c:	461a      	mov	r2, r3
 8000e9e:	4b25      	ldr	r3, [pc, #148]	@ (8000f34 <ProcessDirection+0x268>)
 8000ea0:	5c9a      	ldrb	r2, [r3, r2]
 8000ea2:	4b21      	ldr	r3, [pc, #132]	@ (8000f28 <ProcessDirection+0x25c>)
 8000ea4:	701a      	strb	r2, [r3, #0]
 8000ea6:	e0f0      	b.n	800108a <ProcessDirection+0x3be>
		}
	}else if (sceneNumber == 4){
 8000ea8:	4b1a      	ldr	r3, [pc, #104]	@ (8000f14 <ProcessDirection+0x248>)
 8000eaa:	781b      	ldrb	r3, [r3, #0]
 8000eac:	2b04      	cmp	r3, #4
 8000eae:	d145      	bne.n	8000f3c <ProcessDirection+0x270>
		if(VerticalValue || HorizontalValue){
 8000eb0:	4b19      	ldr	r3, [pc, #100]	@ (8000f18 <ProcessDirection+0x24c>)
 8000eb2:	f993 3000 	ldrsb.w	r3, [r3]
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d105      	bne.n	8000ec6 <ProcessDirection+0x1fa>
 8000eba:	4b18      	ldr	r3, [pc, #96]	@ (8000f1c <ProcessDirection+0x250>)
 8000ebc:	f993 3000 	ldrsb.w	r3, [r3]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	f000 80e2 	beq.w	800108a <ProcessDirection+0x3be>
			userChoiceXY[0] += VerticalValue;
 8000ec6:	4b16      	ldr	r3, [pc, #88]	@ (8000f20 <ProcessDirection+0x254>)
 8000ec8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ecc:	b29a      	uxth	r2, r3
 8000ece:	4b12      	ldr	r3, [pc, #72]	@ (8000f18 <ProcessDirection+0x24c>)
 8000ed0:	f993 3000 	ldrsb.w	r3, [r3]
 8000ed4:	b29b      	uxth	r3, r3
 8000ed6:	4413      	add	r3, r2
 8000ed8:	b29b      	uxth	r3, r3
 8000eda:	b21a      	sxth	r2, r3
 8000edc:	4b10      	ldr	r3, [pc, #64]	@ (8000f20 <ProcessDirection+0x254>)
 8000ede:	801a      	strh	r2, [r3, #0]


			if(userChoiceXY[0] < 0){
 8000ee0:	4b0f      	ldr	r3, [pc, #60]	@ (8000f20 <ProcessDirection+0x254>)
 8000ee2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	da03      	bge.n	8000ef2 <ProcessDirection+0x226>
				userChoiceXY[0] = 4;
 8000eea:	4b0d      	ldr	r3, [pc, #52]	@ (8000f20 <ProcessDirection+0x254>)
 8000eec:	2204      	movs	r2, #4
 8000eee:	801a      	strh	r2, [r3, #0]
 8000ef0:	e007      	b.n	8000f02 <ProcessDirection+0x236>
			}else if(userChoiceXY[0] > 4){
 8000ef2:	4b0b      	ldr	r3, [pc, #44]	@ (8000f20 <ProcessDirection+0x254>)
 8000ef4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ef8:	2b04      	cmp	r3, #4
 8000efa:	dd02      	ble.n	8000f02 <ProcessDirection+0x236>
				userChoiceXY[0] = 0;
 8000efc:	4b08      	ldr	r3, [pc, #32]	@ (8000f20 <ProcessDirection+0x254>)
 8000efe:	2200      	movs	r2, #0
 8000f00:	801a      	strh	r2, [r3, #0]
			}
			currentChoice = screen4List[userChoiceXY[0]];
 8000f02:	4b07      	ldr	r3, [pc, #28]	@ (8000f20 <ProcessDirection+0x254>)
 8000f04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f08:	461a      	mov	r2, r3
 8000f0a:	4b0b      	ldr	r3, [pc, #44]	@ (8000f38 <ProcessDirection+0x26c>)
 8000f0c:	5c9a      	ldrb	r2, [r3, r2]
 8000f0e:	4b06      	ldr	r3, [pc, #24]	@ (8000f28 <ProcessDirection+0x25c>)
 8000f10:	701a      	strb	r2, [r3, #0]
 8000f12:	e0ba      	b.n	800108a <ProcessDirection+0x3be>
 8000f14:	200000fc 	.word	0x200000fc
 8000f18:	200001b4 	.word	0x200001b4
 8000f1c:	200001b5 	.word	0x200001b5
 8000f20:	200001b8 	.word	0x200001b8
 8000f24:	20000000 	.word	0x20000000
 8000f28:	200001bc 	.word	0x200001bc
 8000f2c:	20000008 	.word	0x20000008
 8000f30:	200001c0 	.word	0x200001c0
 8000f34:	2000000c 	.word	0x2000000c
 8000f38:	20000010 	.word	0x20000010
		}
	}else if (sceneNumber == 5){
 8000f3c:	4b55      	ldr	r3, [pc, #340]	@ (8001094 <ProcessDirection+0x3c8>)
 8000f3e:	781b      	ldrb	r3, [r3, #0]
 8000f40:	2b05      	cmp	r3, #5
 8000f42:	f040 80a2 	bne.w	800108a <ProcessDirection+0x3be>
		if(VerticalValue || HorizontalValue){
 8000f46:	4b54      	ldr	r3, [pc, #336]	@ (8001098 <ProcessDirection+0x3cc>)
 8000f48:	f993 3000 	ldrsb.w	r3, [r3]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d105      	bne.n	8000f5c <ProcessDirection+0x290>
 8000f50:	4b52      	ldr	r3, [pc, #328]	@ (800109c <ProcessDirection+0x3d0>)
 8000f52:	f993 3000 	ldrsb.w	r3, [r3]
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	f000 8097 	beq.w	800108a <ProcessDirection+0x3be>
			userChoiceXY[0] += VerticalValue;
 8000f5c:	4b50      	ldr	r3, [pc, #320]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f62:	b29a      	uxth	r2, r3
 8000f64:	4b4c      	ldr	r3, [pc, #304]	@ (8001098 <ProcessDirection+0x3cc>)
 8000f66:	f993 3000 	ldrsb.w	r3, [r3]
 8000f6a:	b29b      	uxth	r3, r3
 8000f6c:	4413      	add	r3, r2
 8000f6e:	b29b      	uxth	r3, r3
 8000f70:	b21a      	sxth	r2, r3
 8000f72:	4b4b      	ldr	r3, [pc, #300]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f74:	801a      	strh	r2, [r3, #0]


			if(userChoiceXY[0] < 0){
 8000f76:	4b4a      	ldr	r3, [pc, #296]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f78:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f7c:	2b00      	cmp	r3, #0
 8000f7e:	da09      	bge.n	8000f94 <ProcessDirection+0x2c8>
				userChoiceXY[0] += 1;
 8000f80:	4b47      	ldr	r3, [pc, #284]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f86:	b29b      	uxth	r3, r3
 8000f88:	3301      	adds	r3, #1
 8000f8a:	b29b      	uxth	r3, r3
 8000f8c:	b21a      	sxth	r2, r3
 8000f8e:	4b44      	ldr	r3, [pc, #272]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f90:	801a      	strh	r2, [r3, #0]
 8000f92:	e00d      	b.n	8000fb0 <ProcessDirection+0x2e4>
			}else if(userChoiceXY[0] > 1){
 8000f94:	4b42      	ldr	r3, [pc, #264]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000f96:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f9a:	2b01      	cmp	r3, #1
 8000f9c:	dd08      	ble.n	8000fb0 <ProcessDirection+0x2e4>
				userChoiceXY[0] -= 1;
 8000f9e:	4b40      	ldr	r3, [pc, #256]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000fa0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fa4:	b29b      	uxth	r3, r3
 8000fa6:	3b01      	subs	r3, #1
 8000fa8:	b29b      	uxth	r3, r3
 8000faa:	b21a      	sxth	r2, r3
 8000fac:	4b3c      	ldr	r3, [pc, #240]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000fae:	801a      	strh	r2, [r3, #0]
			}
			currentChoice = screen5List[userChoiceXY[0]];
 8000fb0:	4b3b      	ldr	r3, [pc, #236]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000fb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fb6:	461a      	mov	r2, r3
 8000fb8:	4b3a      	ldr	r3, [pc, #232]	@ (80010a4 <ProcessDirection+0x3d8>)
 8000fba:	5c9a      	ldrb	r2, [r3, r2]
 8000fbc:	4b3a      	ldr	r3, [pc, #232]	@ (80010a8 <ProcessDirection+0x3dc>)
 8000fbe:	701a      	strb	r2, [r3, #0]
			time[userChoiceXY[0]] += HorizontalValue;
 8000fc0:	4b37      	ldr	r3, [pc, #220]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000fc2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fc6:	461a      	mov	r2, r3
 8000fc8:	4b38      	ldr	r3, [pc, #224]	@ (80010ac <ProcessDirection+0x3e0>)
 8000fca:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8000fce:	b29a      	uxth	r2, r3
 8000fd0:	4b32      	ldr	r3, [pc, #200]	@ (800109c <ProcessDirection+0x3d0>)
 8000fd2:	f993 3000 	ldrsb.w	r3, [r3]
 8000fd6:	b29b      	uxth	r3, r3
 8000fd8:	4413      	add	r3, r2
 8000fda:	b299      	uxth	r1, r3
 8000fdc:	4b30      	ldr	r3, [pc, #192]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000fde:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fe2:	461a      	mov	r2, r3
 8000fe4:	b209      	sxth	r1, r1
 8000fe6:	4b31      	ldr	r3, [pc, #196]	@ (80010ac <ProcessDirection+0x3e0>)
 8000fe8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
			if (currentChoice == Screen5_Hour){
 8000fec:	4b2e      	ldr	r3, [pc, #184]	@ (80010a8 <ProcessDirection+0x3dc>)
 8000fee:	781b      	ldrb	r3, [r3, #0]
 8000ff0:	2b14      	cmp	r3, #20
 8000ff2:	d123      	bne.n	800103c <ProcessDirection+0x370>
				if(time[userChoiceXY[0]] < 0){
 8000ff4:	4b2a      	ldr	r3, [pc, #168]	@ (80010a0 <ProcessDirection+0x3d4>)
 8000ff6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ffa:	461a      	mov	r2, r3
 8000ffc:	4b2b      	ldr	r3, [pc, #172]	@ (80010ac <ProcessDirection+0x3e0>)
 8000ffe:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8001002:	2b00      	cmp	r3, #0
 8001004:	da08      	bge.n	8001018 <ProcessDirection+0x34c>
					time[userChoiceXY[0]] = 23;
 8001006:	4b26      	ldr	r3, [pc, #152]	@ (80010a0 <ProcessDirection+0x3d4>)
 8001008:	f9b3 3000 	ldrsh.w	r3, [r3]
 800100c:	461a      	mov	r2, r3
 800100e:	4b27      	ldr	r3, [pc, #156]	@ (80010ac <ProcessDirection+0x3e0>)
 8001010:	2117      	movs	r1, #23
 8001012:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001016:	e038      	b.n	800108a <ProcessDirection+0x3be>
				}else if(time[userChoiceXY[0]] > 23){
 8001018:	4b21      	ldr	r3, [pc, #132]	@ (80010a0 <ProcessDirection+0x3d4>)
 800101a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800101e:	461a      	mov	r2, r3
 8001020:	4b22      	ldr	r3, [pc, #136]	@ (80010ac <ProcessDirection+0x3e0>)
 8001022:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8001026:	2b17      	cmp	r3, #23
 8001028:	dd2f      	ble.n	800108a <ProcessDirection+0x3be>
					time[userChoiceXY[0]] = 0;
 800102a:	4b1d      	ldr	r3, [pc, #116]	@ (80010a0 <ProcessDirection+0x3d4>)
 800102c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001030:	461a      	mov	r2, r3
 8001032:	4b1e      	ldr	r3, [pc, #120]	@ (80010ac <ProcessDirection+0x3e0>)
 8001034:	2100      	movs	r1, #0
 8001036:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800103a:	e026      	b.n	800108a <ProcessDirection+0x3be>
				}
			}else if (currentChoice == Screen5_Minute){
 800103c:	4b1a      	ldr	r3, [pc, #104]	@ (80010a8 <ProcessDirection+0x3dc>)
 800103e:	781b      	ldrb	r3, [r3, #0]
 8001040:	2b15      	cmp	r3, #21
 8001042:	d122      	bne.n	800108a <ProcessDirection+0x3be>
				if(time[userChoiceXY[0]] < 0){
 8001044:	4b16      	ldr	r3, [pc, #88]	@ (80010a0 <ProcessDirection+0x3d4>)
 8001046:	f9b3 3000 	ldrsh.w	r3, [r3]
 800104a:	461a      	mov	r2, r3
 800104c:	4b17      	ldr	r3, [pc, #92]	@ (80010ac <ProcessDirection+0x3e0>)
 800104e:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8001052:	2b00      	cmp	r3, #0
 8001054:	da08      	bge.n	8001068 <ProcessDirection+0x39c>
					time[userChoiceXY[0]] = 59;
 8001056:	4b12      	ldr	r3, [pc, #72]	@ (80010a0 <ProcessDirection+0x3d4>)
 8001058:	f9b3 3000 	ldrsh.w	r3, [r3]
 800105c:	461a      	mov	r2, r3
 800105e:	4b13      	ldr	r3, [pc, #76]	@ (80010ac <ProcessDirection+0x3e0>)
 8001060:	213b      	movs	r1, #59	@ 0x3b
 8001062:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001066:	e010      	b.n	800108a <ProcessDirection+0x3be>
				}else if(time[userChoiceXY[0]] > 59){
 8001068:	4b0d      	ldr	r3, [pc, #52]	@ (80010a0 <ProcessDirection+0x3d4>)
 800106a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800106e:	461a      	mov	r2, r3
 8001070:	4b0e      	ldr	r3, [pc, #56]	@ (80010ac <ProcessDirection+0x3e0>)
 8001072:	f933 3012 	ldrsh.w	r3, [r3, r2, lsl #1]
 8001076:	2b3b      	cmp	r3, #59	@ 0x3b
 8001078:	dd07      	ble.n	800108a <ProcessDirection+0x3be>
					time[userChoiceXY[0]] = 0;
 800107a:	4b09      	ldr	r3, [pc, #36]	@ (80010a0 <ProcessDirection+0x3d4>)
 800107c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001080:	461a      	mov	r2, r3
 8001082:	4b0a      	ldr	r3, [pc, #40]	@ (80010ac <ProcessDirection+0x3e0>)
 8001084:	2100      	movs	r1, #0
 8001086:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
				}
			}
		}
	}
	screenRefresh();
 800108a:	f000 f811 	bl	80010b0 <screenRefresh>
}
 800108e:	bf00      	nop
 8001090:	bd80      	pop	{r7, pc}
 8001092:	bf00      	nop
 8001094:	200000fc 	.word	0x200000fc
 8001098:	200001b4 	.word	0x200001b4
 800109c:	200001b5 	.word	0x200001b5
 80010a0:	200001b8 	.word	0x200001b8
 80010a4:	20000018 	.word	0x20000018
 80010a8:	200001bc 	.word	0x200001bc
 80010ac:	20000204 	.word	0x20000204

080010b0 <screenRefresh>:

void screenRefresh(){
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b082      	sub	sp, #8
 80010b4:	af02      	add	r7, sp, #8
	if(currentSceneNumber != sceneNumber){
 80010b6:	4ba7      	ldr	r3, [pc, #668]	@ (8001354 <screenRefresh+0x2a4>)
 80010b8:	781a      	ldrb	r2, [r3, #0]
 80010ba:	4ba7      	ldr	r3, [pc, #668]	@ (8001358 <screenRefresh+0x2a8>)
 80010bc:	781b      	ldrb	r3, [r3, #0]
 80010be:	429a      	cmp	r2, r3
 80010c0:	f000 8086 	beq.w	80011d0 <screenRefresh+0x120>
		switch (sceneNumber){
 80010c4:	4ba4      	ldr	r3, [pc, #656]	@ (8001358 <screenRefresh+0x2a8>)
 80010c6:	781b      	ldrb	r3, [r3, #0]
 80010c8:	2b02      	cmp	r3, #2
 80010ca:	d002      	beq.n	80010d2 <screenRefresh+0x22>
 80010cc:	2b05      	cmp	r3, #5
 80010ce:	d040      	beq.n	8001152 <screenRefresh+0xa2>
			sprintf(minute, "%.2d", time[1]);
			ucg_DrawString(&ucg, 35, 80,0,  "   MINUTE   ");
			ucg_DrawString(&ucg, 55, 100,0,  (char*)minute);
			break;
		default:
			break;
 80010d0:	e07a      	b.n	80011c8 <screenRefresh+0x118>
			memset(red, 0 , sizeof(red));
 80010d2:	2214      	movs	r2, #20
 80010d4:	2100      	movs	r1, #0
 80010d6:	48a1      	ldr	r0, [pc, #644]	@ (800135c <screenRefresh+0x2ac>)
 80010d8:	f004 fb4e 	bl	8005778 <memset>
			sprintf(red, "%.3d", color[0]);
 80010dc:	4ba0      	ldr	r3, [pc, #640]	@ (8001360 <screenRefresh+0x2b0>)
 80010de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010e2:	461a      	mov	r2, r3
 80010e4:	499f      	ldr	r1, [pc, #636]	@ (8001364 <screenRefresh+0x2b4>)
 80010e6:	489d      	ldr	r0, [pc, #628]	@ (800135c <screenRefresh+0x2ac>)
 80010e8:	f004 fb26 	bl	8005738 <siprintf>
			memset(green, 0 , sizeof(green));
 80010ec:	2214      	movs	r2, #20
 80010ee:	2100      	movs	r1, #0
 80010f0:	489d      	ldr	r0, [pc, #628]	@ (8001368 <screenRefresh+0x2b8>)
 80010f2:	f004 fb41 	bl	8005778 <memset>
			sprintf(green, "%.3d", color[1]);
 80010f6:	4b9a      	ldr	r3, [pc, #616]	@ (8001360 <screenRefresh+0x2b0>)
 80010f8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80010fc:	461a      	mov	r2, r3
 80010fe:	4999      	ldr	r1, [pc, #612]	@ (8001364 <screenRefresh+0x2b4>)
 8001100:	4899      	ldr	r0, [pc, #612]	@ (8001368 <screenRefresh+0x2b8>)
 8001102:	f004 fb19 	bl	8005738 <siprintf>
			memset(blue, 0 , sizeof(blue));
 8001106:	2214      	movs	r2, #20
 8001108:	2100      	movs	r1, #0
 800110a:	4898      	ldr	r0, [pc, #608]	@ (800136c <screenRefresh+0x2bc>)
 800110c:	f004 fb34 	bl	8005778 <memset>
			sprintf(blue, "%.3d", color[2]);
 8001110:	4b93      	ldr	r3, [pc, #588]	@ (8001360 <screenRefresh+0x2b0>)
 8001112:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001116:	461a      	mov	r2, r3
 8001118:	4992      	ldr	r1, [pc, #584]	@ (8001364 <screenRefresh+0x2b4>)
 800111a:	4894      	ldr	r0, [pc, #592]	@ (800136c <screenRefresh+0x2bc>)
 800111c:	f004 fb0c 	bl	8005738 <siprintf>
			ucg_DrawString(&ucg, 25, 15,0,  "     Red   ");
 8001120:	4b93      	ldr	r3, [pc, #588]	@ (8001370 <screenRefresh+0x2c0>)
 8001122:	9300      	str	r3, [sp, #0]
 8001124:	2300      	movs	r3, #0
 8001126:	220f      	movs	r2, #15
 8001128:	2119      	movs	r1, #25
 800112a:	4892      	ldr	r0, [pc, #584]	@ (8001374 <screenRefresh+0x2c4>)
 800112c:	f003 fa36 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 25, 55,0,  "   Green   ");
 8001130:	4b91      	ldr	r3, [pc, #580]	@ (8001378 <screenRefresh+0x2c8>)
 8001132:	9300      	str	r3, [sp, #0]
 8001134:	2300      	movs	r3, #0
 8001136:	2237      	movs	r2, #55	@ 0x37
 8001138:	2119      	movs	r1, #25
 800113a:	488e      	ldr	r0, [pc, #568]	@ (8001374 <screenRefresh+0x2c4>)
 800113c:	f003 fa2e 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 25, 95,0,  "    Blue   ");
 8001140:	4b8e      	ldr	r3, [pc, #568]	@ (800137c <screenRefresh+0x2cc>)
 8001142:	9300      	str	r3, [sp, #0]
 8001144:	2300      	movs	r3, #0
 8001146:	225f      	movs	r2, #95	@ 0x5f
 8001148:	2119      	movs	r1, #25
 800114a:	488a      	ldr	r0, [pc, #552]	@ (8001374 <screenRefresh+0x2c4>)
 800114c:	f003 fa26 	bl	800459c <ucg_DrawString>
			break;
 8001150:	e03a      	b.n	80011c8 <screenRefresh+0x118>
			memset(hour, 0 , sizeof(hour));
 8001152:	2214      	movs	r2, #20
 8001154:	2100      	movs	r1, #0
 8001156:	488a      	ldr	r0, [pc, #552]	@ (8001380 <screenRefresh+0x2d0>)
 8001158:	f004 fb0e 	bl	8005778 <memset>
			sprintf(hour, "%.2d", time[0]);
 800115c:	4b89      	ldr	r3, [pc, #548]	@ (8001384 <screenRefresh+0x2d4>)
 800115e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001162:	461a      	mov	r2, r3
 8001164:	4988      	ldr	r1, [pc, #544]	@ (8001388 <screenRefresh+0x2d8>)
 8001166:	4886      	ldr	r0, [pc, #536]	@ (8001380 <screenRefresh+0x2d0>)
 8001168:	f004 fae6 	bl	8005738 <siprintf>
			ucg_DrawString(&ucg, 35, 30,0,  "    HOUR    ");
 800116c:	4b87      	ldr	r3, [pc, #540]	@ (800138c <screenRefresh+0x2dc>)
 800116e:	9300      	str	r3, [sp, #0]
 8001170:	2300      	movs	r3, #0
 8001172:	221e      	movs	r2, #30
 8001174:	2123      	movs	r1, #35	@ 0x23
 8001176:	487f      	ldr	r0, [pc, #508]	@ (8001374 <screenRefresh+0x2c4>)
 8001178:	f003 fa10 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 55, 50,0,  (char*)hour);
 800117c:	4b80      	ldr	r3, [pc, #512]	@ (8001380 <screenRefresh+0x2d0>)
 800117e:	9300      	str	r3, [sp, #0]
 8001180:	2300      	movs	r3, #0
 8001182:	2232      	movs	r2, #50	@ 0x32
 8001184:	2137      	movs	r1, #55	@ 0x37
 8001186:	487b      	ldr	r0, [pc, #492]	@ (8001374 <screenRefresh+0x2c4>)
 8001188:	f003 fa08 	bl	800459c <ucg_DrawString>
			memset(minute, 0 , sizeof(minute));
 800118c:	2214      	movs	r2, #20
 800118e:	2100      	movs	r1, #0
 8001190:	487f      	ldr	r0, [pc, #508]	@ (8001390 <screenRefresh+0x2e0>)
 8001192:	f004 faf1 	bl	8005778 <memset>
			sprintf(minute, "%.2d", time[1]);
 8001196:	4b7b      	ldr	r3, [pc, #492]	@ (8001384 <screenRefresh+0x2d4>)
 8001198:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800119c:	461a      	mov	r2, r3
 800119e:	497a      	ldr	r1, [pc, #488]	@ (8001388 <screenRefresh+0x2d8>)
 80011a0:	487b      	ldr	r0, [pc, #492]	@ (8001390 <screenRefresh+0x2e0>)
 80011a2:	f004 fac9 	bl	8005738 <siprintf>
			ucg_DrawString(&ucg, 35, 80,0,  "   MINUTE   ");
 80011a6:	4b7b      	ldr	r3, [pc, #492]	@ (8001394 <screenRefresh+0x2e4>)
 80011a8:	9300      	str	r3, [sp, #0]
 80011aa:	2300      	movs	r3, #0
 80011ac:	2250      	movs	r2, #80	@ 0x50
 80011ae:	2123      	movs	r1, #35	@ 0x23
 80011b0:	4870      	ldr	r0, [pc, #448]	@ (8001374 <screenRefresh+0x2c4>)
 80011b2:	f003 f9f3 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 55, 100,0,  (char*)minute);
 80011b6:	4b76      	ldr	r3, [pc, #472]	@ (8001390 <screenRefresh+0x2e0>)
 80011b8:	9300      	str	r3, [sp, #0]
 80011ba:	2300      	movs	r3, #0
 80011bc:	2264      	movs	r2, #100	@ 0x64
 80011be:	2137      	movs	r1, #55	@ 0x37
 80011c0:	486c      	ldr	r0, [pc, #432]	@ (8001374 <screenRefresh+0x2c4>)
 80011c2:	f003 f9eb 	bl	800459c <ucg_DrawString>
			break;
 80011c6:	bf00      	nop
		}
		currentSceneNumber = sceneNumber;
 80011c8:	4b63      	ldr	r3, [pc, #396]	@ (8001358 <screenRefresh+0x2a8>)
 80011ca:	781a      	ldrb	r2, [r3, #0]
 80011cc:	4b61      	ldr	r3, [pc, #388]	@ (8001354 <screenRefresh+0x2a4>)
 80011ce:	701a      	strb	r2, [r3, #0]
	}
	if(lastChoice != currentChoice){
 80011d0:	4b71      	ldr	r3, [pc, #452]	@ (8001398 <screenRefresh+0x2e8>)
 80011d2:	781a      	ldrb	r2, [r3, #0]
 80011d4:	4b71      	ldr	r3, [pc, #452]	@ (800139c <screenRefresh+0x2ec>)
 80011d6:	781b      	ldrb	r3, [r3, #0]
 80011d8:	429a      	cmp	r2, r3
 80011da:	f000 810f 	beq.w	80013fc <screenRefresh+0x34c>
		if(sceneNumber == 1){
 80011de:	4b5e      	ldr	r3, [pc, #376]	@ (8001358 <screenRefresh+0x2a8>)
 80011e0:	781b      	ldrb	r3, [r3, #0]
 80011e2:	2b01      	cmp	r3, #1
 80011e4:	d129      	bne.n	800123a <screenRefresh+0x18a>
			if ((currentChoice == Screen1_Setting)||(currentChoice == Screen1_Off)){
 80011e6:	4b6d      	ldr	r3, [pc, #436]	@ (800139c <screenRefresh+0x2ec>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
 80011ea:	2b08      	cmp	r3, #8
 80011ec:	d003      	beq.n	80011f6 <screenRefresh+0x146>
 80011ee:	4b6b      	ldr	r3, [pc, #428]	@ (800139c <screenRefresh+0x2ec>)
 80011f0:	781b      	ldrb	r3, [r3, #0]
 80011f2:	2b09      	cmp	r3, #9
 80011f4:	d10f      	bne.n	8001216 <screenRefresh+0x166>
				ucg_DrawString(&ucg, 35, 50,0,  "                   ");
 80011f6:	4b6a      	ldr	r3, [pc, #424]	@ (80013a0 <screenRefresh+0x2f0>)
 80011f8:	9300      	str	r3, [sp, #0]
 80011fa:	2300      	movs	r3, #0
 80011fc:	2232      	movs	r2, #50	@ 0x32
 80011fe:	2123      	movs	r1, #35	@ 0x23
 8001200:	485c      	ldr	r0, [pc, #368]	@ (8001374 <screenRefresh+0x2c4>)
 8001202:	f003 f9cb 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 35, 70,0,  "                   ");
 8001206:	4b66      	ldr	r3, [pc, #408]	@ (80013a0 <screenRefresh+0x2f0>)
 8001208:	9300      	str	r3, [sp, #0]
 800120a:	2300      	movs	r3, #0
 800120c:	2246      	movs	r2, #70	@ 0x46
 800120e:	2123      	movs	r1, #35	@ 0x23
 8001210:	4858      	ldr	r0, [pc, #352]	@ (8001374 <screenRefresh+0x2c4>)
 8001212:	f003 f9c3 	bl	800459c <ucg_DrawString>
			}if((lastChoice == Screen1_Setting)||(lastChoice == Screen1_Off)){
 8001216:	4b60      	ldr	r3, [pc, #384]	@ (8001398 <screenRefresh+0x2e8>)
 8001218:	781b      	ldrb	r3, [r3, #0]
 800121a:	2b08      	cmp	r3, #8
 800121c:	d004      	beq.n	8001228 <screenRefresh+0x178>
 800121e:	4b5e      	ldr	r3, [pc, #376]	@ (8001398 <screenRefresh+0x2e8>)
 8001220:	781b      	ldrb	r3, [r3, #0]
 8001222:	2b09      	cmp	r3, #9
 8001224:	f040 80e6 	bne.w	80013f4 <screenRefresh+0x344>
				ucg_DrawString(&ucg, 35, 60,0,  "                   ");
 8001228:	4b5d      	ldr	r3, [pc, #372]	@ (80013a0 <screenRefresh+0x2f0>)
 800122a:	9300      	str	r3, [sp, #0]
 800122c:	2300      	movs	r3, #0
 800122e:	223c      	movs	r2, #60	@ 0x3c
 8001230:	2123      	movs	r1, #35	@ 0x23
 8001232:	4850      	ldr	r0, [pc, #320]	@ (8001374 <screenRefresh+0x2c4>)
 8001234:	f003 f9b2 	bl	800459c <ucg_DrawString>
 8001238:	e0dc      	b.n	80013f4 <screenRefresh+0x344>
			}
		}else if(sceneNumber == 2){
 800123a:	4b47      	ldr	r3, [pc, #284]	@ (8001358 <screenRefresh+0x2a8>)
 800123c:	781b      	ldrb	r3, [r3, #0]
 800123e:	2b02      	cmp	r3, #2
 8001240:	d16e      	bne.n	8001320 <screenRefresh+0x270>
			if(currentChoice == Screen2_Red){
 8001242:	4b56      	ldr	r3, [pc, #344]	@ (800139c <screenRefresh+0x2ec>)
 8001244:	781b      	ldrb	r3, [r3, #0]
 8001246:	2b0a      	cmp	r3, #10
 8001248:	d118      	bne.n	800127c <screenRefresh+0x1cc>
				ucg_DrawString(&ucg, 30, 35,0,  "   <        >   ");
 800124a:	4b56      	ldr	r3, [pc, #344]	@ (80013a4 <screenRefresh+0x2f4>)
 800124c:	9300      	str	r3, [sp, #0]
 800124e:	2300      	movs	r3, #0
 8001250:	2223      	movs	r2, #35	@ 0x23
 8001252:	211e      	movs	r1, #30
 8001254:	4847      	ldr	r0, [pc, #284]	@ (8001374 <screenRefresh+0x2c4>)
 8001256:	f003 f9a1 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 75,0,  "                ");
 800125a:	4b53      	ldr	r3, [pc, #332]	@ (80013a8 <screenRefresh+0x2f8>)
 800125c:	9300      	str	r3, [sp, #0]
 800125e:	2300      	movs	r3, #0
 8001260:	224b      	movs	r2, #75	@ 0x4b
 8001262:	211e      	movs	r1, #30
 8001264:	4843      	ldr	r0, [pc, #268]	@ (8001374 <screenRefresh+0x2c4>)
 8001266:	f003 f999 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 115,0, "                ");
 800126a:	4b4f      	ldr	r3, [pc, #316]	@ (80013a8 <screenRefresh+0x2f8>)
 800126c:	9300      	str	r3, [sp, #0]
 800126e:	2300      	movs	r3, #0
 8001270:	2273      	movs	r2, #115	@ 0x73
 8001272:	211e      	movs	r1, #30
 8001274:	483f      	ldr	r0, [pc, #252]	@ (8001374 <screenRefresh+0x2c4>)
 8001276:	f003 f991 	bl	800459c <ucg_DrawString>
 800127a:	e038      	b.n	80012ee <screenRefresh+0x23e>
			}else if(currentChoice == Screen2_Green){
 800127c:	4b47      	ldr	r3, [pc, #284]	@ (800139c <screenRefresh+0x2ec>)
 800127e:	781b      	ldrb	r3, [r3, #0]
 8001280:	2b0b      	cmp	r3, #11
 8001282:	d118      	bne.n	80012b6 <screenRefresh+0x206>
				ucg_DrawString(&ucg, 30, 35,0,  "                ");
 8001284:	4b48      	ldr	r3, [pc, #288]	@ (80013a8 <screenRefresh+0x2f8>)
 8001286:	9300      	str	r3, [sp, #0]
 8001288:	2300      	movs	r3, #0
 800128a:	2223      	movs	r2, #35	@ 0x23
 800128c:	211e      	movs	r1, #30
 800128e:	4839      	ldr	r0, [pc, #228]	@ (8001374 <screenRefresh+0x2c4>)
 8001290:	f003 f984 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 75,0,  "   <        >   ");
 8001294:	4b43      	ldr	r3, [pc, #268]	@ (80013a4 <screenRefresh+0x2f4>)
 8001296:	9300      	str	r3, [sp, #0]
 8001298:	2300      	movs	r3, #0
 800129a:	224b      	movs	r2, #75	@ 0x4b
 800129c:	211e      	movs	r1, #30
 800129e:	4835      	ldr	r0, [pc, #212]	@ (8001374 <screenRefresh+0x2c4>)
 80012a0:	f003 f97c 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 115,0, "                ");
 80012a4:	4b40      	ldr	r3, [pc, #256]	@ (80013a8 <screenRefresh+0x2f8>)
 80012a6:	9300      	str	r3, [sp, #0]
 80012a8:	2300      	movs	r3, #0
 80012aa:	2273      	movs	r2, #115	@ 0x73
 80012ac:	211e      	movs	r1, #30
 80012ae:	4831      	ldr	r0, [pc, #196]	@ (8001374 <screenRefresh+0x2c4>)
 80012b0:	f003 f974 	bl	800459c <ucg_DrawString>
 80012b4:	e01b      	b.n	80012ee <screenRefresh+0x23e>
			}else if(currentChoice == Screen2_Blue){
 80012b6:	4b39      	ldr	r3, [pc, #228]	@ (800139c <screenRefresh+0x2ec>)
 80012b8:	781b      	ldrb	r3, [r3, #0]
 80012ba:	2b0c      	cmp	r3, #12
 80012bc:	d117      	bne.n	80012ee <screenRefresh+0x23e>
				ucg_DrawString(&ucg, 30, 35,0,  "                ");
 80012be:	4b3a      	ldr	r3, [pc, #232]	@ (80013a8 <screenRefresh+0x2f8>)
 80012c0:	9300      	str	r3, [sp, #0]
 80012c2:	2300      	movs	r3, #0
 80012c4:	2223      	movs	r2, #35	@ 0x23
 80012c6:	211e      	movs	r1, #30
 80012c8:	482a      	ldr	r0, [pc, #168]	@ (8001374 <screenRefresh+0x2c4>)
 80012ca:	f003 f967 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 75,0,  "                ");
 80012ce:	4b36      	ldr	r3, [pc, #216]	@ (80013a8 <screenRefresh+0x2f8>)
 80012d0:	9300      	str	r3, [sp, #0]
 80012d2:	2300      	movs	r3, #0
 80012d4:	224b      	movs	r2, #75	@ 0x4b
 80012d6:	211e      	movs	r1, #30
 80012d8:	4826      	ldr	r0, [pc, #152]	@ (8001374 <screenRefresh+0x2c4>)
 80012da:	f003 f95f 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 115,0, "   <        >   ");
 80012de:	4b31      	ldr	r3, [pc, #196]	@ (80013a4 <screenRefresh+0x2f4>)
 80012e0:	9300      	str	r3, [sp, #0]
 80012e2:	2300      	movs	r3, #0
 80012e4:	2273      	movs	r2, #115	@ 0x73
 80012e6:	211e      	movs	r1, #30
 80012e8:	4822      	ldr	r0, [pc, #136]	@ (8001374 <screenRefresh+0x2c4>)
 80012ea:	f003 f957 	bl	800459c <ucg_DrawString>
			}
			ucg_DrawString(&ucg, 55, 35,0,  (char*)red);
 80012ee:	4b1b      	ldr	r3, [pc, #108]	@ (800135c <screenRefresh+0x2ac>)
 80012f0:	9300      	str	r3, [sp, #0]
 80012f2:	2300      	movs	r3, #0
 80012f4:	2223      	movs	r2, #35	@ 0x23
 80012f6:	2137      	movs	r1, #55	@ 0x37
 80012f8:	481e      	ldr	r0, [pc, #120]	@ (8001374 <screenRefresh+0x2c4>)
 80012fa:	f003 f94f 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 55, 75,0,  (char*)green);
 80012fe:	4b1a      	ldr	r3, [pc, #104]	@ (8001368 <screenRefresh+0x2b8>)
 8001300:	9300      	str	r3, [sp, #0]
 8001302:	2300      	movs	r3, #0
 8001304:	224b      	movs	r2, #75	@ 0x4b
 8001306:	2137      	movs	r1, #55	@ 0x37
 8001308:	481a      	ldr	r0, [pc, #104]	@ (8001374 <screenRefresh+0x2c4>)
 800130a:	f003 f947 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 55, 115,0,  (char*)blue);
 800130e:	4b17      	ldr	r3, [pc, #92]	@ (800136c <screenRefresh+0x2bc>)
 8001310:	9300      	str	r3, [sp, #0]
 8001312:	2300      	movs	r3, #0
 8001314:	2273      	movs	r2, #115	@ 0x73
 8001316:	2137      	movs	r1, #55	@ 0x37
 8001318:	4816      	ldr	r0, [pc, #88]	@ (8001374 <screenRefresh+0x2c4>)
 800131a:	f003 f93f 	bl	800459c <ucg_DrawString>
 800131e:	e069      	b.n	80013f4 <screenRefresh+0x344>
		}else if(sceneNumber == 5){
 8001320:	4b0d      	ldr	r3, [pc, #52]	@ (8001358 <screenRefresh+0x2a8>)
 8001322:	781b      	ldrb	r3, [r3, #0]
 8001324:	2b05      	cmp	r3, #5
 8001326:	d165      	bne.n	80013f4 <screenRefresh+0x344>
			if(currentChoice == Screen5_Hour){
 8001328:	4b1c      	ldr	r3, [pc, #112]	@ (800139c <screenRefresh+0x2ec>)
 800132a:	781b      	ldrb	r3, [r3, #0]
 800132c:	2b14      	cmp	r3, #20
 800132e:	d13d      	bne.n	80013ac <screenRefresh+0x2fc>
				ucg_DrawString(&ucg, 30, 50,0,  "   <        >   ");
 8001330:	4b1c      	ldr	r3, [pc, #112]	@ (80013a4 <screenRefresh+0x2f4>)
 8001332:	9300      	str	r3, [sp, #0]
 8001334:	2300      	movs	r3, #0
 8001336:	2232      	movs	r2, #50	@ 0x32
 8001338:	211e      	movs	r1, #30
 800133a:	480e      	ldr	r0, [pc, #56]	@ (8001374 <screenRefresh+0x2c4>)
 800133c:	f003 f92e 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 100,0, "                ");
 8001340:	4b19      	ldr	r3, [pc, #100]	@ (80013a8 <screenRefresh+0x2f8>)
 8001342:	9300      	str	r3, [sp, #0]
 8001344:	2300      	movs	r3, #0
 8001346:	2264      	movs	r2, #100	@ 0x64
 8001348:	211e      	movs	r1, #30
 800134a:	480a      	ldr	r0, [pc, #40]	@ (8001374 <screenRefresh+0x2c4>)
 800134c:	f003 f926 	bl	800459c <ucg_DrawString>
 8001350:	e040      	b.n	80013d4 <screenRefresh+0x324>
 8001352:	bf00      	nop
 8001354:	200000fd 	.word	0x200000fd
 8001358:	200000fc 	.word	0x200000fc
 800135c:	200001c8 	.word	0x200001c8
 8001360:	200001c0 	.word	0x200001c0
 8001364:	080060a8 	.word	0x080060a8
 8001368:	200001f0 	.word	0x200001f0
 800136c:	200001dc 	.word	0x200001dc
 8001370:	080060b0 	.word	0x080060b0
 8001374:	20000100 	.word	0x20000100
 8001378:	080060bc 	.word	0x080060bc
 800137c:	080060c8 	.word	0x080060c8
 8001380:	2000020c 	.word	0x2000020c
 8001384:	20000204 	.word	0x20000204
 8001388:	080060d4 	.word	0x080060d4
 800138c:	080060dc 	.word	0x080060dc
 8001390:	20000220 	.word	0x20000220
 8001394:	080060ec 	.word	0x080060ec
 8001398:	200001bd 	.word	0x200001bd
 800139c:	200001bc 	.word	0x200001bc
 80013a0:	080060fc 	.word	0x080060fc
 80013a4:	08006110 	.word	0x08006110
 80013a8:	08006124 	.word	0x08006124
			}else if(currentChoice == Screen5_Minute){
 80013ac:	4bb4      	ldr	r3, [pc, #720]	@ (8001680 <screenRefresh+0x5d0>)
 80013ae:	781b      	ldrb	r3, [r3, #0]
 80013b0:	2b15      	cmp	r3, #21
 80013b2:	d10f      	bne.n	80013d4 <screenRefresh+0x324>
				ucg_DrawString(&ucg, 30, 50,0,  "                ");
 80013b4:	4bb3      	ldr	r3, [pc, #716]	@ (8001684 <screenRefresh+0x5d4>)
 80013b6:	9300      	str	r3, [sp, #0]
 80013b8:	2300      	movs	r3, #0
 80013ba:	2232      	movs	r2, #50	@ 0x32
 80013bc:	211e      	movs	r1, #30
 80013be:	48b2      	ldr	r0, [pc, #712]	@ (8001688 <screenRefresh+0x5d8>)
 80013c0:	f003 f8ec 	bl	800459c <ucg_DrawString>
				ucg_DrawString(&ucg, 30, 100,0, "   <        >   ");
 80013c4:	4bb1      	ldr	r3, [pc, #708]	@ (800168c <screenRefresh+0x5dc>)
 80013c6:	9300      	str	r3, [sp, #0]
 80013c8:	2300      	movs	r3, #0
 80013ca:	2264      	movs	r2, #100	@ 0x64
 80013cc:	211e      	movs	r1, #30
 80013ce:	48ae      	ldr	r0, [pc, #696]	@ (8001688 <screenRefresh+0x5d8>)
 80013d0:	f003 f8e4 	bl	800459c <ucg_DrawString>
			}
			ucg_DrawString(&ucg, 60, 50,0,  (char*)hour);
 80013d4:	4bae      	ldr	r3, [pc, #696]	@ (8001690 <screenRefresh+0x5e0>)
 80013d6:	9300      	str	r3, [sp, #0]
 80013d8:	2300      	movs	r3, #0
 80013da:	2232      	movs	r2, #50	@ 0x32
 80013dc:	213c      	movs	r1, #60	@ 0x3c
 80013de:	48aa      	ldr	r0, [pc, #680]	@ (8001688 <screenRefresh+0x5d8>)
 80013e0:	f003 f8dc 	bl	800459c <ucg_DrawString>
			ucg_DrawString(&ucg, 60, 100,0,  (char*)minute);
 80013e4:	4bab      	ldr	r3, [pc, #684]	@ (8001694 <screenRefresh+0x5e4>)
 80013e6:	9300      	str	r3, [sp, #0]
 80013e8:	2300      	movs	r3, #0
 80013ea:	2264      	movs	r2, #100	@ 0x64
 80013ec:	213c      	movs	r1, #60	@ 0x3c
 80013ee:	48a6      	ldr	r0, [pc, #664]	@ (8001688 <screenRefresh+0x5d8>)
 80013f0:	f003 f8d4 	bl	800459c <ucg_DrawString>
		}
		lastChoice = currentChoice;
 80013f4:	4ba2      	ldr	r3, [pc, #648]	@ (8001680 <screenRefresh+0x5d0>)
 80013f6:	781a      	ldrb	r2, [r3, #0]
 80013f8:	4ba7      	ldr	r3, [pc, #668]	@ (8001698 <screenRefresh+0x5e8>)
 80013fa:	701a      	strb	r2, [r3, #0]
	}

	switch(currentChoice){
 80013fc:	4ba0      	ldr	r3, [pc, #640]	@ (8001680 <screenRefresh+0x5d0>)
 80013fe:	781b      	ldrb	r3, [r3, #0]
 8001400:	2b16      	cmp	r3, #22
 8001402:	f200 82b6 	bhi.w	8001972 <screenRefresh+0x8c2>
 8001406:	a201      	add	r2, pc, #4	@ (adr r2, 800140c <screenRefresh+0x35c>)
 8001408:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800140c:	08001469 	.word	0x08001469
 8001410:	0800152d 	.word	0x0800152d
 8001414:	08001557 	.word	0x08001557
 8001418:	08001581 	.word	0x08001581
 800141c:	080015ab 	.word	0x080015ab
 8001420:	080015d5 	.word	0x080015d5
 8001424:	080015ff 	.word	0x080015ff
 8001428:	08001629 	.word	0x08001629
 800142c:	08001653 	.word	0x08001653
 8001430:	08001665 	.word	0x08001665
 8001434:	080016f1 	.word	0x080016f1
 8001438:	0800173d 	.word	0x0800173d
 800143c:	08001789 	.word	0x08001789
 8001440:	080017d5 	.word	0x080017d5
 8001444:	080017e7 	.word	0x080017e7
 8001448:	080017f9 	.word	0x080017f9
 800144c:	08001829 	.word	0x08001829
 8001450:	08001859 	.word	0x08001859
 8001454:	080018b9 	.word	0x080018b9
 8001458:	08001889 	.word	0x08001889
 800145c:	080018e9 	.word	0x080018e9
 8001460:	08001925 	.word	0x08001925
 8001464:	08001961 	.word	0x08001961
	case Screen0_None:
		sprintf(currentTime, "     %.2d : %.2d     ", time[0], time[1]);
 8001468:	4b8c      	ldr	r3, [pc, #560]	@ (800169c <screenRefresh+0x5ec>)
 800146a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800146e:	461a      	mov	r2, r3
 8001470:	4b8a      	ldr	r3, [pc, #552]	@ (800169c <screenRefresh+0x5ec>)
 8001472:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001476:	498a      	ldr	r1, [pc, #552]	@ (80016a0 <screenRefresh+0x5f0>)
 8001478:	488a      	ldr	r0, [pc, #552]	@ (80016a4 <screenRefresh+0x5f4>)
 800147a:	f004 f95d 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 30, 25,0,  "     Room     ");
 800147e:	4b8a      	ldr	r3, [pc, #552]	@ (80016a8 <screenRefresh+0x5f8>)
 8001480:	9300      	str	r3, [sp, #0]
 8001482:	2300      	movs	r3, #0
 8001484:	2219      	movs	r2, #25
 8001486:	211e      	movs	r1, #30
 8001488:	487f      	ldr	r0, [pc, #508]	@ (8001688 <screenRefresh+0x5d8>)
 800148a:	f003 f887 	bl	800459c <ucg_DrawString>
		switch(room){
 800148e:	4b87      	ldr	r3, [pc, #540]	@ (80016ac <screenRefresh+0x5fc>)
 8001490:	781b      	ldrb	r3, [r3, #0]
 8001492:	2b04      	cmp	r3, #4
 8001494:	d839      	bhi.n	800150a <screenRefresh+0x45a>
 8001496:	a201      	add	r2, pc, #4	@ (adr r2, 800149c <screenRefresh+0x3ec>)
 8001498:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800149c:	080014d5 	.word	0x080014d5
 80014a0:	080014c3 	.word	0x080014c3
 80014a4:	080014e7 	.word	0x080014e7
 80014a8:	080014f9 	.word	0x080014f9
 80014ac:	080014b1 	.word	0x080014b1
		case Living:
			ucg_DrawString(&ucg, 30, 50,0,  "    Living    ");
 80014b0:	4b7f      	ldr	r3, [pc, #508]	@ (80016b0 <screenRefresh+0x600>)
 80014b2:	9300      	str	r3, [sp, #0]
 80014b4:	2300      	movs	r3, #0
 80014b6:	2232      	movs	r2, #50	@ 0x32
 80014b8:	211e      	movs	r1, #30
 80014ba:	4873      	ldr	r0, [pc, #460]	@ (8001688 <screenRefresh+0x5d8>)
 80014bc:	f003 f86e 	bl	800459c <ucg_DrawString>
			break;
 80014c0:	e023      	b.n	800150a <screenRefresh+0x45a>
		case Study:
			ucg_DrawString(&ucg, 30, 50,0,  "    Study    ");
 80014c2:	4b7c      	ldr	r3, [pc, #496]	@ (80016b4 <screenRefresh+0x604>)
 80014c4:	9300      	str	r3, [sp, #0]
 80014c6:	2300      	movs	r3, #0
 80014c8:	2232      	movs	r2, #50	@ 0x32
 80014ca:	211e      	movs	r1, #30
 80014cc:	486e      	ldr	r0, [pc, #440]	@ (8001688 <screenRefresh+0x5d8>)
 80014ce:	f003 f865 	bl	800459c <ucg_DrawString>
			break;
 80014d2:	e01a      	b.n	800150a <screenRefresh+0x45a>
		case Sleep:
			ucg_DrawString(&ucg, 30, 50,0,  "    Sleep    ");
 80014d4:	4b78      	ldr	r3, [pc, #480]	@ (80016b8 <screenRefresh+0x608>)
 80014d6:	9300      	str	r3, [sp, #0]
 80014d8:	2300      	movs	r3, #0
 80014da:	2232      	movs	r2, #50	@ 0x32
 80014dc:	211e      	movs	r1, #30
 80014de:	486a      	ldr	r0, [pc, #424]	@ (8001688 <screenRefresh+0x5d8>)
 80014e0:	f003 f85c 	bl	800459c <ucg_DrawString>
			break;
 80014e4:	e011      	b.n	800150a <screenRefresh+0x45a>
		case Dining:
			ucg_DrawString(&ucg, 30, 50,0,  "    Dining    ");
 80014e6:	4b75      	ldr	r3, [pc, #468]	@ (80016bc <screenRefresh+0x60c>)
 80014e8:	9300      	str	r3, [sp, #0]
 80014ea:	2300      	movs	r3, #0
 80014ec:	2232      	movs	r2, #50	@ 0x32
 80014ee:	211e      	movs	r1, #30
 80014f0:	4865      	ldr	r0, [pc, #404]	@ (8001688 <screenRefresh+0x5d8>)
 80014f2:	f003 f853 	bl	800459c <ucg_DrawString>
			break;
 80014f6:	e008      	b.n	800150a <screenRefresh+0x45a>
		case Exercise:
			ucg_DrawString(&ucg, 30, 50,0,  "    Exercise    ");
 80014f8:	4b71      	ldr	r3, [pc, #452]	@ (80016c0 <screenRefresh+0x610>)
 80014fa:	9300      	str	r3, [sp, #0]
 80014fc:	2300      	movs	r3, #0
 80014fe:	2232      	movs	r2, #50	@ 0x32
 8001500:	211e      	movs	r1, #30
 8001502:	4861      	ldr	r0, [pc, #388]	@ (8001688 <screenRefresh+0x5d8>)
 8001504:	f003 f84a 	bl	800459c <ucg_DrawString>
			break;
 8001508:	bf00      	nop
		}
		ucg_DrawString(&ucg, 30, 75,0,  "     Time     ");
 800150a:	4b6e      	ldr	r3, [pc, #440]	@ (80016c4 <screenRefresh+0x614>)
 800150c:	9300      	str	r3, [sp, #0]
 800150e:	2300      	movs	r3, #0
 8001510:	224b      	movs	r2, #75	@ 0x4b
 8001512:	211e      	movs	r1, #30
 8001514:	485c      	ldr	r0, [pc, #368]	@ (8001688 <screenRefresh+0x5d8>)
 8001516:	f003 f841 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 30, 100,0,  currentTime);
 800151a:	4b62      	ldr	r3, [pc, #392]	@ (80016a4 <screenRefresh+0x5f4>)
 800151c:	9300      	str	r3, [sp, #0]
 800151e:	2300      	movs	r3, #0
 8001520:	2264      	movs	r2, #100	@ 0x64
 8001522:	211e      	movs	r1, #30
 8001524:	4858      	ldr	r0, [pc, #352]	@ (8001688 <screenRefresh+0x5d8>)
 8001526:	f003 f839 	bl	800459c <ucg_DrawString>
		break;
 800152a:	e223      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Manual:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 800152c:	4b66      	ldr	r3, [pc, #408]	@ (80016c8 <screenRefresh+0x618>)
 800152e:	9300      	str	r3, [sp, #0]
 8001530:	2300      	movs	r3, #0
 8001532:	2232      	movs	r2, #50	@ 0x32
 8001534:	2123      	movs	r1, #35	@ 0x23
 8001536:	4854      	ldr	r0, [pc, #336]	@ (8001688 <screenRefresh+0x5d8>)
 8001538:	f003 f830 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Manual           ");
 800153c:	4b63      	ldr	r3, [pc, #396]	@ (80016cc <screenRefresh+0x61c>)
 800153e:	9300      	str	r3, [sp, #0]
 8001540:	2300      	movs	r3, #0
 8001542:	2246      	movs	r2, #70	@ 0x46
 8001544:	2123      	movs	r1, #35	@ 0x23
 8001546:	4850      	ldr	r0, [pc, #320]	@ (8001688 <screenRefresh+0x5d8>)
 8001548:	f003 f828 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Manual);
 800154c:	2100      	movs	r1, #0
 800154e:	2006      	movs	r0, #6
 8001550:	f000 fc7c 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001554:	e20e      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Auto:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 8001556:	4b5c      	ldr	r3, [pc, #368]	@ (80016c8 <screenRefresh+0x618>)
 8001558:	9300      	str	r3, [sp, #0]
 800155a:	2300      	movs	r3, #0
 800155c:	2232      	movs	r2, #50	@ 0x32
 800155e:	2123      	movs	r1, #35	@ 0x23
 8001560:	4849      	ldr	r0, [pc, #292]	@ (8001688 <screenRefresh+0x5d8>)
 8001562:	f003 f81b 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Auto             ");
 8001566:	4b5a      	ldr	r3, [pc, #360]	@ (80016d0 <screenRefresh+0x620>)
 8001568:	9300      	str	r3, [sp, #0]
 800156a:	2300      	movs	r3, #0
 800156c:	2246      	movs	r2, #70	@ 0x46
 800156e:	2123      	movs	r1, #35	@ 0x23
 8001570:	4845      	ldr	r0, [pc, #276]	@ (8001688 <screenRefresh+0x5d8>)
 8001572:	f003 f813 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Rainbow);
 8001576:	2101      	movs	r1, #1
 8001578:	2006      	movs	r0, #6
 800157a:	f000 fc67 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 800157e:	e1f9      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Storm:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 8001580:	4b51      	ldr	r3, [pc, #324]	@ (80016c8 <screenRefresh+0x618>)
 8001582:	9300      	str	r3, [sp, #0]
 8001584:	2300      	movs	r3, #0
 8001586:	2232      	movs	r2, #50	@ 0x32
 8001588:	2123      	movs	r1, #35	@ 0x23
 800158a:	483f      	ldr	r0, [pc, #252]	@ (8001688 <screenRefresh+0x5d8>)
 800158c:	f003 f806 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Storm            ");
 8001590:	4b50      	ldr	r3, [pc, #320]	@ (80016d4 <screenRefresh+0x624>)
 8001592:	9300      	str	r3, [sp, #0]
 8001594:	2300      	movs	r3, #0
 8001596:	2246      	movs	r2, #70	@ 0x46
 8001598:	2123      	movs	r1, #35	@ 0x23
 800159a:	483b      	ldr	r0, [pc, #236]	@ (8001688 <screenRefresh+0x5d8>)
 800159c:	f002 fffe 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Storm);
 80015a0:	2102      	movs	r1, #2
 80015a2:	2006      	movs	r0, #6
 80015a4:	f000 fc52 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80015a8:	e1e4      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Fire:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 80015aa:	4b47      	ldr	r3, [pc, #284]	@ (80016c8 <screenRefresh+0x618>)
 80015ac:	9300      	str	r3, [sp, #0]
 80015ae:	2300      	movs	r3, #0
 80015b0:	2232      	movs	r2, #50	@ 0x32
 80015b2:	2123      	movs	r1, #35	@ 0x23
 80015b4:	4834      	ldr	r0, [pc, #208]	@ (8001688 <screenRefresh+0x5d8>)
 80015b6:	f002 fff1 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Fire             ");
 80015ba:	4b47      	ldr	r3, [pc, #284]	@ (80016d8 <screenRefresh+0x628>)
 80015bc:	9300      	str	r3, [sp, #0]
 80015be:	2300      	movs	r3, #0
 80015c0:	2246      	movs	r2, #70	@ 0x46
 80015c2:	2123      	movs	r1, #35	@ 0x23
 80015c4:	4830      	ldr	r0, [pc, #192]	@ (8001688 <screenRefresh+0x5d8>)
 80015c6:	f002 ffe9 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Fire);
 80015ca:	2103      	movs	r1, #3
 80015cc:	2006      	movs	r0, #6
 80015ce:	f000 fc3d 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80015d2:	e1cf      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Aurora:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 80015d4:	4b3c      	ldr	r3, [pc, #240]	@ (80016c8 <screenRefresh+0x618>)
 80015d6:	9300      	str	r3, [sp, #0]
 80015d8:	2300      	movs	r3, #0
 80015da:	2232      	movs	r2, #50	@ 0x32
 80015dc:	2123      	movs	r1, #35	@ 0x23
 80015de:	482a      	ldr	r0, [pc, #168]	@ (8001688 <screenRefresh+0x5d8>)
 80015e0:	f002 ffdc 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "   Aurora            ");
 80015e4:	4b3d      	ldr	r3, [pc, #244]	@ (80016dc <screenRefresh+0x62c>)
 80015e6:	9300      	str	r3, [sp, #0]
 80015e8:	2300      	movs	r3, #0
 80015ea:	2246      	movs	r2, #70	@ 0x46
 80015ec:	2123      	movs	r1, #35	@ 0x23
 80015ee:	4826      	ldr	r0, [pc, #152]	@ (8001688 <screenRefresh+0x5d8>)
 80015f0:	f002 ffd4 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Aurora);
 80015f4:	2104      	movs	r1, #4
 80015f6:	2006      	movs	r0, #6
 80015f8:	f000 fc28 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80015fc:	e1ba      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Party:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 80015fe:	4b32      	ldr	r3, [pc, #200]	@ (80016c8 <screenRefresh+0x618>)
 8001600:	9300      	str	r3, [sp, #0]
 8001602:	2300      	movs	r3, #0
 8001604:	2232      	movs	r2, #50	@ 0x32
 8001606:	2123      	movs	r1, #35	@ 0x23
 8001608:	481f      	ldr	r0, [pc, #124]	@ (8001688 <screenRefresh+0x5d8>)
 800160a:	f002 ffc7 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Party            ");
 800160e:	4b34      	ldr	r3, [pc, #208]	@ (80016e0 <screenRefresh+0x630>)
 8001610:	9300      	str	r3, [sp, #0]
 8001612:	2300      	movs	r3, #0
 8001614:	2246      	movs	r2, #70	@ 0x46
 8001616:	2123      	movs	r1, #35	@ 0x23
 8001618:	481b      	ldr	r0, [pc, #108]	@ (8001688 <screenRefresh+0x5d8>)
 800161a:	f002 ffbf 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Party);
 800161e:	2105      	movs	r1, #5
 8001620:	2006      	movs	r0, #6
 8001622:	f000 fc13 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001626:	e1a5      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Warning:
		ucg_DrawString(&ucg, 35, 50,0,  "    Mode:            ");
 8001628:	4b27      	ldr	r3, [pc, #156]	@ (80016c8 <screenRefresh+0x618>)
 800162a:	9300      	str	r3, [sp, #0]
 800162c:	2300      	movs	r3, #0
 800162e:	2232      	movs	r2, #50	@ 0x32
 8001630:	2123      	movs	r1, #35	@ 0x23
 8001632:	4815      	ldr	r0, [pc, #84]	@ (8001688 <screenRefresh+0x5d8>)
 8001634:	f002 ffb2 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Warning          ");
 8001638:	4b2a      	ldr	r3, [pc, #168]	@ (80016e4 <screenRefresh+0x634>)
 800163a:	9300      	str	r3, [sp, #0]
 800163c:	2300      	movs	r3, #0
 800163e:	2246      	movs	r2, #70	@ 0x46
 8001640:	2123      	movs	r1, #35	@ 0x23
 8001642:	4811      	ldr	r0, [pc, #68]	@ (8001688 <screenRefresh+0x5d8>)
 8001644:	f002 ffaa 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(ActiveMode, Warning);
 8001648:	2106      	movs	r1, #6
 800164a:	2006      	movs	r0, #6
 800164c:	f000 fbfe 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001650:	e190      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Setting:
		ucg_DrawString(&ucg, 35, 60,0,  "   Settings          ");
 8001652:	4b25      	ldr	r3, [pc, #148]	@ (80016e8 <screenRefresh+0x638>)
 8001654:	9300      	str	r3, [sp, #0]
 8001656:	2300      	movs	r3, #0
 8001658:	223c      	movs	r2, #60	@ 0x3c
 800165a:	2123      	movs	r1, #35	@ 0x23
 800165c:	480a      	ldr	r0, [pc, #40]	@ (8001688 <screenRefresh+0x5d8>)
 800165e:	f002 ff9d 	bl	800459c <ucg_DrawString>
		break;
 8001662:	e187      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen1_Off:
		ucg_DrawString(&ucg, 35, 60,0,  "     Off          ");
 8001664:	4b21      	ldr	r3, [pc, #132]	@ (80016ec <screenRefresh+0x63c>)
 8001666:	9300      	str	r3, [sp, #0]
 8001668:	2300      	movs	r3, #0
 800166a:	223c      	movs	r2, #60	@ 0x3c
 800166c:	2123      	movs	r1, #35	@ 0x23
 800166e:	4806      	ldr	r0, [pc, #24]	@ (8001688 <screenRefresh+0x5d8>)
 8001670:	f002 ff94 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Off, 0);
 8001674:	2100      	movs	r1, #0
 8001676:	2007      	movs	r0, #7
 8001678:	f000 fbe8 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 800167c:	e17a      	b.n	8001974 <screenRefresh+0x8c4>
 800167e:	bf00      	nop
 8001680:	200001bc 	.word	0x200001bc
 8001684:	08006124 	.word	0x08006124
 8001688:	20000100 	.word	0x20000100
 800168c:	08006110 	.word	0x08006110
 8001690:	2000020c 	.word	0x2000020c
 8001694:	20000220 	.word	0x20000220
 8001698:	200001bd 	.word	0x200001bd
 800169c:	20000204 	.word	0x20000204
 80016a0:	08006138 	.word	0x08006138
 80016a4:	20000234 	.word	0x20000234
 80016a8:	08006150 	.word	0x08006150
 80016ac:	2000025c 	.word	0x2000025c
 80016b0:	08006160 	.word	0x08006160
 80016b4:	08006170 	.word	0x08006170
 80016b8:	08006180 	.word	0x08006180
 80016bc:	08006190 	.word	0x08006190
 80016c0:	080061a0 	.word	0x080061a0
 80016c4:	080061b4 	.word	0x080061b4
 80016c8:	080061c4 	.word	0x080061c4
 80016cc:	080061dc 	.word	0x080061dc
 80016d0:	080061f4 	.word	0x080061f4
 80016d4:	0800620c 	.word	0x0800620c
 80016d8:	08006224 	.word	0x08006224
 80016dc:	0800623c 	.word	0x0800623c
 80016e0:	08006254 	.word	0x08006254
 80016e4:	0800626c 	.word	0x0800626c
 80016e8:	08006284 	.word	0x08006284
 80016ec:	0800629c 	.word	0x0800629c
	case Screen2_Red:
		memset(red, 0 , sizeof(red));
 80016f0:	2214      	movs	r2, #20
 80016f2:	2100      	movs	r1, #0
 80016f4:	48ab      	ldr	r0, [pc, #684]	@ (80019a4 <screenRefresh+0x8f4>)
 80016f6:	f004 f83f 	bl	8005778 <memset>
		sprintf(red, "%.3d", color[0]);
 80016fa:	4bab      	ldr	r3, [pc, #684]	@ (80019a8 <screenRefresh+0x8f8>)
 80016fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001700:	461a      	mov	r2, r3
 8001702:	49aa      	ldr	r1, [pc, #680]	@ (80019ac <screenRefresh+0x8fc>)
 8001704:	48a7      	ldr	r0, [pc, #668]	@ (80019a4 <screenRefresh+0x8f4>)
 8001706:	f004 f817 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 25, 15,0,  "     Red   ");
 800170a:	4ba9      	ldr	r3, [pc, #676]	@ (80019b0 <screenRefresh+0x900>)
 800170c:	9300      	str	r3, [sp, #0]
 800170e:	2300      	movs	r3, #0
 8001710:	220f      	movs	r2, #15
 8001712:	2119      	movs	r1, #25
 8001714:	48a7      	ldr	r0, [pc, #668]	@ (80019b4 <screenRefresh+0x904>)
 8001716:	f002 ff41 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 55, 35,0,  (char*)red);
 800171a:	4ba2      	ldr	r3, [pc, #648]	@ (80019a4 <screenRefresh+0x8f4>)
 800171c:	9300      	str	r3, [sp, #0]
 800171e:	2300      	movs	r3, #0
 8001720:	2223      	movs	r2, #35	@ 0x23
 8001722:	2137      	movs	r1, #55	@ 0x37
 8001724:	48a3      	ldr	r0, [pc, #652]	@ (80019b4 <screenRefresh+0x904>)
 8001726:	f002 ff39 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Red, color[0]);
 800172a:	4b9f      	ldr	r3, [pc, #636]	@ (80019a8 <screenRefresh+0x8f8>)
 800172c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001730:	b2db      	uxtb	r3, r3
 8001732:	4619      	mov	r1, r3
 8001734:	2003      	movs	r0, #3
 8001736:	f000 fb89 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 800173a:	e11b      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen2_Green:
		memset(green, 0 , sizeof(green));
 800173c:	2214      	movs	r2, #20
 800173e:	2100      	movs	r1, #0
 8001740:	489d      	ldr	r0, [pc, #628]	@ (80019b8 <screenRefresh+0x908>)
 8001742:	f004 f819 	bl	8005778 <memset>
		sprintf(green, "%.3d", color[1]);
 8001746:	4b98      	ldr	r3, [pc, #608]	@ (80019a8 <screenRefresh+0x8f8>)
 8001748:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800174c:	461a      	mov	r2, r3
 800174e:	4997      	ldr	r1, [pc, #604]	@ (80019ac <screenRefresh+0x8fc>)
 8001750:	4899      	ldr	r0, [pc, #612]	@ (80019b8 <screenRefresh+0x908>)
 8001752:	f003 fff1 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 25, 55,0,  "   Green   ");
 8001756:	4b99      	ldr	r3, [pc, #612]	@ (80019bc <screenRefresh+0x90c>)
 8001758:	9300      	str	r3, [sp, #0]
 800175a:	2300      	movs	r3, #0
 800175c:	2237      	movs	r2, #55	@ 0x37
 800175e:	2119      	movs	r1, #25
 8001760:	4894      	ldr	r0, [pc, #592]	@ (80019b4 <screenRefresh+0x904>)
 8001762:	f002 ff1b 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 55, 75,0,  (char*)green);
 8001766:	4b94      	ldr	r3, [pc, #592]	@ (80019b8 <screenRefresh+0x908>)
 8001768:	9300      	str	r3, [sp, #0]
 800176a:	2300      	movs	r3, #0
 800176c:	224b      	movs	r2, #75	@ 0x4b
 800176e:	2137      	movs	r1, #55	@ 0x37
 8001770:	4890      	ldr	r0, [pc, #576]	@ (80019b4 <screenRefresh+0x904>)
 8001772:	f002 ff13 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Green, color[1]);
 8001776:	4b8c      	ldr	r3, [pc, #560]	@ (80019a8 <screenRefresh+0x8f8>)
 8001778:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800177c:	b2db      	uxtb	r3, r3
 800177e:	4619      	mov	r1, r3
 8001780:	2004      	movs	r0, #4
 8001782:	f000 fb63 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001786:	e0f5      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen2_Blue:
		memset(blue, 0 , sizeof(blue));
 8001788:	2214      	movs	r2, #20
 800178a:	2100      	movs	r1, #0
 800178c:	488c      	ldr	r0, [pc, #560]	@ (80019c0 <screenRefresh+0x910>)
 800178e:	f003 fff3 	bl	8005778 <memset>
		sprintf(blue, "%.3d", color[2]);
 8001792:	4b85      	ldr	r3, [pc, #532]	@ (80019a8 <screenRefresh+0x8f8>)
 8001794:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001798:	461a      	mov	r2, r3
 800179a:	4984      	ldr	r1, [pc, #528]	@ (80019ac <screenRefresh+0x8fc>)
 800179c:	4888      	ldr	r0, [pc, #544]	@ (80019c0 <screenRefresh+0x910>)
 800179e:	f003 ffcb 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 25, 95,0,  "    Blue   ");
 80017a2:	4b88      	ldr	r3, [pc, #544]	@ (80019c4 <screenRefresh+0x914>)
 80017a4:	9300      	str	r3, [sp, #0]
 80017a6:	2300      	movs	r3, #0
 80017a8:	225f      	movs	r2, #95	@ 0x5f
 80017aa:	2119      	movs	r1, #25
 80017ac:	4881      	ldr	r0, [pc, #516]	@ (80019b4 <screenRefresh+0x904>)
 80017ae:	f002 fef5 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 55, 115,0,  (char*)blue);
 80017b2:	4b83      	ldr	r3, [pc, #524]	@ (80019c0 <screenRefresh+0x910>)
 80017b4:	9300      	str	r3, [sp, #0]
 80017b6:	2300      	movs	r3, #0
 80017b8:	2273      	movs	r2, #115	@ 0x73
 80017ba:	2137      	movs	r1, #55	@ 0x37
 80017bc:	487d      	ldr	r0, [pc, #500]	@ (80019b4 <screenRefresh+0x904>)
 80017be:	f002 feed 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Blue, color[2]);
 80017c2:	4b79      	ldr	r3, [pc, #484]	@ (80019a8 <screenRefresh+0x8f8>)
 80017c4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80017c8:	b2db      	uxtb	r3, r3
 80017ca:	4619      	mov	r1, r3
 80017cc:	2005      	movs	r0, #5
 80017ce:	f000 fb3d 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80017d2:	e0cf      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen3_Room:
		ucg_DrawString(&ucg, 35, 60,0,  "    Room         ");
 80017d4:	4b7c      	ldr	r3, [pc, #496]	@ (80019c8 <screenRefresh+0x918>)
 80017d6:	9300      	str	r3, [sp, #0]
 80017d8:	2300      	movs	r3, #0
 80017da:	223c      	movs	r2, #60	@ 0x3c
 80017dc:	2123      	movs	r1, #35	@ 0x23
 80017de:	4875      	ldr	r0, [pc, #468]	@ (80019b4 <screenRefresh+0x904>)
 80017e0:	f002 fedc 	bl	800459c <ucg_DrawString>
		break;
 80017e4:	e0c6      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen3_Time:
		ucg_DrawString(&ucg, 35, 60,0,  "    Time         ");
 80017e6:	4b79      	ldr	r3, [pc, #484]	@ (80019cc <screenRefresh+0x91c>)
 80017e8:	9300      	str	r3, [sp, #0]
 80017ea:	2300      	movs	r3, #0
 80017ec:	223c      	movs	r2, #60	@ 0x3c
 80017ee:	2123      	movs	r1, #35	@ 0x23
 80017f0:	4870      	ldr	r0, [pc, #448]	@ (80019b4 <screenRefresh+0x904>)
 80017f2:	f002 fed3 	bl	800459c <ucg_DrawString>
		break;
 80017f6:	e0bd      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen4_Living:
		room = Living;
 80017f8:	4b75      	ldr	r3, [pc, #468]	@ (80019d0 <screenRefresh+0x920>)
 80017fa:	2204      	movs	r2, #4
 80017fc:	701a      	strb	r2, [r3, #0]
		ucg_DrawString(&ucg, 35, 50,0,  "    Room         ");
 80017fe:	4b72      	ldr	r3, [pc, #456]	@ (80019c8 <screenRefresh+0x918>)
 8001800:	9300      	str	r3, [sp, #0]
 8001802:	2300      	movs	r3, #0
 8001804:	2232      	movs	r2, #50	@ 0x32
 8001806:	2123      	movs	r1, #35	@ 0x23
 8001808:	486a      	ldr	r0, [pc, #424]	@ (80019b4 <screenRefresh+0x904>)
 800180a:	f002 fec7 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "   Living        ");
 800180e:	4b71      	ldr	r3, [pc, #452]	@ (80019d4 <screenRefresh+0x924>)
 8001810:	9300      	str	r3, [sp, #0]
 8001812:	2300      	movs	r3, #0
 8001814:	2246      	movs	r2, #70	@ 0x46
 8001816:	2123      	movs	r1, #35	@ 0x23
 8001818:	4866      	ldr	r0, [pc, #408]	@ (80019b4 <screenRefresh+0x904>)
 800181a:	f002 febf 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Room, Living);
 800181e:	2104      	movs	r1, #4
 8001820:	2002      	movs	r0, #2
 8001822:	f000 fb13 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001826:	e0a5      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen4_Sleep:
		room = Sleep;
 8001828:	4b69      	ldr	r3, [pc, #420]	@ (80019d0 <screenRefresh+0x920>)
 800182a:	2200      	movs	r2, #0
 800182c:	701a      	strb	r2, [r3, #0]
		ucg_DrawString(&ucg, 35, 50,0,  "    Room         ");
 800182e:	4b66      	ldr	r3, [pc, #408]	@ (80019c8 <screenRefresh+0x918>)
 8001830:	9300      	str	r3, [sp, #0]
 8001832:	2300      	movs	r3, #0
 8001834:	2232      	movs	r2, #50	@ 0x32
 8001836:	2123      	movs	r1, #35	@ 0x23
 8001838:	485e      	ldr	r0, [pc, #376]	@ (80019b4 <screenRefresh+0x904>)
 800183a:	f002 feaf 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Sleep        ");
 800183e:	4b66      	ldr	r3, [pc, #408]	@ (80019d8 <screenRefresh+0x928>)
 8001840:	9300      	str	r3, [sp, #0]
 8001842:	2300      	movs	r3, #0
 8001844:	2246      	movs	r2, #70	@ 0x46
 8001846:	2123      	movs	r1, #35	@ 0x23
 8001848:	485a      	ldr	r0, [pc, #360]	@ (80019b4 <screenRefresh+0x904>)
 800184a:	f002 fea7 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Room, Sleep);
 800184e:	2100      	movs	r1, #0
 8001850:	2002      	movs	r0, #2
 8001852:	f000 fafb 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001856:	e08d      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen4_Study:
		room = Study;
 8001858:	4b5d      	ldr	r3, [pc, #372]	@ (80019d0 <screenRefresh+0x920>)
 800185a:	2201      	movs	r2, #1
 800185c:	701a      	strb	r2, [r3, #0]
		ucg_DrawString(&ucg, 35, 50,0,  "    Room         ");
 800185e:	4b5a      	ldr	r3, [pc, #360]	@ (80019c8 <screenRefresh+0x918>)
 8001860:	9300      	str	r3, [sp, #0]
 8001862:	2300      	movs	r3, #0
 8001864:	2232      	movs	r2, #50	@ 0x32
 8001866:	2123      	movs	r1, #35	@ 0x23
 8001868:	4852      	ldr	r0, [pc, #328]	@ (80019b4 <screenRefresh+0x904>)
 800186a:	f002 fe97 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "    Study        ");
 800186e:	4b5b      	ldr	r3, [pc, #364]	@ (80019dc <screenRefresh+0x92c>)
 8001870:	9300      	str	r3, [sp, #0]
 8001872:	2300      	movs	r3, #0
 8001874:	2246      	movs	r2, #70	@ 0x46
 8001876:	2123      	movs	r1, #35	@ 0x23
 8001878:	484e      	ldr	r0, [pc, #312]	@ (80019b4 <screenRefresh+0x904>)
 800187a:	f002 fe8f 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Room, Study);
 800187e:	2101      	movs	r1, #1
 8001880:	2002      	movs	r0, #2
 8001882:	f000 fae3 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001886:	e075      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen4_Excercise:
		room = Exercise;
 8001888:	4b51      	ldr	r3, [pc, #324]	@ (80019d0 <screenRefresh+0x920>)
 800188a:	2203      	movs	r2, #3
 800188c:	701a      	strb	r2, [r3, #0]
		ucg_DrawString(&ucg, 35, 50,0,  "    Room         ");
 800188e:	4b4e      	ldr	r3, [pc, #312]	@ (80019c8 <screenRefresh+0x918>)
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	2300      	movs	r3, #0
 8001894:	2232      	movs	r2, #50	@ 0x32
 8001896:	2123      	movs	r1, #35	@ 0x23
 8001898:	4846      	ldr	r0, [pc, #280]	@ (80019b4 <screenRefresh+0x904>)
 800189a:	f002 fe7f 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "  Exercise      ");
 800189e:	4b50      	ldr	r3, [pc, #320]	@ (80019e0 <screenRefresh+0x930>)
 80018a0:	9300      	str	r3, [sp, #0]
 80018a2:	2300      	movs	r3, #0
 80018a4:	2246      	movs	r2, #70	@ 0x46
 80018a6:	2123      	movs	r1, #35	@ 0x23
 80018a8:	4842      	ldr	r0, [pc, #264]	@ (80019b4 <screenRefresh+0x904>)
 80018aa:	f002 fe77 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Room, Exercise);
 80018ae:	2103      	movs	r1, #3
 80018b0:	2002      	movs	r0, #2
 80018b2:	f000 facb 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80018b6:	e05d      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen4_Dining:
		room = Dining;
 80018b8:	4b45      	ldr	r3, [pc, #276]	@ (80019d0 <screenRefresh+0x920>)
 80018ba:	2202      	movs	r2, #2
 80018bc:	701a      	strb	r2, [r3, #0]
		ucg_DrawString(&ucg, 35, 50,0,  "    Room         ");
 80018be:	4b42      	ldr	r3, [pc, #264]	@ (80019c8 <screenRefresh+0x918>)
 80018c0:	9300      	str	r3, [sp, #0]
 80018c2:	2300      	movs	r3, #0
 80018c4:	2232      	movs	r2, #50	@ 0x32
 80018c6:	2123      	movs	r1, #35	@ 0x23
 80018c8:	483a      	ldr	r0, [pc, #232]	@ (80019b4 <screenRefresh+0x904>)
 80018ca:	f002 fe67 	bl	800459c <ucg_DrawString>
		ucg_DrawString(&ucg, 35, 70,0,  "   Dining        ");
 80018ce:	4b45      	ldr	r3, [pc, #276]	@ (80019e4 <screenRefresh+0x934>)
 80018d0:	9300      	str	r3, [sp, #0]
 80018d2:	2300      	movs	r3, #0
 80018d4:	2246      	movs	r2, #70	@ 0x46
 80018d6:	2123      	movs	r1, #35	@ 0x23
 80018d8:	4836      	ldr	r0, [pc, #216]	@ (80019b4 <screenRefresh+0x904>)
 80018da:	f002 fe5f 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Room, Dining);
 80018de:	2102      	movs	r1, #2
 80018e0:	2002      	movs	r0, #2
 80018e2:	f000 fab3 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 80018e6:	e045      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen5_Hour:
		memset(hour, 0 , sizeof(hour));
 80018e8:	2214      	movs	r2, #20
 80018ea:	2100      	movs	r1, #0
 80018ec:	483e      	ldr	r0, [pc, #248]	@ (80019e8 <screenRefresh+0x938>)
 80018ee:	f003 ff43 	bl	8005778 <memset>
		sprintf(hour, "   %.2d   ", time[0]);
 80018f2:	4b3e      	ldr	r3, [pc, #248]	@ (80019ec <screenRefresh+0x93c>)
 80018f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80018f8:	461a      	mov	r2, r3
 80018fa:	493d      	ldr	r1, [pc, #244]	@ (80019f0 <screenRefresh+0x940>)
 80018fc:	483a      	ldr	r0, [pc, #232]	@ (80019e8 <screenRefresh+0x938>)
 80018fe:	f003 ff1b 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 60, 50,0,  (char*)hour);
 8001902:	4b39      	ldr	r3, [pc, #228]	@ (80019e8 <screenRefresh+0x938>)
 8001904:	9300      	str	r3, [sp, #0]
 8001906:	2300      	movs	r3, #0
 8001908:	2232      	movs	r2, #50	@ 0x32
 800190a:	213c      	movs	r1, #60	@ 0x3c
 800190c:	4829      	ldr	r0, [pc, #164]	@ (80019b4 <screenRefresh+0x904>)
 800190e:	f002 fe45 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Hour, time[0]);
 8001912:	4b36      	ldr	r3, [pc, #216]	@ (80019ec <screenRefresh+0x93c>)
 8001914:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001918:	b2db      	uxtb	r3, r3
 800191a:	4619      	mov	r1, r3
 800191c:	2001      	movs	r0, #1
 800191e:	f000 fa95 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 8001922:	e027      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen5_Minute:
		memset(minute, 0 , sizeof(minute));
 8001924:	2214      	movs	r2, #20
 8001926:	2100      	movs	r1, #0
 8001928:	4832      	ldr	r0, [pc, #200]	@ (80019f4 <screenRefresh+0x944>)
 800192a:	f003 ff25 	bl	8005778 <memset>
		sprintf(minute, "  %.2d  ", time[1]);
 800192e:	4b2f      	ldr	r3, [pc, #188]	@ (80019ec <screenRefresh+0x93c>)
 8001930:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001934:	461a      	mov	r2, r3
 8001936:	4930      	ldr	r1, [pc, #192]	@ (80019f8 <screenRefresh+0x948>)
 8001938:	482e      	ldr	r0, [pc, #184]	@ (80019f4 <screenRefresh+0x944>)
 800193a:	f003 fefd 	bl	8005738 <siprintf>
		ucg_DrawString(&ucg, 60, 100,0,  (char*)minute);
 800193e:	4b2d      	ldr	r3, [pc, #180]	@ (80019f4 <screenRefresh+0x944>)
 8001940:	9300      	str	r3, [sp, #0]
 8001942:	2300      	movs	r3, #0
 8001944:	2264      	movs	r2, #100	@ 0x64
 8001946:	213c      	movs	r1, #60	@ 0x3c
 8001948:	481a      	ldr	r0, [pc, #104]	@ (80019b4 <screenRefresh+0x904>)
 800194a:	f002 fe27 	bl	800459c <ucg_DrawString>
		ConfigUSARTBuffer(Minute, time[1]);
 800194e:	4b27      	ldr	r3, [pc, #156]	@ (80019ec <screenRefresh+0x93c>)
 8001950:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001954:	b2db      	uxtb	r3, r3
 8001956:	4619      	mov	r1, r3
 8001958:	2000      	movs	r0, #0
 800195a:	f000 fa77 	bl	8001e4c <ConfigUSARTBuffer>
		break;
 800195e:	e009      	b.n	8001974 <screenRefresh+0x8c4>
	case Screen6_End:
		ucg_DrawString(&ucg, 50, 50,0,  "      End      ");
 8001960:	4b26      	ldr	r3, [pc, #152]	@ (80019fc <screenRefresh+0x94c>)
 8001962:	9300      	str	r3, [sp, #0]
 8001964:	2300      	movs	r3, #0
 8001966:	2232      	movs	r2, #50	@ 0x32
 8001968:	2132      	movs	r1, #50	@ 0x32
 800196a:	4812      	ldr	r0, [pc, #72]	@ (80019b4 <screenRefresh+0x904>)
 800196c:	f002 fe16 	bl	800459c <ucg_DrawString>
		break;
 8001970:	e000      	b.n	8001974 <screenRefresh+0x8c4>
	default:
		break;
 8001972:	bf00      	nop
	}
	TimerStop(SendDataTimer);
 8001974:	4b22      	ldr	r3, [pc, #136]	@ (8001a00 <screenRefresh+0x950>)
 8001976:	781b      	ldrb	r3, [r3, #0]
 8001978:	4618      	mov	r0, r3
 800197a:	f001 fac1 	bl	8002f00 <TimerStop>
	SendDataTimer = NO_TIMER;
 800197e:	4b20      	ldr	r3, [pc, #128]	@ (8001a00 <screenRefresh+0x950>)
 8001980:	22ff      	movs	r2, #255	@ 0xff
 8001982:	701a      	strb	r2, [r3, #0]
	SendDataTimer = TimerStart("SendData",500, TIMER_REPEAT_ONE_TIME, USART2_SendMessage, 0);
 8001984:	2300      	movs	r3, #0
 8001986:	9300      	str	r3, [sp, #0]
 8001988:	4b1e      	ldr	r3, [pc, #120]	@ (8001a04 <screenRefresh+0x954>)
 800198a:	2200      	movs	r2, #0
 800198c:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8001990:	481d      	ldr	r0, [pc, #116]	@ (8001a08 <screenRefresh+0x958>)
 8001992:	f001 fa53 	bl	8002e3c <TimerStart>
 8001996:	4603      	mov	r3, r0
 8001998:	461a      	mov	r2, r3
 800199a:	4b19      	ldr	r3, [pc, #100]	@ (8001a00 <screenRefresh+0x950>)
 800199c:	701a      	strb	r2, [r3, #0]
}
 800199e:	bf00      	nop
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}
 80019a4:	200001c8 	.word	0x200001c8
 80019a8:	200001c0 	.word	0x200001c0
 80019ac:	080060a8 	.word	0x080060a8
 80019b0:	080060b0 	.word	0x080060b0
 80019b4:	20000100 	.word	0x20000100
 80019b8:	200001f0 	.word	0x200001f0
 80019bc:	080060bc 	.word	0x080060bc
 80019c0:	200001dc 	.word	0x200001dc
 80019c4:	080060c8 	.word	0x080060c8
 80019c8:	080062b0 	.word	0x080062b0
 80019cc:	080062c4 	.word	0x080062c4
 80019d0:	2000025c 	.word	0x2000025c
 80019d4:	080062d8 	.word	0x080062d8
 80019d8:	080062ec 	.word	0x080062ec
 80019dc:	08006300 	.word	0x08006300
 80019e0:	08006314 	.word	0x08006314
 80019e4:	08006328 	.word	0x08006328
 80019e8:	2000020c 	.word	0x2000020c
 80019ec:	20000204 	.word	0x20000204
 80019f0:	0800633c 	.word	0x0800633c
 80019f4:	20000220 	.word	0x20000220
 80019f8:	08006348 	.word	0x08006348
 80019fc:	08006354 	.word	0x08006354
 8001a00:	2000001c 	.word	0x2000001c
 8001a04:	08001dcd 	.word	0x08001dcd
 8001a08:	0800609c 	.word	0x0800609c

08001a0c <ButtonInit>:

void ButtonInit(){
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b086      	sub	sp, #24
 8001a10:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;
	EXTI_InitTypeDef EXTI_InitStructure;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 8001a12:	2101      	movs	r1, #1
 8001a14:	2002      	movs	r0, #2
 8001a16:	f000 fe3b 	bl	8002690 <RCC_AHB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 8001a1a:	2101      	movs	r1, #1
 8001a1c:	2001      	movs	r0, #1
 8001a1e:	f000 fe37 	bl	8002690 <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_EXTIT, ENABLE);
 8001a22:	2101      	movs	r1, #1
 8001a24:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8001a28:	f000 fe72 	bl	8002710 <RCC_APB2PeriphClockCmd>
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 8001a2c:	2101      	movs	r1, #1
 8001a2e:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8001a32:	f000 fe6d 	bl	8002710 <RCC_APB2PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8001a36:	2300      	movs	r3, #0
 8001a38:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8001a3a:	2302      	movs	r3, #2
 8001a3c:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8001a3e:	2301      	movs	r3, #1
 8001a40:	75fb      	strb	r3, [r7, #23]

	GPIO_InitStructure.GPIO_Pin = BUTTON1_PIN;
 8001a42:	2320      	movs	r3, #32
 8001a44:	613b      	str	r3, [r7, #16]
	GPIO_Init(BUTTON1_PORT, &GPIO_InitStructure);
 8001a46:	f107 0310 	add.w	r3, r7, #16
 8001a4a:	4619      	mov	r1, r3
 8001a4c:	4823      	ldr	r0, [pc, #140]	@ (8001adc <ButtonInit+0xd0>)
 8001a4e:	f000 fc6d 	bl	800232c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = BUTTON2_PIN;
 8001a52:	2308      	movs	r3, #8
 8001a54:	613b      	str	r3, [r7, #16]
	GPIO_Init(BUTTON2_PORT, &GPIO_InitStructure);
 8001a56:	f107 0310 	add.w	r3, r7, #16
 8001a5a:	4619      	mov	r1, r3
 8001a5c:	481f      	ldr	r0, [pc, #124]	@ (8001adc <ButtonInit+0xd0>)
 8001a5e:	f000 fc65 	bl	800232c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = BUTTON3_PIN;
 8001a62:	2310      	movs	r3, #16
 8001a64:	613b      	str	r3, [r7, #16]
	GPIO_Init(BUTTON3_PORT, &GPIO_InitStructure);
 8001a66:	f107 0310 	add.w	r3, r7, #16
 8001a6a:	4619      	mov	r1, r3
 8001a6c:	481c      	ldr	r0, [pc, #112]	@ (8001ae0 <ButtonInit+0xd4>)
 8001a6e:	f000 fc5d 	bl	800232c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = BUTTON4_PIN;
 8001a72:	2301      	movs	r3, #1
 8001a74:	613b      	str	r3, [r7, #16]
	GPIO_Init(BUTTON4_PORT, &GPIO_InitStructure);
 8001a76:	f107 0310 	add.w	r3, r7, #16
 8001a7a:	4619      	mov	r1, r3
 8001a7c:	4817      	ldr	r0, [pc, #92]	@ (8001adc <ButtonInit+0xd0>)
 8001a7e:	f000 fc55 	bl	800232c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = BUTTON5_PIN;
 8001a82:	2310      	movs	r3, #16
 8001a84:	613b      	str	r3, [r7, #16]
	GPIO_Init(BUTTON5_PORT, &GPIO_InitStructure);
 8001a86:	f107 0310 	add.w	r3, r7, #16
 8001a8a:	4619      	mov	r1, r3
 8001a8c:	4813      	ldr	r0, [pc, #76]	@ (8001adc <ButtonInit+0xd0>)
 8001a8e:	f000 fc4d 	bl	800232c <GPIO_Init>

	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource4);
 8001a92:	2104      	movs	r1, #4
 8001a94:	2000      	movs	r0, #0
 8001a96:	f000 fe5b 	bl	8002750 <SYSCFG_EXTILineConfig>

	EXTI_InitStructure.EXTI_Line = EXTI_Line4;
 8001a9a:	2310      	movs	r3, #16
 8001a9c:	607b      	str	r3, [r7, #4]
	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	723b      	strb	r3, [r7, #8]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
 8001aa2:	230c      	movs	r3, #12
 8001aa4:	727b      	strb	r3, [r7, #9]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8001aa6:	2301      	movs	r3, #1
 8001aa8:	72bb      	strb	r3, [r7, #10]

	EXTI_Init(&EXTI_InitStructure);
 8001aaa:	1d3b      	adds	r3, r7, #4
 8001aac:	4618      	mov	r0, r3
 8001aae:	f000 fbbb 	bl	8002228 <EXTI_Init>

	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 8001ab2:	f44f 60e0 	mov.w	r0, #1792	@ 0x700
 8001ab6:	f000 fb41 	bl	800213c <NVIC_PriorityGroupConfig>
	NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;
 8001aba:	230a      	movs	r3, #10
 8001abc:	733b      	strb	r3, [r7, #12]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8001abe:	2301      	movs	r3, #1
 8001ac0:	73fb      	strb	r3, [r7, #15]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	737b      	strb	r3, [r7, #13]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8001ac6:	2300      	movs	r3, #0
 8001ac8:	73bb      	strb	r3, [r7, #14]
	NVIC_Init(&NVIC_InitStructure);
 8001aca:	f107 030c 	add.w	r3, r7, #12
 8001ace:	4618      	mov	r0, r3
 8001ad0:	f000 fb48 	bl	8002164 <NVIC_Init>
}
 8001ad4:	bf00      	nop
 8001ad6:	3718      	adds	r7, #24
 8001ad8:	46bd      	mov	sp, r7
 8001ada:	bd80      	pop	{r7, pc}
 8001adc:	40020400 	.word	0x40020400
 8001ae0:	40020000 	.word	0x40020000

08001ae4 <EXTI4_IRQHandler>:

//Button B3
void EXTI4_IRQHandler(){
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b082      	sub	sp, #8
 8001ae8:	af02      	add	r7, sp, #8
	static uint32_t lastTime = 0;
	EXTI_ClearITPendingBit(EXTI_Line4);
 8001aea:	2010      	movs	r0, #16
 8001aec:	f000 fc0e 	bl	800230c <EXTI_ClearITPendingBit>
	if( GetMilSecTick() - lastTime > 200){
 8001af0:	f001 fa56 	bl	8002fa0 <GetMilSecTick>
 8001af4:	4602      	mov	r2, r0
 8001af6:	4b11      	ldr	r3, [pc, #68]	@ (8001b3c <EXTI4_IRQHandler+0x58>)
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	1ad3      	subs	r3, r2, r3
 8001afc:	2bc8      	cmp	r3, #200	@ 0xc8
 8001afe:	d919      	bls.n	8001b34 <EXTI4_IRQHandler+0x50>
		ucg_ClearScreen(&ucg);
 8001b00:	480f      	ldr	r0, [pc, #60]	@ (8001b40 <EXTI4_IRQHandler+0x5c>)
 8001b02:	f001 fcf6 	bl	80034f2 <ucg_ClearScreen>
		lastTime = GetMilSecTick();
 8001b06:	f001 fa4b 	bl	8002fa0 <GetMilSecTick>
 8001b0a:	4603      	mov	r3, r0
 8001b0c:	4a0b      	ldr	r2, [pc, #44]	@ (8001b3c <EXTI4_IRQHandler+0x58>)
 8001b0e:	6013      	str	r3, [r2, #0]
		TimerStop(changeSceneTimer);
 8001b10:	4b0c      	ldr	r3, [pc, #48]	@ (8001b44 <EXTI4_IRQHandler+0x60>)
 8001b12:	781b      	ldrb	r3, [r3, #0]
 8001b14:	4618      	mov	r0, r3
 8001b16:	f001 f9f3 	bl	8002f00 <TimerStop>
		changeSceneTimer = TimerStart("Submit",500, TIMER_REPEAT_ONE_TIME, SubmitButtonHandler, &currentChoice);
 8001b1a:	4b0b      	ldr	r3, [pc, #44]	@ (8001b48 <EXTI4_IRQHandler+0x64>)
 8001b1c:	9300      	str	r3, [sp, #0]
 8001b1e:	4b0b      	ldr	r3, [pc, #44]	@ (8001b4c <EXTI4_IRQHandler+0x68>)
 8001b20:	2200      	movs	r2, #0
 8001b22:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8001b26:	480a      	ldr	r0, [pc, #40]	@ (8001b50 <EXTI4_IRQHandler+0x6c>)
 8001b28:	f001 f988 	bl	8002e3c <TimerStart>
 8001b2c:	4603      	mov	r3, r0
 8001b2e:	461a      	mov	r2, r3
 8001b30:	4b04      	ldr	r3, [pc, #16]	@ (8001b44 <EXTI4_IRQHandler+0x60>)
 8001b32:	701a      	strb	r2, [r3, #0]
	}
}
 8001b34:	bf00      	nop
 8001b36:	46bd      	mov	sp, r7
 8001b38:	bd80      	pop	{r7, pc}
 8001b3a:	bf00      	nop
 8001b3c:	20000278 	.word	0x20000278
 8001b40:	20000100 	.word	0x20000100
 8001b44:	2000001a 	.word	0x2000001a
 8001b48:	200001bc 	.word	0x200001bc
 8001b4c:	08000b99 	.word	0x08000b99
 8001b50:	08006364 	.word	0x08006364

08001b54 <LoadConfiguration>:


void LoadConfiguration(){
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af02      	add	r7, sp, #8
	ucg_ClearScreen(&ucg);
 8001b5a:	4833      	ldr	r0, [pc, #204]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001b5c:	f001 fcc9 	bl	80034f2 <ucg_ClearScreen>
	sprintf(currentTime, "     %.2d : %.2d     ", time[0], time[1]);
 8001b60:	4b32      	ldr	r3, [pc, #200]	@ (8001c2c <LoadConfiguration+0xd8>)
 8001b62:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001b66:	461a      	mov	r2, r3
 8001b68:	4b30      	ldr	r3, [pc, #192]	@ (8001c2c <LoadConfiguration+0xd8>)
 8001b6a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001b6e:	4930      	ldr	r1, [pc, #192]	@ (8001c30 <LoadConfiguration+0xdc>)
 8001b70:	4830      	ldr	r0, [pc, #192]	@ (8001c34 <LoadConfiguration+0xe0>)
 8001b72:	f003 fde1 	bl	8005738 <siprintf>
	ucg_DrawString(&ucg, 30, 25,0,  "     Room     ");
 8001b76:	4b30      	ldr	r3, [pc, #192]	@ (8001c38 <LoadConfiguration+0xe4>)
 8001b78:	9300      	str	r3, [sp, #0]
 8001b7a:	2300      	movs	r3, #0
 8001b7c:	2219      	movs	r2, #25
 8001b7e:	211e      	movs	r1, #30
 8001b80:	4829      	ldr	r0, [pc, #164]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001b82:	f002 fd0b 	bl	800459c <ucg_DrawString>
	switch(room){
 8001b86:	4b2d      	ldr	r3, [pc, #180]	@ (8001c3c <LoadConfiguration+0xe8>)
 8001b88:	781b      	ldrb	r3, [r3, #0]
 8001b8a:	2b04      	cmp	r3, #4
 8001b8c:	d839      	bhi.n	8001c02 <LoadConfiguration+0xae>
 8001b8e:	a201      	add	r2, pc, #4	@ (adr r2, 8001b94 <LoadConfiguration+0x40>)
 8001b90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b94:	08001bcd 	.word	0x08001bcd
 8001b98:	08001bbb 	.word	0x08001bbb
 8001b9c:	08001bdf 	.word	0x08001bdf
 8001ba0:	08001bf1 	.word	0x08001bf1
 8001ba4:	08001ba9 	.word	0x08001ba9
	case Living:
		ucg_DrawString(&ucg, 30, 50,0,  "    Living    ");
 8001ba8:	4b25      	ldr	r3, [pc, #148]	@ (8001c40 <LoadConfiguration+0xec>)
 8001baa:	9300      	str	r3, [sp, #0]
 8001bac:	2300      	movs	r3, #0
 8001bae:	2232      	movs	r2, #50	@ 0x32
 8001bb0:	211e      	movs	r1, #30
 8001bb2:	481d      	ldr	r0, [pc, #116]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001bb4:	f002 fcf2 	bl	800459c <ucg_DrawString>
		break;
 8001bb8:	e023      	b.n	8001c02 <LoadConfiguration+0xae>
	case Study:
		ucg_DrawString(&ucg, 30, 50,0,  "    Study    ");
 8001bba:	4b22      	ldr	r3, [pc, #136]	@ (8001c44 <LoadConfiguration+0xf0>)
 8001bbc:	9300      	str	r3, [sp, #0]
 8001bbe:	2300      	movs	r3, #0
 8001bc0:	2232      	movs	r2, #50	@ 0x32
 8001bc2:	211e      	movs	r1, #30
 8001bc4:	4818      	ldr	r0, [pc, #96]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001bc6:	f002 fce9 	bl	800459c <ucg_DrawString>
		break;
 8001bca:	e01a      	b.n	8001c02 <LoadConfiguration+0xae>
	case Sleep:
		ucg_DrawString(&ucg, 30, 50,0,  "    Sleep    ");
 8001bcc:	4b1e      	ldr	r3, [pc, #120]	@ (8001c48 <LoadConfiguration+0xf4>)
 8001bce:	9300      	str	r3, [sp, #0]
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	2232      	movs	r2, #50	@ 0x32
 8001bd4:	211e      	movs	r1, #30
 8001bd6:	4814      	ldr	r0, [pc, #80]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001bd8:	f002 fce0 	bl	800459c <ucg_DrawString>
		break;
 8001bdc:	e011      	b.n	8001c02 <LoadConfiguration+0xae>
	case Dining:
		ucg_DrawString(&ucg, 30, 50,0,  "    Dining    ");
 8001bde:	4b1b      	ldr	r3, [pc, #108]	@ (8001c4c <LoadConfiguration+0xf8>)
 8001be0:	9300      	str	r3, [sp, #0]
 8001be2:	2300      	movs	r3, #0
 8001be4:	2232      	movs	r2, #50	@ 0x32
 8001be6:	211e      	movs	r1, #30
 8001be8:	480f      	ldr	r0, [pc, #60]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001bea:	f002 fcd7 	bl	800459c <ucg_DrawString>
		break;
 8001bee:	e008      	b.n	8001c02 <LoadConfiguration+0xae>
	case Exercise:
		ucg_DrawString(&ucg, 30, 50,0,  "    Exercise    ");
 8001bf0:	4b17      	ldr	r3, [pc, #92]	@ (8001c50 <LoadConfiguration+0xfc>)
 8001bf2:	9300      	str	r3, [sp, #0]
 8001bf4:	2300      	movs	r3, #0
 8001bf6:	2232      	movs	r2, #50	@ 0x32
 8001bf8:	211e      	movs	r1, #30
 8001bfa:	480b      	ldr	r0, [pc, #44]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001bfc:	f002 fcce 	bl	800459c <ucg_DrawString>
		break;
 8001c00:	bf00      	nop
	}
	ucg_DrawString(&ucg, 30, 75,0,  "     Time     ");
 8001c02:	4b14      	ldr	r3, [pc, #80]	@ (8001c54 <LoadConfiguration+0x100>)
 8001c04:	9300      	str	r3, [sp, #0]
 8001c06:	2300      	movs	r3, #0
 8001c08:	224b      	movs	r2, #75	@ 0x4b
 8001c0a:	211e      	movs	r1, #30
 8001c0c:	4806      	ldr	r0, [pc, #24]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001c0e:	f002 fcc5 	bl	800459c <ucg_DrawString>
	ucg_DrawString(&ucg, 30, 100,0,  currentTime);
 8001c12:	4b08      	ldr	r3, [pc, #32]	@ (8001c34 <LoadConfiguration+0xe0>)
 8001c14:	9300      	str	r3, [sp, #0]
 8001c16:	2300      	movs	r3, #0
 8001c18:	2264      	movs	r2, #100	@ 0x64
 8001c1a:	211e      	movs	r1, #30
 8001c1c:	4802      	ldr	r0, [pc, #8]	@ (8001c28 <LoadConfiguration+0xd4>)
 8001c1e:	f002 fcbd 	bl	800459c <ucg_DrawString>
}
 8001c22:	bf00      	nop
 8001c24:	46bd      	mov	sp, r7
 8001c26:	bd80      	pop	{r7, pc}
 8001c28:	20000100 	.word	0x20000100
 8001c2c:	20000204 	.word	0x20000204
 8001c30:	08006138 	.word	0x08006138
 8001c34:	20000234 	.word	0x20000234
 8001c38:	08006150 	.word	0x08006150
 8001c3c:	2000025c 	.word	0x2000025c
 8001c40:	08006160 	.word	0x08006160
 8001c44:	08006170 	.word	0x08006170
 8001c48:	08006180 	.word	0x08006180
 8001c4c:	08006190 	.word	0x08006190
 8001c50:	080061a0 	.word	0x080061a0
 8001c54:	080061b4 	.word	0x080061b4

08001c58 <USART2_Init>:
void USART2_Init(){
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	b088      	sub	sp, #32
 8001c5c:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;
	RCC_AHB1PeriphClockCmd(USARTx_GPIO_CLK, ENABLE);
 8001c5e:	2101      	movs	r1, #1
 8001c60:	2004      	movs	r0, #4
 8001c62:	f000 fd15 	bl	8002690 <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 8001c66:	2101      	movs	r1, #1
 8001c68:	2020      	movs	r0, #32
 8001c6a:	f000 fd51 	bl	8002710 <RCC_APB2PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8001c6e:	2302      	movs	r3, #2
 8001c70:	773b      	strb	r3, [r7, #28]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8001c72:	2302      	movs	r3, #2
 8001c74:	777b      	strb	r3, [r7, #29]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8001c76:	2300      	movs	r3, #0
 8001c78:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8001c7a:	2302      	movs	r3, #2
 8001c7c:	77fb      	strb	r3, [r7, #31]

	GPIO_InitStructure.GPIO_Pin = USARTx_TX_PIN;
 8001c7e:	2340      	movs	r3, #64	@ 0x40
 8001c80:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USARTx_GPIO_PORT, &GPIO_InitStructure);
 8001c82:	f107 0318 	add.w	r3, r7, #24
 8001c86:	4619      	mov	r1, r3
 8001c88:	481c      	ldr	r0, [pc, #112]	@ (8001cfc <USART2_Init+0xa4>)
 8001c8a:	f000 fb4f 	bl	800232c <GPIO_Init>
	GPIO_PinAFConfig(USARTx_GPIO_PORT, USARTx_TX_SOURCE, USARTx_AF);
 8001c8e:	2208      	movs	r2, #8
 8001c90:	2106      	movs	r1, #6
 8001c92:	481a      	ldr	r0, [pc, #104]	@ (8001cfc <USART2_Init+0xa4>)
 8001c94:	f000 fc0a 	bl	80024ac <GPIO_PinAFConfig>

//	GPIO_InitStructure.GPIO_Pin = USARTx_RX_PIN;
//	GPIO_Init(USARTx_GPIO_PORT, &GPIO_InitStructure);
//	GPIO_PinAFConfig(USARTx_GPIO_PORT, USARTx_RX_SOURCE, USARTx_AF);

	USART_InitStructure.USART_BaudRate = 9600;
 8001c98:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8001c9c:	60bb      	str	r3, [r7, #8]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8001c9e:	2300      	movs	r3, #0
 8001ca0:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8001ca2:	2300      	movs	r3, #0
 8001ca4:	81fb      	strh	r3, [r7, #14]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	823b      	strh	r3, [r7, #16]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8001caa:	2300      	movs	r3, #0
 8001cac:	82bb      	strh	r3, [r7, #20]
	USART_InitStructure.USART_Mode = USART_Mode_Tx;// | USART_Mode_Rx;
 8001cae:	2308      	movs	r3, #8
 8001cb0:	827b      	strh	r3, [r7, #18]
	USART_Init(USART6, &USART_InitStructure);
 8001cb2:	f107 0308 	add.w	r3, r7, #8
 8001cb6:	4619      	mov	r1, r3
 8001cb8:	4811      	ldr	r0, [pc, #68]	@ (8001d00 <USART2_Init+0xa8>)
 8001cba:	f000 fe5b 	bl	8002974 <USART_Init>
	USART_Cmd(USART6, ENABLE);
 8001cbe:	2101      	movs	r1, #1
 8001cc0:	480f      	ldr	r0, [pc, #60]	@ (8001d00 <USART2_Init+0xa8>)
 8001cc2:	f000 ff11 	bl	8002ae8 <USART_Cmd>

	USART_ITConfig(USART2,USART_IT_RXNE , ENABLE);
 8001cc6:	2201      	movs	r2, #1
 8001cc8:	f240 5125 	movw	r1, #1317	@ 0x525
 8001ccc:	480d      	ldr	r0, [pc, #52]	@ (8001d04 <USART2_Init+0xac>)
 8001cce:	f000 ff4d 	bl	8002b6c <USART_ITConfig>

	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
 8001cd2:	f44f 60c0 	mov.w	r0, #1536	@ 0x600
 8001cd6:	f000 fa31 	bl	800213c <NVIC_PriorityGroupConfig>
	NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
 8001cda:	2326      	movs	r3, #38	@ 0x26
 8001cdc:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8001cde:	2301      	movs	r3, #1
 8001ce0:	71fb      	strb	r3, [r7, #7]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	71bb      	strb	r3, [r7, #6]
	NVIC_Init(&NVIC_InitStructure);
 8001cea:	1d3b      	adds	r3, r7, #4
 8001cec:	4618      	mov	r0, r3
 8001cee:	f000 fa39 	bl	8002164 <NVIC_Init>
}
 8001cf2:	bf00      	nop
 8001cf4:	3720      	adds	r7, #32
 8001cf6:	46bd      	mov	sp, r7
 8001cf8:	bd80      	pop	{r7, pc}
 8001cfa:	bf00      	nop
 8001cfc:	40020800 	.word	0x40020800
 8001d00:	40011400 	.word	0x40011400
 8001d04:	40004400 	.word	0x40004400

08001d08 <USART2_IRQHandler>:


void USART2_IRQHandler(){
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	af00      	add	r7, sp, #0
	* Save the byte received concurrent with the transmission of the
	* last bit of the previous outgoing byte, and increment the buffer
	* position to the next byte.  Note that this read clears the
	* USART_IF_RXDATAV interrupt flag.
	*/
	if(!USART_GetITStatus(USART2, USART_IT_RXNE)){
 8001d0c:	f240 5125 	movw	r1, #1317	@ 0x525
 8001d10:	480e      	ldr	r0, [pc, #56]	@ (8001d4c <USART2_IRQHandler+0x44>)
 8001d12:	f000 ff8f 	bl	8002c34 <USART_GetITStatus>
 8001d16:	4603      	mov	r3, r0
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	d10c      	bne.n	8001d36 <USART2_IRQHandler+0x2e>
		inbuf[bufpos++] = USART_ReceiveData(USART2);
 8001d1c:	480b      	ldr	r0, [pc, #44]	@ (8001d4c <USART2_IRQHandler+0x44>)
 8001d1e:	f000 ff15 	bl	8002b4c <USART_ReceiveData>
 8001d22:	4603      	mov	r3, r0
 8001d24:	4618      	mov	r0, r3
 8001d26:	4b0a      	ldr	r3, [pc, #40]	@ (8001d50 <USART2_IRQHandler+0x48>)
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	1c5a      	adds	r2, r3, #1
 8001d2c:	4908      	ldr	r1, [pc, #32]	@ (8001d50 <USART2_IRQHandler+0x48>)
 8001d2e:	600a      	str	r2, [r1, #0]
 8001d30:	b2c1      	uxtb	r1, r0
 8001d32:	4a08      	ldr	r2, [pc, #32]	@ (8001d54 <USART2_IRQHandler+0x4c>)
 8001d34:	54d1      	strb	r1, [r2, r3]
	}
	//If corresponding start / stop byte
	USART_ClearITPendingBit(USART2,USART_IT_RXNE);
 8001d36:	f240 5125 	movw	r1, #1317	@ 0x525
 8001d3a:	4804      	ldr	r0, [pc, #16]	@ (8001d4c <USART2_IRQHandler+0x44>)
 8001d3c:	f000 ffd5 	bl	8002cea <USART_ClearITPendingBit>
	UARTBufferPop((messageFrame_t*)inbuf);
 8001d40:	4804      	ldr	r0, [pc, #16]	@ (8001d54 <USART2_IRQHandler+0x4c>)
 8001d42:	f000 f819 	bl	8001d78 <UARTBufferPop>
}
 8001d46:	bf00      	nop
 8001d48:	bd80      	pop	{r7, pc}
 8001d4a:	bf00      	nop
 8001d4c:	40004400 	.word	0x40004400
 8001d50:	20000274 	.word	0x20000274
 8001d54:	20000260 	.word	0x20000260

08001d58 <USART2_ResetBuffer>:

void USART2_ResetBuffer(void){
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	af00      	add	r7, sp, #0
	bufpos = 0;
 8001d5c:	4b04      	ldr	r3, [pc, #16]	@ (8001d70 <USART2_ResetBuffer+0x18>)
 8001d5e:	2200      	movs	r2, #0
 8001d60:	601a      	str	r2, [r3, #0]
	memset(inbuf,0,20);
 8001d62:	2214      	movs	r2, #20
 8001d64:	2100      	movs	r1, #0
 8001d66:	4803      	ldr	r0, [pc, #12]	@ (8001d74 <USART2_ResetBuffer+0x1c>)
 8001d68:	f003 fd06 	bl	8005778 <memset>
}
 8001d6c:	bf00      	nop
 8001d6e:	bd80      	pop	{r7, pc}
 8001d70:	20000274 	.word	0x20000274
 8001d74:	20000260 	.word	0x20000260

08001d78 <UARTBufferPop>:

void UARTBufferPop(messageFrame_t* inBufBase){
 8001d78:	b580      	push	{r7, lr}
 8001d7a:	b084      	sub	sp, #16
 8001d7c:	af00      	add	r7, sp, #0
 8001d7e:	6078      	str	r0, [r7, #4]
	messageFrame_t* common;
	common = inBufBase;
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	60fb      	str	r3, [r7, #12]
	uint8_t receivedData;
	receivedData = common->Data;
 8001d84:	68fb      	ldr	r3, [r7, #12]
 8001d86:	789b      	ldrb	r3, [r3, #2]
 8001d88:	72fb      	strb	r3, [r7, #11]
	if (((common->startByte == 0xB1)) && (common->stopByte == 0xFF)){
 8001d8a:	68fb      	ldr	r3, [r7, #12]
 8001d8c:	781b      	ldrb	r3, [r3, #0]
 8001d8e:	2bb1      	cmp	r3, #177	@ 0xb1
 8001d90:	d115      	bne.n	8001dbe <UARTBufferPop+0x46>
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	78db      	ldrb	r3, [r3, #3]
 8001d96:	2bff      	cmp	r3, #255	@ 0xff
 8001d98:	d111      	bne.n	8001dbe <UARTBufferPop+0x46>
		if(common->msgID == Hour){
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	785b      	ldrb	r3, [r3, #1]
 8001d9e:	2b01      	cmp	r3, #1
 8001da0:	d103      	bne.n	8001daa <UARTBufferPop+0x32>
			time[0] = receivedData;
 8001da2:	7afb      	ldrb	r3, [r7, #11]
 8001da4:	b21a      	sxth	r2, r3
 8001da6:	4b08      	ldr	r3, [pc, #32]	@ (8001dc8 <UARTBufferPop+0x50>)
 8001da8:	801a      	strh	r2, [r3, #0]
		}if(common->msgID == Minute){
 8001daa:	68fb      	ldr	r3, [r7, #12]
 8001dac:	785b      	ldrb	r3, [r3, #1]
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d103      	bne.n	8001dba <UARTBufferPop+0x42>
			time[1] = receivedData;
 8001db2:	7afb      	ldrb	r3, [r7, #11]
 8001db4:	b21a      	sxth	r2, r3
 8001db6:	4b04      	ldr	r3, [pc, #16]	@ (8001dc8 <UARTBufferPop+0x50>)
 8001db8:	805a      	strh	r2, [r3, #2]
		}
		USART2_ResetBuffer();
 8001dba:	f7ff ffcd 	bl	8001d58 <USART2_ResetBuffer>
	}
}
 8001dbe:	bf00      	nop
 8001dc0:	3710      	adds	r7, #16
 8001dc2:	46bd      	mov	sp, r7
 8001dc4:	bd80      	pop	{r7, pc}
 8001dc6:	bf00      	nop
 8001dc8:	20000204 	.word	0x20000204

08001dcc <USART2_SendMessage>:

void USART2_SendMessage(){
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	af00      	add	r7, sp, #0
	while(!USART_GetFlagStatus(USART6, USART_FLAG_TXE));
 8001dd0:	bf00      	nop
 8001dd2:	2180      	movs	r1, #128	@ 0x80
 8001dd4:	481b      	ldr	r0, [pc, #108]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001dd6:	f000 ff11 	bl	8002bfc <USART_GetFlagStatus>
 8001dda:	4603      	mov	r3, r0
 8001ddc:	2b00      	cmp	r3, #0
 8001dde:	d0f8      	beq.n	8001dd2 <USART2_SendMessage+0x6>
	USART_SendData(USART6, messageFrame.startByte);
 8001de0:	4b19      	ldr	r3, [pc, #100]	@ (8001e48 <USART2_SendMessage+0x7c>)
 8001de2:	781b      	ldrb	r3, [r3, #0]
 8001de4:	4619      	mov	r1, r3
 8001de6:	4817      	ldr	r0, [pc, #92]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001de8:	f000 fe9e 	bl	8002b28 <USART_SendData>

	while(!USART_GetFlagStatus(USART6, USART_FLAG_TXE));
 8001dec:	bf00      	nop
 8001dee:	2180      	movs	r1, #128	@ 0x80
 8001df0:	4814      	ldr	r0, [pc, #80]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001df2:	f000 ff03 	bl	8002bfc <USART_GetFlagStatus>
 8001df6:	4603      	mov	r3, r0
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	d0f8      	beq.n	8001dee <USART2_SendMessage+0x22>
	USART_SendData(USART6, messageFrame.msgID);
 8001dfc:	4b12      	ldr	r3, [pc, #72]	@ (8001e48 <USART2_SendMessage+0x7c>)
 8001dfe:	785b      	ldrb	r3, [r3, #1]
 8001e00:	4619      	mov	r1, r3
 8001e02:	4810      	ldr	r0, [pc, #64]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001e04:	f000 fe90 	bl	8002b28 <USART_SendData>

	while(!USART_GetFlagStatus(USART6, USART_FLAG_TXE));
 8001e08:	bf00      	nop
 8001e0a:	2180      	movs	r1, #128	@ 0x80
 8001e0c:	480d      	ldr	r0, [pc, #52]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001e0e:	f000 fef5 	bl	8002bfc <USART_GetFlagStatus>
 8001e12:	4603      	mov	r3, r0
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d0f8      	beq.n	8001e0a <USART2_SendMessage+0x3e>
	USART_SendData(USART6, messageFrame.Data);
 8001e18:	4b0b      	ldr	r3, [pc, #44]	@ (8001e48 <USART2_SendMessage+0x7c>)
 8001e1a:	789b      	ldrb	r3, [r3, #2]
 8001e1c:	4619      	mov	r1, r3
 8001e1e:	4809      	ldr	r0, [pc, #36]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001e20:	f000 fe82 	bl	8002b28 <USART_SendData>

	while(!USART_GetFlagStatus(USART6, USART_FLAG_TXE));
 8001e24:	bf00      	nop
 8001e26:	2180      	movs	r1, #128	@ 0x80
 8001e28:	4806      	ldr	r0, [pc, #24]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001e2a:	f000 fee7 	bl	8002bfc <USART_GetFlagStatus>
 8001e2e:	4603      	mov	r3, r0
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d0f8      	beq.n	8001e26 <USART2_SendMessage+0x5a>
	USART_SendData(USART6, messageFrame.stopByte);
 8001e34:	4b04      	ldr	r3, [pc, #16]	@ (8001e48 <USART2_SendMessage+0x7c>)
 8001e36:	78db      	ldrb	r3, [r3, #3]
 8001e38:	4619      	mov	r1, r3
 8001e3a:	4802      	ldr	r0, [pc, #8]	@ (8001e44 <USART2_SendMessage+0x78>)
 8001e3c:	f000 fe74 	bl	8002b28 <USART_SendData>
}
 8001e40:	bf00      	nop
 8001e42:	bd80      	pop	{r7, pc}
 8001e44:	40011400 	.word	0x40011400
 8001e48:	20000020 	.word	0x20000020

08001e4c <ConfigUSARTBuffer>:

void ConfigUSARTBuffer(MessageType_t msgID, uint8_t data){
 8001e4c:	b480      	push	{r7}
 8001e4e:	b083      	sub	sp, #12
 8001e50:	af00      	add	r7, sp, #0
 8001e52:	4603      	mov	r3, r0
 8001e54:	460a      	mov	r2, r1
 8001e56:	71fb      	strb	r3, [r7, #7]
 8001e58:	4613      	mov	r3, r2
 8001e5a:	71bb      	strb	r3, [r7, #6]
	messageFrame.msgID = msgID;
 8001e5c:	4a05      	ldr	r2, [pc, #20]	@ (8001e74 <ConfigUSARTBuffer+0x28>)
 8001e5e:	79fb      	ldrb	r3, [r7, #7]
 8001e60:	7053      	strb	r3, [r2, #1]
	messageFrame.Data = data;
 8001e62:	4a04      	ldr	r2, [pc, #16]	@ (8001e74 <ConfigUSARTBuffer+0x28>)
 8001e64:	79bb      	ldrb	r3, [r7, #6]
 8001e66:	7093      	strb	r3, [r2, #2]
}
 8001e68:	bf00      	nop
 8001e6a:	370c      	adds	r7, #12
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e72:	4770      	bx	lr
 8001e74:	20000020 	.word	0x20000020

08001e78 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	b086      	sub	sp, #24
 8001e7c:	af00      	add	r7, sp, #0
 8001e7e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001e80:	4a14      	ldr	r2, [pc, #80]	@ (8001ed4 <_sbrk+0x5c>)
 8001e82:	4b15      	ldr	r3, [pc, #84]	@ (8001ed8 <_sbrk+0x60>)
 8001e84:	1ad3      	subs	r3, r2, r3
 8001e86:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001e88:	697b      	ldr	r3, [r7, #20]
 8001e8a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001e8c:	4b13      	ldr	r3, [pc, #76]	@ (8001edc <_sbrk+0x64>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d102      	bne.n	8001e9a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001e94:	4b11      	ldr	r3, [pc, #68]	@ (8001edc <_sbrk+0x64>)
 8001e96:	4a12      	ldr	r2, [pc, #72]	@ (8001ee0 <_sbrk+0x68>)
 8001e98:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001e9a:	4b10      	ldr	r3, [pc, #64]	@ (8001edc <_sbrk+0x64>)
 8001e9c:	681a      	ldr	r2, [r3, #0]
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	4413      	add	r3, r2
 8001ea2:	693a      	ldr	r2, [r7, #16]
 8001ea4:	429a      	cmp	r2, r3
 8001ea6:	d207      	bcs.n	8001eb8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001ea8:	f003 fc6e 	bl	8005788 <__errno>
 8001eac:	4603      	mov	r3, r0
 8001eae:	220c      	movs	r2, #12
 8001eb0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001eb2:	f04f 33ff 	mov.w	r3, #4294967295
 8001eb6:	e009      	b.n	8001ecc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001eb8:	4b08      	ldr	r3, [pc, #32]	@ (8001edc <_sbrk+0x64>)
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001ebe:	4b07      	ldr	r3, [pc, #28]	@ (8001edc <_sbrk+0x64>)
 8001ec0:	681a      	ldr	r2, [r3, #0]
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	4413      	add	r3, r2
 8001ec6:	4a05      	ldr	r2, [pc, #20]	@ (8001edc <_sbrk+0x64>)
 8001ec8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001eca:	68fb      	ldr	r3, [r7, #12]
}
 8001ecc:	4618      	mov	r0, r3
 8001ece:	3718      	adds	r7, #24
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	bd80      	pop	{r7, pc}
 8001ed4:	20018000 	.word	0x20018000
 8001ed8:	00000400 	.word	0x00000400
 8001edc:	2000027c 	.word	0x2000027c
 8001ee0:	20001570 	.word	0x20001570

08001ee4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001ee4:	480d      	ldr	r0, [pc, #52]	@ (8001f1c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001ee6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001ee8:	f000 f826 	bl	8001f38 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001eec:	480c      	ldr	r0, [pc, #48]	@ (8001f20 <LoopForever+0x6>)
  ldr r1, =_edata
 8001eee:	490d      	ldr	r1, [pc, #52]	@ (8001f24 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001ef0:	4a0d      	ldr	r2, [pc, #52]	@ (8001f28 <LoopForever+0xe>)
  movs r3, #0
 8001ef2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ef4:	e002      	b.n	8001efc <LoopCopyDataInit>

08001ef6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001ef6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001ef8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001efa:	3304      	adds	r3, #4

08001efc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001efc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001efe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001f00:	d3f9      	bcc.n	8001ef6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001f02:	4a0a      	ldr	r2, [pc, #40]	@ (8001f2c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001f04:	4c0a      	ldr	r4, [pc, #40]	@ (8001f30 <LoopForever+0x16>)
  movs r3, #0
 8001f06:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001f08:	e001      	b.n	8001f0e <LoopFillZerobss>

08001f0a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001f0a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001f0c:	3204      	adds	r2, #4

08001f0e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001f0e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001f10:	d3fb      	bcc.n	8001f0a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001f12:	f003 fc3f 	bl	8005794 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001f16:	f7fe fbd5 	bl	80006c4 <main>

08001f1a <LoopForever>:

LoopForever:
  b LoopForever
 8001f1a:	e7fe      	b.n	8001f1a <LoopForever>
  ldr   r0, =_estack
 8001f1c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001f20:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001f24:	200000cc 	.word	0x200000cc
  ldr r2, =_sidata
 8001f28:	08006bd4 	.word	0x08006bd4
  ldr r2, =_sbss
 8001f2c:	200000cc 	.word	0x200000cc
  ldr r4, =_ebss
 8001f30:	2000156c 	.word	0x2000156c

08001f34 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001f34:	e7fe      	b.n	8001f34 <ADC_IRQHandler>
	...

08001f38 <SystemInit>:
 8001f38:	b580      	push	{r7, lr}
 8001f3a:	af00      	add	r7, sp, #0
 8001f3c:	4b16      	ldr	r3, [pc, #88]	@ (8001f98 <SystemInit+0x60>)
 8001f3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001f42:	4a15      	ldr	r2, [pc, #84]	@ (8001f98 <SystemInit+0x60>)
 8001f44:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001f48:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001f4c:	4b13      	ldr	r3, [pc, #76]	@ (8001f9c <SystemInit+0x64>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	4a12      	ldr	r2, [pc, #72]	@ (8001f9c <SystemInit+0x64>)
 8001f52:	f043 0301 	orr.w	r3, r3, #1
 8001f56:	6013      	str	r3, [r2, #0]
 8001f58:	4b10      	ldr	r3, [pc, #64]	@ (8001f9c <SystemInit+0x64>)
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	609a      	str	r2, [r3, #8]
 8001f5e:	4b0f      	ldr	r3, [pc, #60]	@ (8001f9c <SystemInit+0x64>)
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	4a0e      	ldr	r2, [pc, #56]	@ (8001f9c <SystemInit+0x64>)
 8001f64:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8001f68:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001f6c:	6013      	str	r3, [r2, #0]
 8001f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8001f9c <SystemInit+0x64>)
 8001f70:	4a0b      	ldr	r2, [pc, #44]	@ (8001fa0 <SystemInit+0x68>)
 8001f72:	605a      	str	r2, [r3, #4]
 8001f74:	4b09      	ldr	r3, [pc, #36]	@ (8001f9c <SystemInit+0x64>)
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	4a08      	ldr	r2, [pc, #32]	@ (8001f9c <SystemInit+0x64>)
 8001f7a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001f7e:	6013      	str	r3, [r2, #0]
 8001f80:	4b06      	ldr	r3, [pc, #24]	@ (8001f9c <SystemInit+0x64>)
 8001f82:	2200      	movs	r2, #0
 8001f84:	60da      	str	r2, [r3, #12]
 8001f86:	f000 f889 	bl	800209c <SetSysClock>
 8001f8a:	4b03      	ldr	r3, [pc, #12]	@ (8001f98 <SystemInit+0x60>)
 8001f8c:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001f90:	609a      	str	r2, [r3, #8]
 8001f92:	bf00      	nop
 8001f94:	bd80      	pop	{r7, pc}
 8001f96:	bf00      	nop
 8001f98:	e000ed00 	.word	0xe000ed00
 8001f9c:	40023800 	.word	0x40023800
 8001fa0:	24003010 	.word	0x24003010

08001fa4 <SystemCoreClockUpdate>:
 8001fa4:	b480      	push	{r7}
 8001fa6:	b087      	sub	sp, #28
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	2300      	movs	r3, #0
 8001fac:	613b      	str	r3, [r7, #16]
 8001fae:	2300      	movs	r3, #0
 8001fb0:	617b      	str	r3, [r7, #20]
 8001fb2:	2302      	movs	r3, #2
 8001fb4:	60fb      	str	r3, [r7, #12]
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	60bb      	str	r3, [r7, #8]
 8001fba:	2302      	movs	r3, #2
 8001fbc:	607b      	str	r3, [r7, #4]
 8001fbe:	4b32      	ldr	r3, [pc, #200]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 8001fc0:	689b      	ldr	r3, [r3, #8]
 8001fc2:	f003 030c 	and.w	r3, r3, #12
 8001fc6:	613b      	str	r3, [r7, #16]
 8001fc8:	693b      	ldr	r3, [r7, #16]
 8001fca:	2b04      	cmp	r3, #4
 8001fcc:	d007      	beq.n	8001fde <SystemCoreClockUpdate+0x3a>
 8001fce:	2b08      	cmp	r3, #8
 8001fd0:	d009      	beq.n	8001fe6 <SystemCoreClockUpdate+0x42>
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d13d      	bne.n	8002052 <SystemCoreClockUpdate+0xae>
 8001fd6:	4b2d      	ldr	r3, [pc, #180]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 8001fd8:	4a2d      	ldr	r2, [pc, #180]	@ (8002090 <SystemCoreClockUpdate+0xec>)
 8001fda:	601a      	str	r2, [r3, #0]
 8001fdc:	e03d      	b.n	800205a <SystemCoreClockUpdate+0xb6>
 8001fde:	4b2b      	ldr	r3, [pc, #172]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 8001fe0:	4a2c      	ldr	r2, [pc, #176]	@ (8002094 <SystemCoreClockUpdate+0xf0>)
 8001fe2:	601a      	str	r2, [r3, #0]
 8001fe4:	e039      	b.n	800205a <SystemCoreClockUpdate+0xb6>
 8001fe6:	4b28      	ldr	r3, [pc, #160]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 8001fe8:	685b      	ldr	r3, [r3, #4]
 8001fea:	0d9b      	lsrs	r3, r3, #22
 8001fec:	f003 0301 	and.w	r3, r3, #1
 8001ff0:	60bb      	str	r3, [r7, #8]
 8001ff2:	4b25      	ldr	r3, [pc, #148]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 8001ff4:	685b      	ldr	r3, [r3, #4]
 8001ff6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001ffa:	607b      	str	r3, [r7, #4]
 8001ffc:	68bb      	ldr	r3, [r7, #8]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d00c      	beq.n	800201c <SystemCoreClockUpdate+0x78>
 8002002:	4a24      	ldr	r2, [pc, #144]	@ (8002094 <SystemCoreClockUpdate+0xf0>)
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	fbb2 f3f3 	udiv	r3, r2, r3
 800200a:	4a1f      	ldr	r2, [pc, #124]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 800200c:	6852      	ldr	r2, [r2, #4]
 800200e:	0992      	lsrs	r2, r2, #6
 8002010:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002014:	fb02 f303 	mul.w	r3, r2, r3
 8002018:	617b      	str	r3, [r7, #20]
 800201a:	e00b      	b.n	8002034 <SystemCoreClockUpdate+0x90>
 800201c:	4a1c      	ldr	r2, [pc, #112]	@ (8002090 <SystemCoreClockUpdate+0xec>)
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	fbb2 f3f3 	udiv	r3, r2, r3
 8002024:	4a18      	ldr	r2, [pc, #96]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 8002026:	6852      	ldr	r2, [r2, #4]
 8002028:	0992      	lsrs	r2, r2, #6
 800202a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800202e:	fb02 f303 	mul.w	r3, r2, r3
 8002032:	617b      	str	r3, [r7, #20]
 8002034:	4b14      	ldr	r3, [pc, #80]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 8002036:	685b      	ldr	r3, [r3, #4]
 8002038:	0c1b      	lsrs	r3, r3, #16
 800203a:	f003 0303 	and.w	r3, r3, #3
 800203e:	3301      	adds	r3, #1
 8002040:	005b      	lsls	r3, r3, #1
 8002042:	60fb      	str	r3, [r7, #12]
 8002044:	697a      	ldr	r2, [r7, #20]
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	fbb2 f3f3 	udiv	r3, r2, r3
 800204c:	4a0f      	ldr	r2, [pc, #60]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 800204e:	6013      	str	r3, [r2, #0]
 8002050:	e003      	b.n	800205a <SystemCoreClockUpdate+0xb6>
 8002052:	4b0e      	ldr	r3, [pc, #56]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 8002054:	4a0e      	ldr	r2, [pc, #56]	@ (8002090 <SystemCoreClockUpdate+0xec>)
 8002056:	601a      	str	r2, [r3, #0]
 8002058:	bf00      	nop
 800205a:	4b0b      	ldr	r3, [pc, #44]	@ (8002088 <SystemCoreClockUpdate+0xe4>)
 800205c:	689b      	ldr	r3, [r3, #8]
 800205e:	091b      	lsrs	r3, r3, #4
 8002060:	f003 030f 	and.w	r3, r3, #15
 8002064:	4a0c      	ldr	r2, [pc, #48]	@ (8002098 <SystemCoreClockUpdate+0xf4>)
 8002066:	5cd3      	ldrb	r3, [r2, r3]
 8002068:	b2db      	uxtb	r3, r3
 800206a:	613b      	str	r3, [r7, #16]
 800206c:	4b07      	ldr	r3, [pc, #28]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 800206e:	681a      	ldr	r2, [r3, #0]
 8002070:	693b      	ldr	r3, [r7, #16]
 8002072:	fa22 f303 	lsr.w	r3, r2, r3
 8002076:	4a05      	ldr	r2, [pc, #20]	@ (800208c <SystemCoreClockUpdate+0xe8>)
 8002078:	6013      	str	r3, [r2, #0]
 800207a:	bf00      	nop
 800207c:	371c      	adds	r7, #28
 800207e:	46bd      	mov	sp, r7
 8002080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002084:	4770      	bx	lr
 8002086:	bf00      	nop
 8002088:	40023800 	.word	0x40023800
 800208c:	20000024 	.word	0x20000024
 8002090:	00f42400 	.word	0x00f42400
 8002094:	017d7840 	.word	0x017d7840
 8002098:	20000028 	.word	0x20000028

0800209c <SetSysClock>:
 800209c:	b480      	push	{r7}
 800209e:	af00      	add	r7, sp, #0
 80020a0:	4b22      	ldr	r3, [pc, #136]	@ (800212c <SetSysClock+0x90>)
 80020a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020a4:	4a21      	ldr	r2, [pc, #132]	@ (800212c <SetSysClock+0x90>)
 80020a6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80020aa:	6413      	str	r3, [r2, #64]	@ 0x40
 80020ac:	4b20      	ldr	r3, [pc, #128]	@ (8002130 <SetSysClock+0x94>)
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	4a1f      	ldr	r2, [pc, #124]	@ (8002130 <SetSysClock+0x94>)
 80020b2:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80020b6:	6013      	str	r3, [r2, #0]
 80020b8:	4b1c      	ldr	r3, [pc, #112]	@ (800212c <SetSysClock+0x90>)
 80020ba:	4a1c      	ldr	r2, [pc, #112]	@ (800212c <SetSysClock+0x90>)
 80020bc:	689b      	ldr	r3, [r3, #8]
 80020be:	6093      	str	r3, [r2, #8]
 80020c0:	4b1a      	ldr	r3, [pc, #104]	@ (800212c <SetSysClock+0x90>)
 80020c2:	4a1a      	ldr	r2, [pc, #104]	@ (800212c <SetSysClock+0x90>)
 80020c4:	689b      	ldr	r3, [r3, #8]
 80020c6:	6093      	str	r3, [r2, #8]
 80020c8:	4b18      	ldr	r3, [pc, #96]	@ (800212c <SetSysClock+0x90>)
 80020ca:	689b      	ldr	r3, [r3, #8]
 80020cc:	4a17      	ldr	r2, [pc, #92]	@ (800212c <SetSysClock+0x90>)
 80020ce:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80020d2:	6093      	str	r3, [r2, #8]
 80020d4:	4b15      	ldr	r3, [pc, #84]	@ (800212c <SetSysClock+0x90>)
 80020d6:	4a17      	ldr	r2, [pc, #92]	@ (8002134 <SetSysClock+0x98>)
 80020d8:	605a      	str	r2, [r3, #4]
 80020da:	4b14      	ldr	r3, [pc, #80]	@ (800212c <SetSysClock+0x90>)
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	4a13      	ldr	r2, [pc, #76]	@ (800212c <SetSysClock+0x90>)
 80020e0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80020e4:	6013      	str	r3, [r2, #0]
 80020e6:	bf00      	nop
 80020e8:	4b10      	ldr	r3, [pc, #64]	@ (800212c <SetSysClock+0x90>)
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d0f9      	beq.n	80020e8 <SetSysClock+0x4c>
 80020f4:	4b10      	ldr	r3, [pc, #64]	@ (8002138 <SetSysClock+0x9c>)
 80020f6:	f240 6202 	movw	r2, #1538	@ 0x602
 80020fa:	601a      	str	r2, [r3, #0]
 80020fc:	4b0b      	ldr	r3, [pc, #44]	@ (800212c <SetSysClock+0x90>)
 80020fe:	689b      	ldr	r3, [r3, #8]
 8002100:	4a0a      	ldr	r2, [pc, #40]	@ (800212c <SetSysClock+0x90>)
 8002102:	f023 0303 	bic.w	r3, r3, #3
 8002106:	6093      	str	r3, [r2, #8]
 8002108:	4b08      	ldr	r3, [pc, #32]	@ (800212c <SetSysClock+0x90>)
 800210a:	689b      	ldr	r3, [r3, #8]
 800210c:	4a07      	ldr	r2, [pc, #28]	@ (800212c <SetSysClock+0x90>)
 800210e:	f043 0302 	orr.w	r3, r3, #2
 8002112:	6093      	str	r3, [r2, #8]
 8002114:	bf00      	nop
 8002116:	4b05      	ldr	r3, [pc, #20]	@ (800212c <SetSysClock+0x90>)
 8002118:	689b      	ldr	r3, [r3, #8]
 800211a:	f003 030c 	and.w	r3, r3, #12
 800211e:	2b08      	cmp	r3, #8
 8002120:	d1f9      	bne.n	8002116 <SetSysClock+0x7a>
 8002122:	bf00      	nop
 8002124:	46bd      	mov	sp, r7
 8002126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800212a:	4770      	bx	lr
 800212c:	40023800 	.word	0x40023800
 8002130:	40007000 	.word	0x40007000
 8002134:	08015410 	.word	0x08015410
 8002138:	40023c00 	.word	0x40023c00

0800213c <NVIC_PriorityGroupConfig>:
 800213c:	b480      	push	{r7}
 800213e:	b083      	sub	sp, #12
 8002140:	af00      	add	r7, sp, #0
 8002142:	6078      	str	r0, [r7, #4]
 8002144:	4a06      	ldr	r2, [pc, #24]	@ (8002160 <NVIC_PriorityGroupConfig+0x24>)
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800214c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002150:	60d3      	str	r3, [r2, #12]
 8002152:	bf00      	nop
 8002154:	370c      	adds	r7, #12
 8002156:	46bd      	mov	sp, r7
 8002158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215c:	4770      	bx	lr
 800215e:	bf00      	nop
 8002160:	e000ed00 	.word	0xe000ed00

08002164 <NVIC_Init>:
 8002164:	b480      	push	{r7}
 8002166:	b085      	sub	sp, #20
 8002168:	af00      	add	r7, sp, #0
 800216a:	6078      	str	r0, [r7, #4]
 800216c:	2300      	movs	r3, #0
 800216e:	73fb      	strb	r3, [r7, #15]
 8002170:	2300      	movs	r3, #0
 8002172:	73bb      	strb	r3, [r7, #14]
 8002174:	230f      	movs	r3, #15
 8002176:	737b      	strb	r3, [r7, #13]
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	78db      	ldrb	r3, [r3, #3]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d039      	beq.n	80021f4 <NVIC_Init+0x90>
 8002180:	4b27      	ldr	r3, [pc, #156]	@ (8002220 <NVIC_Init+0xbc>)
 8002182:	68db      	ldr	r3, [r3, #12]
 8002184:	43db      	mvns	r3, r3
 8002186:	0a1b      	lsrs	r3, r3, #8
 8002188:	b2db      	uxtb	r3, r3
 800218a:	f003 0307 	and.w	r3, r3, #7
 800218e:	73fb      	strb	r3, [r7, #15]
 8002190:	7bfb      	ldrb	r3, [r7, #15]
 8002192:	f1c3 0304 	rsb	r3, r3, #4
 8002196:	73bb      	strb	r3, [r7, #14]
 8002198:	7b7a      	ldrb	r2, [r7, #13]
 800219a:	7bfb      	ldrb	r3, [r7, #15]
 800219c:	fa42 f303 	asr.w	r3, r2, r3
 80021a0:	737b      	strb	r3, [r7, #13]
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	785b      	ldrb	r3, [r3, #1]
 80021a6:	461a      	mov	r2, r3
 80021a8:	7bbb      	ldrb	r3, [r7, #14]
 80021aa:	fa02 f303 	lsl.w	r3, r2, r3
 80021ae:	73fb      	strb	r3, [r7, #15]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	789a      	ldrb	r2, [r3, #2]
 80021b4:	7b7b      	ldrb	r3, [r7, #13]
 80021b6:	4013      	ands	r3, r2
 80021b8:	b2da      	uxtb	r2, r3
 80021ba:	7bfb      	ldrb	r3, [r7, #15]
 80021bc:	4313      	orrs	r3, r2
 80021be:	73fb      	strb	r3, [r7, #15]
 80021c0:	7bfb      	ldrb	r3, [r7, #15]
 80021c2:	011b      	lsls	r3, r3, #4
 80021c4:	73fb      	strb	r3, [r7, #15]
 80021c6:	4a17      	ldr	r2, [pc, #92]	@ (8002224 <NVIC_Init+0xc0>)
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	781b      	ldrb	r3, [r3, #0]
 80021cc:	4413      	add	r3, r2
 80021ce:	7bfa      	ldrb	r2, [r7, #15]
 80021d0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	781b      	ldrb	r3, [r3, #0]
 80021d8:	f003 031f 	and.w	r3, r3, #31
 80021dc:	4911      	ldr	r1, [pc, #68]	@ (8002224 <NVIC_Init+0xc0>)
 80021de:	687a      	ldr	r2, [r7, #4]
 80021e0:	7812      	ldrb	r2, [r2, #0]
 80021e2:	0952      	lsrs	r2, r2, #5
 80021e4:	b2d2      	uxtb	r2, r2
 80021e6:	4610      	mov	r0, r2
 80021e8:	2201      	movs	r2, #1
 80021ea:	fa02 f303 	lsl.w	r3, r2, r3
 80021ee:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80021f2:	e00f      	b.n	8002214 <NVIC_Init+0xb0>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	781b      	ldrb	r3, [r3, #0]
 80021f8:	f003 031f 	and.w	r3, r3, #31
 80021fc:	4909      	ldr	r1, [pc, #36]	@ (8002224 <NVIC_Init+0xc0>)
 80021fe:	687a      	ldr	r2, [r7, #4]
 8002200:	7812      	ldrb	r2, [r2, #0]
 8002202:	0952      	lsrs	r2, r2, #5
 8002204:	b2d2      	uxtb	r2, r2
 8002206:	4610      	mov	r0, r2
 8002208:	2201      	movs	r2, #1
 800220a:	409a      	lsls	r2, r3
 800220c:	f100 0320 	add.w	r3, r0, #32
 8002210:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002214:	bf00      	nop
 8002216:	3714      	adds	r7, #20
 8002218:	46bd      	mov	sp, r7
 800221a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800221e:	4770      	bx	lr
 8002220:	e000ed00 	.word	0xe000ed00
 8002224:	e000e100 	.word	0xe000e100

08002228 <EXTI_Init>:
 8002228:	b480      	push	{r7}
 800222a:	b085      	sub	sp, #20
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	2300      	movs	r3, #0
 8002232:	60fb      	str	r3, [r7, #12]
 8002234:	4b34      	ldr	r3, [pc, #208]	@ (8002308 <EXTI_Init+0xe0>)
 8002236:	60fb      	str	r3, [r7, #12]
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	799b      	ldrb	r3, [r3, #6]
 800223c:	2b00      	cmp	r3, #0
 800223e:	d04f      	beq.n	80022e0 <EXTI_Init+0xb8>
 8002240:	4b31      	ldr	r3, [pc, #196]	@ (8002308 <EXTI_Init+0xe0>)
 8002242:	681a      	ldr	r2, [r3, #0]
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	43db      	mvns	r3, r3
 800224a:	492f      	ldr	r1, [pc, #188]	@ (8002308 <EXTI_Init+0xe0>)
 800224c:	4013      	ands	r3, r2
 800224e:	600b      	str	r3, [r1, #0]
 8002250:	4b2d      	ldr	r3, [pc, #180]	@ (8002308 <EXTI_Init+0xe0>)
 8002252:	685a      	ldr	r2, [r3, #4]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	43db      	mvns	r3, r3
 800225a:	492b      	ldr	r1, [pc, #172]	@ (8002308 <EXTI_Init+0xe0>)
 800225c:	4013      	ands	r3, r2
 800225e:	604b      	str	r3, [r1, #4]
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	791b      	ldrb	r3, [r3, #4]
 8002264:	461a      	mov	r2, r3
 8002266:	68fb      	ldr	r3, [r7, #12]
 8002268:	4413      	add	r3, r2
 800226a:	60fb      	str	r3, [r7, #12]
 800226c:	68fb      	ldr	r3, [r7, #12]
 800226e:	6819      	ldr	r1, [r3, #0]
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	681a      	ldr	r2, [r3, #0]
 8002274:	68fb      	ldr	r3, [r7, #12]
 8002276:	430a      	orrs	r2, r1
 8002278:	601a      	str	r2, [r3, #0]
 800227a:	4b23      	ldr	r3, [pc, #140]	@ (8002308 <EXTI_Init+0xe0>)
 800227c:	689a      	ldr	r2, [r3, #8]
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	43db      	mvns	r3, r3
 8002284:	4920      	ldr	r1, [pc, #128]	@ (8002308 <EXTI_Init+0xe0>)
 8002286:	4013      	ands	r3, r2
 8002288:	608b      	str	r3, [r1, #8]
 800228a:	4b1f      	ldr	r3, [pc, #124]	@ (8002308 <EXTI_Init+0xe0>)
 800228c:	68da      	ldr	r2, [r3, #12]
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	43db      	mvns	r3, r3
 8002294:	491c      	ldr	r1, [pc, #112]	@ (8002308 <EXTI_Init+0xe0>)
 8002296:	4013      	ands	r3, r2
 8002298:	60cb      	str	r3, [r1, #12]
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	795b      	ldrb	r3, [r3, #5]
 800229e:	2b10      	cmp	r3, #16
 80022a0:	d10e      	bne.n	80022c0 <EXTI_Init+0x98>
 80022a2:	4b19      	ldr	r3, [pc, #100]	@ (8002308 <EXTI_Init+0xe0>)
 80022a4:	689a      	ldr	r2, [r3, #8]
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4917      	ldr	r1, [pc, #92]	@ (8002308 <EXTI_Init+0xe0>)
 80022ac:	4313      	orrs	r3, r2
 80022ae:	608b      	str	r3, [r1, #8]
 80022b0:	4b15      	ldr	r3, [pc, #84]	@ (8002308 <EXTI_Init+0xe0>)
 80022b2:	68da      	ldr	r2, [r3, #12]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4913      	ldr	r1, [pc, #76]	@ (8002308 <EXTI_Init+0xe0>)
 80022ba:	4313      	orrs	r3, r2
 80022bc:	60cb      	str	r3, [r1, #12]
 80022be:	e01d      	b.n	80022fc <EXTI_Init+0xd4>
 80022c0:	4b11      	ldr	r3, [pc, #68]	@ (8002308 <EXTI_Init+0xe0>)
 80022c2:	60fb      	str	r3, [r7, #12]
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	795b      	ldrb	r3, [r3, #5]
 80022c8:	461a      	mov	r2, r3
 80022ca:	68fb      	ldr	r3, [r7, #12]
 80022cc:	4413      	add	r3, r2
 80022ce:	60fb      	str	r3, [r7, #12]
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	6819      	ldr	r1, [r3, #0]
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	681a      	ldr	r2, [r3, #0]
 80022d8:	68fb      	ldr	r3, [r7, #12]
 80022da:	430a      	orrs	r2, r1
 80022dc:	601a      	str	r2, [r3, #0]
 80022de:	e00d      	b.n	80022fc <EXTI_Init+0xd4>
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	791b      	ldrb	r3, [r3, #4]
 80022e4:	461a      	mov	r2, r3
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	4413      	add	r3, r2
 80022ea:	60fb      	str	r3, [r7, #12]
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	6819      	ldr	r1, [r3, #0]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	43da      	mvns	r2, r3
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	400a      	ands	r2, r1
 80022fa:	601a      	str	r2, [r3, #0]
 80022fc:	bf00      	nop
 80022fe:	3714      	adds	r7, #20
 8002300:	46bd      	mov	sp, r7
 8002302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002306:	4770      	bx	lr
 8002308:	40013c00 	.word	0x40013c00

0800230c <EXTI_ClearITPendingBit>:
 800230c:	b480      	push	{r7}
 800230e:	b083      	sub	sp, #12
 8002310:	af00      	add	r7, sp, #0
 8002312:	6078      	str	r0, [r7, #4]
 8002314:	4a04      	ldr	r2, [pc, #16]	@ (8002328 <EXTI_ClearITPendingBit+0x1c>)
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	6153      	str	r3, [r2, #20]
 800231a:	bf00      	nop
 800231c:	370c      	adds	r7, #12
 800231e:	46bd      	mov	sp, r7
 8002320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002324:	4770      	bx	lr
 8002326:	bf00      	nop
 8002328:	40013c00 	.word	0x40013c00

0800232c <GPIO_Init>:
 800232c:	b480      	push	{r7}
 800232e:	b087      	sub	sp, #28
 8002330:	af00      	add	r7, sp, #0
 8002332:	6078      	str	r0, [r7, #4]
 8002334:	6039      	str	r1, [r7, #0]
 8002336:	2300      	movs	r3, #0
 8002338:	617b      	str	r3, [r7, #20]
 800233a:	2300      	movs	r3, #0
 800233c:	613b      	str	r3, [r7, #16]
 800233e:	2300      	movs	r3, #0
 8002340:	60fb      	str	r3, [r7, #12]
 8002342:	2300      	movs	r3, #0
 8002344:	617b      	str	r3, [r7, #20]
 8002346:	e076      	b.n	8002436 <GPIO_Init+0x10a>
 8002348:	2201      	movs	r2, #1
 800234a:	697b      	ldr	r3, [r7, #20]
 800234c:	fa02 f303 	lsl.w	r3, r2, r3
 8002350:	613b      	str	r3, [r7, #16]
 8002352:	683b      	ldr	r3, [r7, #0]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	693a      	ldr	r2, [r7, #16]
 8002358:	4013      	ands	r3, r2
 800235a:	60fb      	str	r3, [r7, #12]
 800235c:	68fa      	ldr	r2, [r7, #12]
 800235e:	693b      	ldr	r3, [r7, #16]
 8002360:	429a      	cmp	r2, r3
 8002362:	d165      	bne.n	8002430 <GPIO_Init+0x104>
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	681a      	ldr	r2, [r3, #0]
 8002368:	697b      	ldr	r3, [r7, #20]
 800236a:	005b      	lsls	r3, r3, #1
 800236c:	2103      	movs	r1, #3
 800236e:	fa01 f303 	lsl.w	r3, r1, r3
 8002372:	43db      	mvns	r3, r3
 8002374:	401a      	ands	r2, r3
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	601a      	str	r2, [r3, #0]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681a      	ldr	r2, [r3, #0]
 800237e:	683b      	ldr	r3, [r7, #0]
 8002380:	791b      	ldrb	r3, [r3, #4]
 8002382:	4619      	mov	r1, r3
 8002384:	697b      	ldr	r3, [r7, #20]
 8002386:	005b      	lsls	r3, r3, #1
 8002388:	fa01 f303 	lsl.w	r3, r1, r3
 800238c:	431a      	orrs	r2, r3
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	601a      	str	r2, [r3, #0]
 8002392:	683b      	ldr	r3, [r7, #0]
 8002394:	791b      	ldrb	r3, [r3, #4]
 8002396:	2b01      	cmp	r3, #1
 8002398:	d003      	beq.n	80023a2 <GPIO_Init+0x76>
 800239a:	683b      	ldr	r3, [r7, #0]
 800239c:	791b      	ldrb	r3, [r3, #4]
 800239e:	2b02      	cmp	r3, #2
 80023a0:	d12e      	bne.n	8002400 <GPIO_Init+0xd4>
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	689a      	ldr	r2, [r3, #8]
 80023a6:	697b      	ldr	r3, [r7, #20]
 80023a8:	005b      	lsls	r3, r3, #1
 80023aa:	2103      	movs	r1, #3
 80023ac:	fa01 f303 	lsl.w	r3, r1, r3
 80023b0:	43db      	mvns	r3, r3
 80023b2:	401a      	ands	r2, r3
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	609a      	str	r2, [r3, #8]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	689a      	ldr	r2, [r3, #8]
 80023bc:	683b      	ldr	r3, [r7, #0]
 80023be:	795b      	ldrb	r3, [r3, #5]
 80023c0:	4619      	mov	r1, r3
 80023c2:	697b      	ldr	r3, [r7, #20]
 80023c4:	005b      	lsls	r3, r3, #1
 80023c6:	fa01 f303 	lsl.w	r3, r1, r3
 80023ca:	431a      	orrs	r2, r3
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	609a      	str	r2, [r3, #8]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	685a      	ldr	r2, [r3, #4]
 80023d4:	697b      	ldr	r3, [r7, #20]
 80023d6:	b29b      	uxth	r3, r3
 80023d8:	4619      	mov	r1, r3
 80023da:	2301      	movs	r3, #1
 80023dc:	408b      	lsls	r3, r1
 80023de:	43db      	mvns	r3, r3
 80023e0:	401a      	ands	r2, r3
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	605a      	str	r2, [r3, #4]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	685b      	ldr	r3, [r3, #4]
 80023ea:	683a      	ldr	r2, [r7, #0]
 80023ec:	7992      	ldrb	r2, [r2, #6]
 80023ee:	4611      	mov	r1, r2
 80023f0:	697a      	ldr	r2, [r7, #20]
 80023f2:	b292      	uxth	r2, r2
 80023f4:	fa01 f202 	lsl.w	r2, r1, r2
 80023f8:	b292      	uxth	r2, r2
 80023fa:	431a      	orrs	r2, r3
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	605a      	str	r2, [r3, #4]
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	68da      	ldr	r2, [r3, #12]
 8002404:	697b      	ldr	r3, [r7, #20]
 8002406:	b29b      	uxth	r3, r3
 8002408:	005b      	lsls	r3, r3, #1
 800240a:	2103      	movs	r1, #3
 800240c:	fa01 f303 	lsl.w	r3, r1, r3
 8002410:	43db      	mvns	r3, r3
 8002412:	401a      	ands	r2, r3
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	60da      	str	r2, [r3, #12]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	68da      	ldr	r2, [r3, #12]
 800241c:	683b      	ldr	r3, [r7, #0]
 800241e:	79db      	ldrb	r3, [r3, #7]
 8002420:	4619      	mov	r1, r3
 8002422:	697b      	ldr	r3, [r7, #20]
 8002424:	005b      	lsls	r3, r3, #1
 8002426:	fa01 f303 	lsl.w	r3, r1, r3
 800242a:	431a      	orrs	r2, r3
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	60da      	str	r2, [r3, #12]
 8002430:	697b      	ldr	r3, [r7, #20]
 8002432:	3301      	adds	r3, #1
 8002434:	617b      	str	r3, [r7, #20]
 8002436:	697b      	ldr	r3, [r7, #20]
 8002438:	2b0f      	cmp	r3, #15
 800243a:	d985      	bls.n	8002348 <GPIO_Init+0x1c>
 800243c:	bf00      	nop
 800243e:	371c      	adds	r7, #28
 8002440:	46bd      	mov	sp, r7
 8002442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002446:	4770      	bx	lr

08002448 <GPIO_ReadInputDataBit>:
 8002448:	b480      	push	{r7}
 800244a:	b085      	sub	sp, #20
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	460b      	mov	r3, r1
 8002452:	807b      	strh	r3, [r7, #2]
 8002454:	2300      	movs	r3, #0
 8002456:	73fb      	strb	r3, [r7, #15]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	691a      	ldr	r2, [r3, #16]
 800245c:	887b      	ldrh	r3, [r7, #2]
 800245e:	4013      	ands	r3, r2
 8002460:	2b00      	cmp	r3, #0
 8002462:	d002      	beq.n	800246a <GPIO_ReadInputDataBit+0x22>
 8002464:	2301      	movs	r3, #1
 8002466:	73fb      	strb	r3, [r7, #15]
 8002468:	e001      	b.n	800246e <GPIO_ReadInputDataBit+0x26>
 800246a:	2300      	movs	r3, #0
 800246c:	73fb      	strb	r3, [r7, #15]
 800246e:	7bfb      	ldrb	r3, [r7, #15]
 8002470:	4618      	mov	r0, r3
 8002472:	3714      	adds	r7, #20
 8002474:	46bd      	mov	sp, r7
 8002476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247a:	4770      	bx	lr

0800247c <GPIO_WriteBit>:
 800247c:	b480      	push	{r7}
 800247e:	b083      	sub	sp, #12
 8002480:	af00      	add	r7, sp, #0
 8002482:	6078      	str	r0, [r7, #4]
 8002484:	460b      	mov	r3, r1
 8002486:	807b      	strh	r3, [r7, #2]
 8002488:	4613      	mov	r3, r2
 800248a:	707b      	strb	r3, [r7, #1]
 800248c:	787b      	ldrb	r3, [r7, #1]
 800248e:	2b00      	cmp	r3, #0
 8002490:	d003      	beq.n	800249a <GPIO_WriteBit+0x1e>
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	887a      	ldrh	r2, [r7, #2]
 8002496:	831a      	strh	r2, [r3, #24]
 8002498:	e002      	b.n	80024a0 <GPIO_WriteBit+0x24>
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	887a      	ldrh	r2, [r7, #2]
 800249e:	835a      	strh	r2, [r3, #26]
 80024a0:	bf00      	nop
 80024a2:	370c      	adds	r7, #12
 80024a4:	46bd      	mov	sp, r7
 80024a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024aa:	4770      	bx	lr

080024ac <GPIO_PinAFConfig>:
 80024ac:	b480      	push	{r7}
 80024ae:	b085      	sub	sp, #20
 80024b0:	af00      	add	r7, sp, #0
 80024b2:	6078      	str	r0, [r7, #4]
 80024b4:	460b      	mov	r3, r1
 80024b6:	807b      	strh	r3, [r7, #2]
 80024b8:	4613      	mov	r3, r2
 80024ba:	707b      	strb	r3, [r7, #1]
 80024bc:	2300      	movs	r3, #0
 80024be:	60fb      	str	r3, [r7, #12]
 80024c0:	2300      	movs	r3, #0
 80024c2:	60bb      	str	r3, [r7, #8]
 80024c4:	787a      	ldrb	r2, [r7, #1]
 80024c6:	887b      	ldrh	r3, [r7, #2]
 80024c8:	f003 0307 	and.w	r3, r3, #7
 80024cc:	009b      	lsls	r3, r3, #2
 80024ce:	fa02 f303 	lsl.w	r3, r2, r3
 80024d2:	60fb      	str	r3, [r7, #12]
 80024d4:	887b      	ldrh	r3, [r7, #2]
 80024d6:	08db      	lsrs	r3, r3, #3
 80024d8:	b29b      	uxth	r3, r3
 80024da:	461a      	mov	r2, r3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	3208      	adds	r2, #8
 80024e0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80024e4:	887b      	ldrh	r3, [r7, #2]
 80024e6:	f003 0307 	and.w	r3, r3, #7
 80024ea:	009b      	lsls	r3, r3, #2
 80024ec:	210f      	movs	r1, #15
 80024ee:	fa01 f303 	lsl.w	r3, r1, r3
 80024f2:	43db      	mvns	r3, r3
 80024f4:	8879      	ldrh	r1, [r7, #2]
 80024f6:	08c9      	lsrs	r1, r1, #3
 80024f8:	b289      	uxth	r1, r1
 80024fa:	4608      	mov	r0, r1
 80024fc:	ea02 0103 	and.w	r1, r2, r3
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	f100 0208 	add.w	r2, r0, #8
 8002506:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800250a:	887b      	ldrh	r3, [r7, #2]
 800250c:	08db      	lsrs	r3, r3, #3
 800250e:	b29b      	uxth	r3, r3
 8002510:	461a      	mov	r2, r3
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	3208      	adds	r2, #8
 8002516:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800251a:	68fa      	ldr	r2, [r7, #12]
 800251c:	4313      	orrs	r3, r2
 800251e:	60bb      	str	r3, [r7, #8]
 8002520:	887b      	ldrh	r3, [r7, #2]
 8002522:	08db      	lsrs	r3, r3, #3
 8002524:	b29b      	uxth	r3, r3
 8002526:	461a      	mov	r2, r3
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	3208      	adds	r2, #8
 800252c:	68b9      	ldr	r1, [r7, #8]
 800252e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002532:	bf00      	nop
 8002534:	3714      	adds	r7, #20
 8002536:	46bd      	mov	sp, r7
 8002538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800253c:	4770      	bx	lr
	...

08002540 <RCC_GetClocksFreq>:
 8002540:	b480      	push	{r7}
 8002542:	b089      	sub	sp, #36	@ 0x24
 8002544:	af00      	add	r7, sp, #0
 8002546:	6078      	str	r0, [r7, #4]
 8002548:	2300      	movs	r3, #0
 800254a:	61bb      	str	r3, [r7, #24]
 800254c:	2300      	movs	r3, #0
 800254e:	617b      	str	r3, [r7, #20]
 8002550:	2300      	movs	r3, #0
 8002552:	61fb      	str	r3, [r7, #28]
 8002554:	2302      	movs	r3, #2
 8002556:	613b      	str	r3, [r7, #16]
 8002558:	2300      	movs	r3, #0
 800255a:	60fb      	str	r3, [r7, #12]
 800255c:	2302      	movs	r3, #2
 800255e:	60bb      	str	r3, [r7, #8]
 8002560:	4b47      	ldr	r3, [pc, #284]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 8002562:	689b      	ldr	r3, [r3, #8]
 8002564:	f003 030c 	and.w	r3, r3, #12
 8002568:	61bb      	str	r3, [r7, #24]
 800256a:	69bb      	ldr	r3, [r7, #24]
 800256c:	2b04      	cmp	r3, #4
 800256e:	d007      	beq.n	8002580 <RCC_GetClocksFreq+0x40>
 8002570:	2b08      	cmp	r3, #8
 8002572:	d009      	beq.n	8002588 <RCC_GetClocksFreq+0x48>
 8002574:	2b00      	cmp	r3, #0
 8002576:	d13d      	bne.n	80025f4 <RCC_GetClocksFreq+0xb4>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	4a42      	ldr	r2, [pc, #264]	@ (8002684 <RCC_GetClocksFreq+0x144>)
 800257c:	601a      	str	r2, [r3, #0]
 800257e:	e03d      	b.n	80025fc <RCC_GetClocksFreq+0xbc>
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	4a41      	ldr	r2, [pc, #260]	@ (8002688 <RCC_GetClocksFreq+0x148>)
 8002584:	601a      	str	r2, [r3, #0]
 8002586:	e039      	b.n	80025fc <RCC_GetClocksFreq+0xbc>
 8002588:	4b3d      	ldr	r3, [pc, #244]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 800258a:	685b      	ldr	r3, [r3, #4]
 800258c:	0d9b      	lsrs	r3, r3, #22
 800258e:	f003 0301 	and.w	r3, r3, #1
 8002592:	60fb      	str	r3, [r7, #12]
 8002594:	4b3a      	ldr	r3, [pc, #232]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 8002596:	685b      	ldr	r3, [r3, #4]
 8002598:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800259c:	60bb      	str	r3, [r7, #8]
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d00c      	beq.n	80025be <RCC_GetClocksFreq+0x7e>
 80025a4:	4a38      	ldr	r2, [pc, #224]	@ (8002688 <RCC_GetClocksFreq+0x148>)
 80025a6:	68bb      	ldr	r3, [r7, #8]
 80025a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80025ac:	4a34      	ldr	r2, [pc, #208]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 80025ae:	6852      	ldr	r2, [r2, #4]
 80025b0:	0992      	lsrs	r2, r2, #6
 80025b2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80025b6:	fb02 f303 	mul.w	r3, r2, r3
 80025ba:	61fb      	str	r3, [r7, #28]
 80025bc:	e00b      	b.n	80025d6 <RCC_GetClocksFreq+0x96>
 80025be:	4a31      	ldr	r2, [pc, #196]	@ (8002684 <RCC_GetClocksFreq+0x144>)
 80025c0:	68bb      	ldr	r3, [r7, #8]
 80025c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80025c6:	4a2e      	ldr	r2, [pc, #184]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 80025c8:	6852      	ldr	r2, [r2, #4]
 80025ca:	0992      	lsrs	r2, r2, #6
 80025cc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80025d0:	fb02 f303 	mul.w	r3, r2, r3
 80025d4:	61fb      	str	r3, [r7, #28]
 80025d6:	4b2a      	ldr	r3, [pc, #168]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 80025d8:	685b      	ldr	r3, [r3, #4]
 80025da:	0c1b      	lsrs	r3, r3, #16
 80025dc:	f003 0303 	and.w	r3, r3, #3
 80025e0:	3301      	adds	r3, #1
 80025e2:	005b      	lsls	r3, r3, #1
 80025e4:	613b      	str	r3, [r7, #16]
 80025e6:	69fa      	ldr	r2, [r7, #28]
 80025e8:	693b      	ldr	r3, [r7, #16]
 80025ea:	fbb2 f2f3 	udiv	r2, r2, r3
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	601a      	str	r2, [r3, #0]
 80025f2:	e003      	b.n	80025fc <RCC_GetClocksFreq+0xbc>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	4a23      	ldr	r2, [pc, #140]	@ (8002684 <RCC_GetClocksFreq+0x144>)
 80025f8:	601a      	str	r2, [r3, #0]
 80025fa:	bf00      	nop
 80025fc:	4b20      	ldr	r3, [pc, #128]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 80025fe:	689b      	ldr	r3, [r3, #8]
 8002600:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002604:	61bb      	str	r3, [r7, #24]
 8002606:	69bb      	ldr	r3, [r7, #24]
 8002608:	091b      	lsrs	r3, r3, #4
 800260a:	61bb      	str	r3, [r7, #24]
 800260c:	4a1f      	ldr	r2, [pc, #124]	@ (800268c <RCC_GetClocksFreq+0x14c>)
 800260e:	69bb      	ldr	r3, [r7, #24]
 8002610:	4413      	add	r3, r2
 8002612:	781b      	ldrb	r3, [r3, #0]
 8002614:	b2db      	uxtb	r3, r3
 8002616:	617b      	str	r3, [r7, #20]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681a      	ldr	r2, [r3, #0]
 800261c:	697b      	ldr	r3, [r7, #20]
 800261e:	40da      	lsrs	r2, r3
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	605a      	str	r2, [r3, #4]
 8002624:	4b16      	ldr	r3, [pc, #88]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 8002626:	689b      	ldr	r3, [r3, #8]
 8002628:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800262c:	61bb      	str	r3, [r7, #24]
 800262e:	69bb      	ldr	r3, [r7, #24]
 8002630:	0a9b      	lsrs	r3, r3, #10
 8002632:	61bb      	str	r3, [r7, #24]
 8002634:	4a15      	ldr	r2, [pc, #84]	@ (800268c <RCC_GetClocksFreq+0x14c>)
 8002636:	69bb      	ldr	r3, [r7, #24]
 8002638:	4413      	add	r3, r2
 800263a:	781b      	ldrb	r3, [r3, #0]
 800263c:	b2db      	uxtb	r3, r3
 800263e:	617b      	str	r3, [r7, #20]
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	685a      	ldr	r2, [r3, #4]
 8002644:	697b      	ldr	r3, [r7, #20]
 8002646:	40da      	lsrs	r2, r3
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	609a      	str	r2, [r3, #8]
 800264c:	4b0c      	ldr	r3, [pc, #48]	@ (8002680 <RCC_GetClocksFreq+0x140>)
 800264e:	689b      	ldr	r3, [r3, #8]
 8002650:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8002654:	61bb      	str	r3, [r7, #24]
 8002656:	69bb      	ldr	r3, [r7, #24]
 8002658:	0b5b      	lsrs	r3, r3, #13
 800265a:	61bb      	str	r3, [r7, #24]
 800265c:	4a0b      	ldr	r2, [pc, #44]	@ (800268c <RCC_GetClocksFreq+0x14c>)
 800265e:	69bb      	ldr	r3, [r7, #24]
 8002660:	4413      	add	r3, r2
 8002662:	781b      	ldrb	r3, [r3, #0]
 8002664:	b2db      	uxtb	r3, r3
 8002666:	617b      	str	r3, [r7, #20]
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	685a      	ldr	r2, [r3, #4]
 800266c:	697b      	ldr	r3, [r7, #20]
 800266e:	40da      	lsrs	r2, r3
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	60da      	str	r2, [r3, #12]
 8002674:	bf00      	nop
 8002676:	3724      	adds	r7, #36	@ 0x24
 8002678:	46bd      	mov	sp, r7
 800267a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800267e:	4770      	bx	lr
 8002680:	40023800 	.word	0x40023800
 8002684:	00f42400 	.word	0x00f42400
 8002688:	017d7840 	.word	0x017d7840
 800268c:	20000038 	.word	0x20000038

08002690 <RCC_AHB1PeriphClockCmd>:
 8002690:	b480      	push	{r7}
 8002692:	b083      	sub	sp, #12
 8002694:	af00      	add	r7, sp, #0
 8002696:	6078      	str	r0, [r7, #4]
 8002698:	460b      	mov	r3, r1
 800269a:	70fb      	strb	r3, [r7, #3]
 800269c:	78fb      	ldrb	r3, [r7, #3]
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d006      	beq.n	80026b0 <RCC_AHB1PeriphClockCmd+0x20>
 80026a2:	4b0a      	ldr	r3, [pc, #40]	@ (80026cc <RCC_AHB1PeriphClockCmd+0x3c>)
 80026a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80026a6:	4909      	ldr	r1, [pc, #36]	@ (80026cc <RCC_AHB1PeriphClockCmd+0x3c>)
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	4313      	orrs	r3, r2
 80026ac:	630b      	str	r3, [r1, #48]	@ 0x30
 80026ae:	e006      	b.n	80026be <RCC_AHB1PeriphClockCmd+0x2e>
 80026b0:	4b06      	ldr	r3, [pc, #24]	@ (80026cc <RCC_AHB1PeriphClockCmd+0x3c>)
 80026b2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	43db      	mvns	r3, r3
 80026b8:	4904      	ldr	r1, [pc, #16]	@ (80026cc <RCC_AHB1PeriphClockCmd+0x3c>)
 80026ba:	4013      	ands	r3, r2
 80026bc:	630b      	str	r3, [r1, #48]	@ 0x30
 80026be:	bf00      	nop
 80026c0:	370c      	adds	r7, #12
 80026c2:	46bd      	mov	sp, r7
 80026c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c8:	4770      	bx	lr
 80026ca:	bf00      	nop
 80026cc:	40023800 	.word	0x40023800

080026d0 <RCC_APB1PeriphClockCmd>:
 80026d0:	b480      	push	{r7}
 80026d2:	b083      	sub	sp, #12
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	6078      	str	r0, [r7, #4]
 80026d8:	460b      	mov	r3, r1
 80026da:	70fb      	strb	r3, [r7, #3]
 80026dc:	78fb      	ldrb	r3, [r7, #3]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d006      	beq.n	80026f0 <RCC_APB1PeriphClockCmd+0x20>
 80026e2:	4b0a      	ldr	r3, [pc, #40]	@ (800270c <RCC_APB1PeriphClockCmd+0x3c>)
 80026e4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80026e6:	4909      	ldr	r1, [pc, #36]	@ (800270c <RCC_APB1PeriphClockCmd+0x3c>)
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	4313      	orrs	r3, r2
 80026ec:	640b      	str	r3, [r1, #64]	@ 0x40
 80026ee:	e006      	b.n	80026fe <RCC_APB1PeriphClockCmd+0x2e>
 80026f0:	4b06      	ldr	r3, [pc, #24]	@ (800270c <RCC_APB1PeriphClockCmd+0x3c>)
 80026f2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	43db      	mvns	r3, r3
 80026f8:	4904      	ldr	r1, [pc, #16]	@ (800270c <RCC_APB1PeriphClockCmd+0x3c>)
 80026fa:	4013      	ands	r3, r2
 80026fc:	640b      	str	r3, [r1, #64]	@ 0x40
 80026fe:	bf00      	nop
 8002700:	370c      	adds	r7, #12
 8002702:	46bd      	mov	sp, r7
 8002704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002708:	4770      	bx	lr
 800270a:	bf00      	nop
 800270c:	40023800 	.word	0x40023800

08002710 <RCC_APB2PeriphClockCmd>:
 8002710:	b480      	push	{r7}
 8002712:	b083      	sub	sp, #12
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	460b      	mov	r3, r1
 800271a:	70fb      	strb	r3, [r7, #3]
 800271c:	78fb      	ldrb	r3, [r7, #3]
 800271e:	2b00      	cmp	r3, #0
 8002720:	d006      	beq.n	8002730 <RCC_APB2PeriphClockCmd+0x20>
 8002722:	4b0a      	ldr	r3, [pc, #40]	@ (800274c <RCC_APB2PeriphClockCmd+0x3c>)
 8002724:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002726:	4909      	ldr	r1, [pc, #36]	@ (800274c <RCC_APB2PeriphClockCmd+0x3c>)
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	4313      	orrs	r3, r2
 800272c:	644b      	str	r3, [r1, #68]	@ 0x44
 800272e:	e006      	b.n	800273e <RCC_APB2PeriphClockCmd+0x2e>
 8002730:	4b06      	ldr	r3, [pc, #24]	@ (800274c <RCC_APB2PeriphClockCmd+0x3c>)
 8002732:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	43db      	mvns	r3, r3
 8002738:	4904      	ldr	r1, [pc, #16]	@ (800274c <RCC_APB2PeriphClockCmd+0x3c>)
 800273a:	4013      	ands	r3, r2
 800273c:	644b      	str	r3, [r1, #68]	@ 0x44
 800273e:	bf00      	nop
 8002740:	370c      	adds	r7, #12
 8002742:	46bd      	mov	sp, r7
 8002744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002748:	4770      	bx	lr
 800274a:	bf00      	nop
 800274c:	40023800 	.word	0x40023800

08002750 <SYSCFG_EXTILineConfig>:
 8002750:	b480      	push	{r7}
 8002752:	b085      	sub	sp, #20
 8002754:	af00      	add	r7, sp, #0
 8002756:	4603      	mov	r3, r0
 8002758:	460a      	mov	r2, r1
 800275a:	71fb      	strb	r3, [r7, #7]
 800275c:	4613      	mov	r3, r2
 800275e:	71bb      	strb	r3, [r7, #6]
 8002760:	2300      	movs	r3, #0
 8002762:	60fb      	str	r3, [r7, #12]
 8002764:	79bb      	ldrb	r3, [r7, #6]
 8002766:	f003 0303 	and.w	r3, r3, #3
 800276a:	009b      	lsls	r3, r3, #2
 800276c:	220f      	movs	r2, #15
 800276e:	fa02 f303 	lsl.w	r3, r2, r3
 8002772:	60fb      	str	r3, [r7, #12]
 8002774:	4a16      	ldr	r2, [pc, #88]	@ (80027d0 <SYSCFG_EXTILineConfig+0x80>)
 8002776:	79bb      	ldrb	r3, [r7, #6]
 8002778:	089b      	lsrs	r3, r3, #2
 800277a:	b2db      	uxtb	r3, r3
 800277c:	3302      	adds	r3, #2
 800277e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002782:	68fb      	ldr	r3, [r7, #12]
 8002784:	43db      	mvns	r3, r3
 8002786:	4812      	ldr	r0, [pc, #72]	@ (80027d0 <SYSCFG_EXTILineConfig+0x80>)
 8002788:	79b9      	ldrb	r1, [r7, #6]
 800278a:	0889      	lsrs	r1, r1, #2
 800278c:	b2c9      	uxtb	r1, r1
 800278e:	401a      	ands	r2, r3
 8002790:	1c8b      	adds	r3, r1, #2
 8002792:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8002796:	4a0e      	ldr	r2, [pc, #56]	@ (80027d0 <SYSCFG_EXTILineConfig+0x80>)
 8002798:	79bb      	ldrb	r3, [r7, #6]
 800279a:	089b      	lsrs	r3, r3, #2
 800279c:	b2db      	uxtb	r3, r3
 800279e:	3302      	adds	r3, #2
 80027a0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80027a4:	79f9      	ldrb	r1, [r7, #7]
 80027a6:	79bb      	ldrb	r3, [r7, #6]
 80027a8:	f003 0303 	and.w	r3, r3, #3
 80027ac:	009b      	lsls	r3, r3, #2
 80027ae:	fa01 f303 	lsl.w	r3, r1, r3
 80027b2:	4807      	ldr	r0, [pc, #28]	@ (80027d0 <SYSCFG_EXTILineConfig+0x80>)
 80027b4:	79b9      	ldrb	r1, [r7, #6]
 80027b6:	0889      	lsrs	r1, r1, #2
 80027b8:	b2c9      	uxtb	r1, r1
 80027ba:	431a      	orrs	r2, r3
 80027bc:	1c8b      	adds	r3, r1, #2
 80027be:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80027c2:	bf00      	nop
 80027c4:	3714      	adds	r7, #20
 80027c6:	46bd      	mov	sp, r7
 80027c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027cc:	4770      	bx	lr
 80027ce:	bf00      	nop
 80027d0:	40013800 	.word	0x40013800

080027d4 <TIM_TimeBaseInit>:
 80027d4:	b480      	push	{r7}
 80027d6:	b085      	sub	sp, #20
 80027d8:	af00      	add	r7, sp, #0
 80027da:	6078      	str	r0, [r7, #4]
 80027dc:	6039      	str	r1, [r7, #0]
 80027de:	2300      	movs	r3, #0
 80027e0:	81fb      	strh	r3, [r7, #14]
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	881b      	ldrh	r3, [r3, #0]
 80027e6:	81fb      	strh	r3, [r7, #14]
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	4a29      	ldr	r2, [pc, #164]	@ (8002890 <TIM_TimeBaseInit+0xbc>)
 80027ec:	4293      	cmp	r3, r2
 80027ee:	d013      	beq.n	8002818 <TIM_TimeBaseInit+0x44>
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	4a28      	ldr	r2, [pc, #160]	@ (8002894 <TIM_TimeBaseInit+0xc0>)
 80027f4:	4293      	cmp	r3, r2
 80027f6:	d00f      	beq.n	8002818 <TIM_TimeBaseInit+0x44>
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027fe:	d00b      	beq.n	8002818 <TIM_TimeBaseInit+0x44>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	4a25      	ldr	r2, [pc, #148]	@ (8002898 <TIM_TimeBaseInit+0xc4>)
 8002804:	4293      	cmp	r3, r2
 8002806:	d007      	beq.n	8002818 <TIM_TimeBaseInit+0x44>
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	4a24      	ldr	r2, [pc, #144]	@ (800289c <TIM_TimeBaseInit+0xc8>)
 800280c:	4293      	cmp	r3, r2
 800280e:	d003      	beq.n	8002818 <TIM_TimeBaseInit+0x44>
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	4a23      	ldr	r2, [pc, #140]	@ (80028a0 <TIM_TimeBaseInit+0xcc>)
 8002814:	4293      	cmp	r3, r2
 8002816:	d108      	bne.n	800282a <TIM_TimeBaseInit+0x56>
 8002818:	89fb      	ldrh	r3, [r7, #14]
 800281a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800281e:	81fb      	strh	r3, [r7, #14]
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	885a      	ldrh	r2, [r3, #2]
 8002824:	89fb      	ldrh	r3, [r7, #14]
 8002826:	4313      	orrs	r3, r2
 8002828:	81fb      	strh	r3, [r7, #14]
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	4a1d      	ldr	r2, [pc, #116]	@ (80028a4 <TIM_TimeBaseInit+0xd0>)
 800282e:	4293      	cmp	r3, r2
 8002830:	d00c      	beq.n	800284c <TIM_TimeBaseInit+0x78>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	4a1c      	ldr	r2, [pc, #112]	@ (80028a8 <TIM_TimeBaseInit+0xd4>)
 8002836:	4293      	cmp	r3, r2
 8002838:	d008      	beq.n	800284c <TIM_TimeBaseInit+0x78>
 800283a:	89fb      	ldrh	r3, [r7, #14]
 800283c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002840:	81fb      	strh	r3, [r7, #14]
 8002842:	683b      	ldr	r3, [r7, #0]
 8002844:	891a      	ldrh	r2, [r3, #8]
 8002846:	89fb      	ldrh	r3, [r7, #14]
 8002848:	4313      	orrs	r3, r2
 800284a:	81fb      	strh	r3, [r7, #14]
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	89fa      	ldrh	r2, [r7, #14]
 8002850:	801a      	strh	r2, [r3, #0]
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	685a      	ldr	r2, [r3, #4]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	62da      	str	r2, [r3, #44]	@ 0x2c
 800285a:	683b      	ldr	r3, [r7, #0]
 800285c:	881a      	ldrh	r2, [r3, #0]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	4a0a      	ldr	r2, [pc, #40]	@ (8002890 <TIM_TimeBaseInit+0xbc>)
 8002866:	4293      	cmp	r3, r2
 8002868:	d003      	beq.n	8002872 <TIM_TimeBaseInit+0x9e>
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	4a09      	ldr	r2, [pc, #36]	@ (8002894 <TIM_TimeBaseInit+0xc0>)
 800286e:	4293      	cmp	r3, r2
 8002870:	d104      	bne.n	800287c <TIM_TimeBaseInit+0xa8>
 8002872:	683b      	ldr	r3, [r7, #0]
 8002874:	7a9b      	ldrb	r3, [r3, #10]
 8002876:	b29a      	uxth	r2, r3
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	861a      	strh	r2, [r3, #48]	@ 0x30
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	2201      	movs	r2, #1
 8002880:	829a      	strh	r2, [r3, #20]
 8002882:	bf00      	nop
 8002884:	3714      	adds	r7, #20
 8002886:	46bd      	mov	sp, r7
 8002888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288c:	4770      	bx	lr
 800288e:	bf00      	nop
 8002890:	40010000 	.word	0x40010000
 8002894:	40010400 	.word	0x40010400
 8002898:	40000400 	.word	0x40000400
 800289c:	40000800 	.word	0x40000800
 80028a0:	40000c00 	.word	0x40000c00
 80028a4:	40001000 	.word	0x40001000
 80028a8:	40001400 	.word	0x40001400

080028ac <TIM_SetCounter>:
 80028ac:	b480      	push	{r7}
 80028ae:	b083      	sub	sp, #12
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	6078      	str	r0, [r7, #4]
 80028b4:	6039      	str	r1, [r7, #0]
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	683a      	ldr	r2, [r7, #0]
 80028ba:	625a      	str	r2, [r3, #36]	@ 0x24
 80028bc:	bf00      	nop
 80028be:	370c      	adds	r7, #12
 80028c0:	46bd      	mov	sp, r7
 80028c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c6:	4770      	bx	lr

080028c8 <TIM_Cmd>:
 80028c8:	b480      	push	{r7}
 80028ca:	b083      	sub	sp, #12
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
 80028d0:	460b      	mov	r3, r1
 80028d2:	70fb      	strb	r3, [r7, #3]
 80028d4:	78fb      	ldrb	r3, [r7, #3]
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	d008      	beq.n	80028ec <TIM_Cmd+0x24>
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	881b      	ldrh	r3, [r3, #0]
 80028de:	b29b      	uxth	r3, r3
 80028e0:	f043 0301 	orr.w	r3, r3, #1
 80028e4:	b29a      	uxth	r2, r3
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	801a      	strh	r2, [r3, #0]
 80028ea:	e007      	b.n	80028fc <TIM_Cmd+0x34>
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	881b      	ldrh	r3, [r3, #0]
 80028f0:	b29b      	uxth	r3, r3
 80028f2:	f023 0301 	bic.w	r3, r3, #1
 80028f6:	b29a      	uxth	r2, r3
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	801a      	strh	r2, [r3, #0]
 80028fc:	bf00      	nop
 80028fe:	370c      	adds	r7, #12
 8002900:	46bd      	mov	sp, r7
 8002902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002906:	4770      	bx	lr

08002908 <TIM_ITConfig>:
 8002908:	b480      	push	{r7}
 800290a:	b083      	sub	sp, #12
 800290c:	af00      	add	r7, sp, #0
 800290e:	6078      	str	r0, [r7, #4]
 8002910:	460b      	mov	r3, r1
 8002912:	807b      	strh	r3, [r7, #2]
 8002914:	4613      	mov	r3, r2
 8002916:	707b      	strb	r3, [r7, #1]
 8002918:	787b      	ldrb	r3, [r7, #1]
 800291a:	2b00      	cmp	r3, #0
 800291c:	d008      	beq.n	8002930 <TIM_ITConfig+0x28>
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	899b      	ldrh	r3, [r3, #12]
 8002922:	b29a      	uxth	r2, r3
 8002924:	887b      	ldrh	r3, [r7, #2]
 8002926:	4313      	orrs	r3, r2
 8002928:	b29a      	uxth	r2, r3
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	819a      	strh	r2, [r3, #12]
 800292e:	e009      	b.n	8002944 <TIM_ITConfig+0x3c>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	899b      	ldrh	r3, [r3, #12]
 8002934:	b29a      	uxth	r2, r3
 8002936:	887b      	ldrh	r3, [r7, #2]
 8002938:	43db      	mvns	r3, r3
 800293a:	b29b      	uxth	r3, r3
 800293c:	4013      	ands	r3, r2
 800293e:	b29a      	uxth	r2, r3
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	819a      	strh	r2, [r3, #12]
 8002944:	bf00      	nop
 8002946:	370c      	adds	r7, #12
 8002948:	46bd      	mov	sp, r7
 800294a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800294e:	4770      	bx	lr

08002950 <TIM_ClearFlag>:
 8002950:	b480      	push	{r7}
 8002952:	b083      	sub	sp, #12
 8002954:	af00      	add	r7, sp, #0
 8002956:	6078      	str	r0, [r7, #4]
 8002958:	460b      	mov	r3, r1
 800295a:	807b      	strh	r3, [r7, #2]
 800295c:	887b      	ldrh	r3, [r7, #2]
 800295e:	43db      	mvns	r3, r3
 8002960:	b29a      	uxth	r2, r3
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	821a      	strh	r2, [r3, #16]
 8002966:	bf00      	nop
 8002968:	370c      	adds	r7, #12
 800296a:	46bd      	mov	sp, r7
 800296c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002970:	4770      	bx	lr
	...

08002974 <USART_Init>:
 8002974:	b580      	push	{r7, lr}
 8002976:	b08a      	sub	sp, #40	@ 0x28
 8002978:	af00      	add	r7, sp, #0
 800297a:	6078      	str	r0, [r7, #4]
 800297c:	6039      	str	r1, [r7, #0]
 800297e:	2300      	movs	r3, #0
 8002980:	627b      	str	r3, [r7, #36]	@ 0x24
 8002982:	2300      	movs	r3, #0
 8002984:	623b      	str	r3, [r7, #32]
 8002986:	2300      	movs	r3, #0
 8002988:	61fb      	str	r3, [r7, #28]
 800298a:	2300      	movs	r3, #0
 800298c:	61bb      	str	r3, [r7, #24]
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	8a1b      	ldrh	r3, [r3, #16]
 8002992:	b29b      	uxth	r3, r3
 8002994:	627b      	str	r3, [r7, #36]	@ 0x24
 8002996:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002998:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800299c:	627b      	str	r3, [r7, #36]	@ 0x24
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	88db      	ldrh	r3, [r3, #6]
 80029a2:	461a      	mov	r2, r3
 80029a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029a6:	4313      	orrs	r3, r2
 80029a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80029aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029ac:	b29a      	uxth	r2, r3
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	821a      	strh	r2, [r3, #16]
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	899b      	ldrh	r3, [r3, #12]
 80029b6:	b29b      	uxth	r3, r3
 80029b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80029ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029bc:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 80029c0:	f023 030c 	bic.w	r3, r3, #12
 80029c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80029c6:	683b      	ldr	r3, [r7, #0]
 80029c8:	889a      	ldrh	r2, [r3, #4]
 80029ca:	683b      	ldr	r3, [r7, #0]
 80029cc:	891b      	ldrh	r3, [r3, #8]
 80029ce:	4313      	orrs	r3, r2
 80029d0:	b29a      	uxth	r2, r3
 80029d2:	683b      	ldr	r3, [r7, #0]
 80029d4:	895b      	ldrh	r3, [r3, #10]
 80029d6:	4313      	orrs	r3, r2
 80029d8:	b29b      	uxth	r3, r3
 80029da:	461a      	mov	r2, r3
 80029dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029de:	4313      	orrs	r3, r2
 80029e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80029e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029e4:	b29a      	uxth	r2, r3
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	819a      	strh	r2, [r3, #12]
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	8a9b      	ldrh	r3, [r3, #20]
 80029ee:	b29b      	uxth	r3, r3
 80029f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80029f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80029f4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80029f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80029fa:	683b      	ldr	r3, [r7, #0]
 80029fc:	899b      	ldrh	r3, [r3, #12]
 80029fe:	461a      	mov	r2, r3
 8002a00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002a02:	4313      	orrs	r3, r2
 8002a04:	627b      	str	r3, [r7, #36]	@ 0x24
 8002a06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002a08:	b29a      	uxth	r2, r3
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	829a      	strh	r2, [r3, #20]
 8002a0e:	f107 0308 	add.w	r3, r7, #8
 8002a12:	4618      	mov	r0, r3
 8002a14:	f7ff fd94 	bl	8002540 <RCC_GetClocksFreq>
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	4a30      	ldr	r2, [pc, #192]	@ (8002adc <USART_Init+0x168>)
 8002a1c:	4293      	cmp	r3, r2
 8002a1e:	d003      	beq.n	8002a28 <USART_Init+0xb4>
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	4a2f      	ldr	r2, [pc, #188]	@ (8002ae0 <USART_Init+0x16c>)
 8002a24:	4293      	cmp	r3, r2
 8002a26:	d102      	bne.n	8002a2e <USART_Init+0xba>
 8002a28:	697b      	ldr	r3, [r7, #20]
 8002a2a:	623b      	str	r3, [r7, #32]
 8002a2c:	e001      	b.n	8002a32 <USART_Init+0xbe>
 8002a2e:	693b      	ldr	r3, [r7, #16]
 8002a30:	623b      	str	r3, [r7, #32]
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	899b      	ldrh	r3, [r3, #12]
 8002a36:	b29b      	uxth	r3, r3
 8002a38:	b21b      	sxth	r3, r3
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	da0c      	bge.n	8002a58 <USART_Init+0xe4>
 8002a3e:	6a3a      	ldr	r2, [r7, #32]
 8002a40:	4613      	mov	r3, r2
 8002a42:	009b      	lsls	r3, r3, #2
 8002a44:	4413      	add	r3, r2
 8002a46:	009a      	lsls	r2, r3, #2
 8002a48:	441a      	add	r2, r3
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	005b      	lsls	r3, r3, #1
 8002a50:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a54:	61fb      	str	r3, [r7, #28]
 8002a56:	e00b      	b.n	8002a70 <USART_Init+0xfc>
 8002a58:	6a3a      	ldr	r2, [r7, #32]
 8002a5a:	4613      	mov	r3, r2
 8002a5c:	009b      	lsls	r3, r3, #2
 8002a5e:	4413      	add	r3, r2
 8002a60:	009a      	lsls	r2, r3, #2
 8002a62:	441a      	add	r2, r3
 8002a64:	683b      	ldr	r3, [r7, #0]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	009b      	lsls	r3, r3, #2
 8002a6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a6e:	61fb      	str	r3, [r7, #28]
 8002a70:	69fb      	ldr	r3, [r7, #28]
 8002a72:	4a1c      	ldr	r2, [pc, #112]	@ (8002ae4 <USART_Init+0x170>)
 8002a74:	fba2 2303 	umull	r2, r3, r2, r3
 8002a78:	095b      	lsrs	r3, r3, #5
 8002a7a:	011b      	lsls	r3, r3, #4
 8002a7c:	627b      	str	r3, [r7, #36]	@ 0x24
 8002a7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002a80:	091b      	lsrs	r3, r3, #4
 8002a82:	2264      	movs	r2, #100	@ 0x64
 8002a84:	fb02 f303 	mul.w	r3, r2, r3
 8002a88:	69fa      	ldr	r2, [r7, #28]
 8002a8a:	1ad3      	subs	r3, r2, r3
 8002a8c:	61bb      	str	r3, [r7, #24]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	899b      	ldrh	r3, [r3, #12]
 8002a92:	b29b      	uxth	r3, r3
 8002a94:	b21b      	sxth	r3, r3
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	da0c      	bge.n	8002ab4 <USART_Init+0x140>
 8002a9a:	69bb      	ldr	r3, [r7, #24]
 8002a9c:	00db      	lsls	r3, r3, #3
 8002a9e:	3332      	adds	r3, #50	@ 0x32
 8002aa0:	4a10      	ldr	r2, [pc, #64]	@ (8002ae4 <USART_Init+0x170>)
 8002aa2:	fba2 2303 	umull	r2, r3, r2, r3
 8002aa6:	095b      	lsrs	r3, r3, #5
 8002aa8:	f003 0307 	and.w	r3, r3, #7
 8002aac:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002aae:	4313      	orrs	r3, r2
 8002ab0:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ab2:	e00b      	b.n	8002acc <USART_Init+0x158>
 8002ab4:	69bb      	ldr	r3, [r7, #24]
 8002ab6:	011b      	lsls	r3, r3, #4
 8002ab8:	3332      	adds	r3, #50	@ 0x32
 8002aba:	4a0a      	ldr	r2, [pc, #40]	@ (8002ae4 <USART_Init+0x170>)
 8002abc:	fba2 2303 	umull	r2, r3, r2, r3
 8002ac0:	095b      	lsrs	r3, r3, #5
 8002ac2:	f003 030f 	and.w	r3, r3, #15
 8002ac6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002ac8:	4313      	orrs	r3, r2
 8002aca:	627b      	str	r3, [r7, #36]	@ 0x24
 8002acc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ace:	b29a      	uxth	r2, r3
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	811a      	strh	r2, [r3, #8]
 8002ad4:	bf00      	nop
 8002ad6:	3728      	adds	r7, #40	@ 0x28
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bd80      	pop	{r7, pc}
 8002adc:	40011000 	.word	0x40011000
 8002ae0:	40011400 	.word	0x40011400
 8002ae4:	51eb851f 	.word	0x51eb851f

08002ae8 <USART_Cmd>:
 8002ae8:	b480      	push	{r7}
 8002aea:	b083      	sub	sp, #12
 8002aec:	af00      	add	r7, sp, #0
 8002aee:	6078      	str	r0, [r7, #4]
 8002af0:	460b      	mov	r3, r1
 8002af2:	70fb      	strb	r3, [r7, #3]
 8002af4:	78fb      	ldrb	r3, [r7, #3]
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d008      	beq.n	8002b0c <USART_Cmd+0x24>
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	899b      	ldrh	r3, [r3, #12]
 8002afe:	b29b      	uxth	r3, r3
 8002b00:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002b04:	b29a      	uxth	r2, r3
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	819a      	strh	r2, [r3, #12]
 8002b0a:	e007      	b.n	8002b1c <USART_Cmd+0x34>
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	899b      	ldrh	r3, [r3, #12]
 8002b10:	b29b      	uxth	r3, r3
 8002b12:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8002b16:	b29a      	uxth	r2, r3
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	819a      	strh	r2, [r3, #12]
 8002b1c:	bf00      	nop
 8002b1e:	370c      	adds	r7, #12
 8002b20:	46bd      	mov	sp, r7
 8002b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b26:	4770      	bx	lr

08002b28 <USART_SendData>:
 8002b28:	b480      	push	{r7}
 8002b2a:	b083      	sub	sp, #12
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	6078      	str	r0, [r7, #4]
 8002b30:	460b      	mov	r3, r1
 8002b32:	807b      	strh	r3, [r7, #2]
 8002b34:	887b      	ldrh	r3, [r7, #2]
 8002b36:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002b3a:	b29a      	uxth	r2, r3
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	809a      	strh	r2, [r3, #4]
 8002b40:	bf00      	nop
 8002b42:	370c      	adds	r7, #12
 8002b44:	46bd      	mov	sp, r7
 8002b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b4a:	4770      	bx	lr

08002b4c <USART_ReceiveData>:
 8002b4c:	b480      	push	{r7}
 8002b4e:	b083      	sub	sp, #12
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	6078      	str	r0, [r7, #4]
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	889b      	ldrh	r3, [r3, #4]
 8002b58:	b29b      	uxth	r3, r3
 8002b5a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002b5e:	b29b      	uxth	r3, r3
 8002b60:	4618      	mov	r0, r3
 8002b62:	370c      	adds	r7, #12
 8002b64:	46bd      	mov	sp, r7
 8002b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b6a:	4770      	bx	lr

08002b6c <USART_ITConfig>:
 8002b6c:	b480      	push	{r7}
 8002b6e:	b087      	sub	sp, #28
 8002b70:	af00      	add	r7, sp, #0
 8002b72:	6078      	str	r0, [r7, #4]
 8002b74:	460b      	mov	r3, r1
 8002b76:	807b      	strh	r3, [r7, #2]
 8002b78:	4613      	mov	r3, r2
 8002b7a:	707b      	strb	r3, [r7, #1]
 8002b7c:	2300      	movs	r3, #0
 8002b7e:	613b      	str	r3, [r7, #16]
 8002b80:	2300      	movs	r3, #0
 8002b82:	60fb      	str	r3, [r7, #12]
 8002b84:	2300      	movs	r3, #0
 8002b86:	60bb      	str	r3, [r7, #8]
 8002b88:	2300      	movs	r3, #0
 8002b8a:	617b      	str	r3, [r7, #20]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	617b      	str	r3, [r7, #20]
 8002b90:	887b      	ldrh	r3, [r7, #2]
 8002b92:	b2db      	uxtb	r3, r3
 8002b94:	095b      	lsrs	r3, r3, #5
 8002b96:	b2db      	uxtb	r3, r3
 8002b98:	613b      	str	r3, [r7, #16]
 8002b9a:	887b      	ldrh	r3, [r7, #2]
 8002b9c:	f003 031f 	and.w	r3, r3, #31
 8002ba0:	60fb      	str	r3, [r7, #12]
 8002ba2:	2201      	movs	r2, #1
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	fa02 f303 	lsl.w	r3, r2, r3
 8002baa:	60bb      	str	r3, [r7, #8]
 8002bac:	693b      	ldr	r3, [r7, #16]
 8002bae:	2b01      	cmp	r3, #1
 8002bb0:	d103      	bne.n	8002bba <USART_ITConfig+0x4e>
 8002bb2:	697b      	ldr	r3, [r7, #20]
 8002bb4:	330c      	adds	r3, #12
 8002bb6:	617b      	str	r3, [r7, #20]
 8002bb8:	e009      	b.n	8002bce <USART_ITConfig+0x62>
 8002bba:	693b      	ldr	r3, [r7, #16]
 8002bbc:	2b02      	cmp	r3, #2
 8002bbe:	d103      	bne.n	8002bc8 <USART_ITConfig+0x5c>
 8002bc0:	697b      	ldr	r3, [r7, #20]
 8002bc2:	3310      	adds	r3, #16
 8002bc4:	617b      	str	r3, [r7, #20]
 8002bc6:	e002      	b.n	8002bce <USART_ITConfig+0x62>
 8002bc8:	697b      	ldr	r3, [r7, #20]
 8002bca:	3314      	adds	r3, #20
 8002bcc:	617b      	str	r3, [r7, #20]
 8002bce:	787b      	ldrb	r3, [r7, #1]
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d006      	beq.n	8002be2 <USART_ITConfig+0x76>
 8002bd4:	697b      	ldr	r3, [r7, #20]
 8002bd6:	6819      	ldr	r1, [r3, #0]
 8002bd8:	697b      	ldr	r3, [r7, #20]
 8002bda:	68ba      	ldr	r2, [r7, #8]
 8002bdc:	430a      	orrs	r2, r1
 8002bde:	601a      	str	r2, [r3, #0]
 8002be0:	e006      	b.n	8002bf0 <USART_ITConfig+0x84>
 8002be2:	697b      	ldr	r3, [r7, #20]
 8002be4:	6819      	ldr	r1, [r3, #0]
 8002be6:	68bb      	ldr	r3, [r7, #8]
 8002be8:	43da      	mvns	r2, r3
 8002bea:	697b      	ldr	r3, [r7, #20]
 8002bec:	400a      	ands	r2, r1
 8002bee:	601a      	str	r2, [r3, #0]
 8002bf0:	bf00      	nop
 8002bf2:	371c      	adds	r7, #28
 8002bf4:	46bd      	mov	sp, r7
 8002bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bfa:	4770      	bx	lr

08002bfc <USART_GetFlagStatus>:
 8002bfc:	b480      	push	{r7}
 8002bfe:	b085      	sub	sp, #20
 8002c00:	af00      	add	r7, sp, #0
 8002c02:	6078      	str	r0, [r7, #4]
 8002c04:	460b      	mov	r3, r1
 8002c06:	807b      	strh	r3, [r7, #2]
 8002c08:	2300      	movs	r3, #0
 8002c0a:	73fb      	strb	r3, [r7, #15]
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	881b      	ldrh	r3, [r3, #0]
 8002c10:	b29a      	uxth	r2, r3
 8002c12:	887b      	ldrh	r3, [r7, #2]
 8002c14:	4013      	ands	r3, r2
 8002c16:	b29b      	uxth	r3, r3
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d002      	beq.n	8002c22 <USART_GetFlagStatus+0x26>
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	73fb      	strb	r3, [r7, #15]
 8002c20:	e001      	b.n	8002c26 <USART_GetFlagStatus+0x2a>
 8002c22:	2300      	movs	r3, #0
 8002c24:	73fb      	strb	r3, [r7, #15]
 8002c26:	7bfb      	ldrb	r3, [r7, #15]
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3714      	adds	r7, #20
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c32:	4770      	bx	lr

08002c34 <USART_GetITStatus>:
 8002c34:	b480      	push	{r7}
 8002c36:	b087      	sub	sp, #28
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	460b      	mov	r3, r1
 8002c3e:	807b      	strh	r3, [r7, #2]
 8002c40:	2300      	movs	r3, #0
 8002c42:	60fb      	str	r3, [r7, #12]
 8002c44:	2300      	movs	r3, #0
 8002c46:	617b      	str	r3, [r7, #20]
 8002c48:	2300      	movs	r3, #0
 8002c4a:	60bb      	str	r3, [r7, #8]
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	74fb      	strb	r3, [r7, #19]
 8002c50:	887b      	ldrh	r3, [r7, #2]
 8002c52:	b2db      	uxtb	r3, r3
 8002c54:	095b      	lsrs	r3, r3, #5
 8002c56:	b2db      	uxtb	r3, r3
 8002c58:	60bb      	str	r3, [r7, #8]
 8002c5a:	887b      	ldrh	r3, [r7, #2]
 8002c5c:	f003 031f 	and.w	r3, r3, #31
 8002c60:	617b      	str	r3, [r7, #20]
 8002c62:	2201      	movs	r2, #1
 8002c64:	697b      	ldr	r3, [r7, #20]
 8002c66:	fa02 f303 	lsl.w	r3, r2, r3
 8002c6a:	617b      	str	r3, [r7, #20]
 8002c6c:	68bb      	ldr	r3, [r7, #8]
 8002c6e:	2b01      	cmp	r3, #1
 8002c70:	d107      	bne.n	8002c82 <USART_GetITStatus+0x4e>
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	899b      	ldrh	r3, [r3, #12]
 8002c76:	b29b      	uxth	r3, r3
 8002c78:	461a      	mov	r2, r3
 8002c7a:	697b      	ldr	r3, [r7, #20]
 8002c7c:	4013      	ands	r3, r2
 8002c7e:	617b      	str	r3, [r7, #20]
 8002c80:	e011      	b.n	8002ca6 <USART_GetITStatus+0x72>
 8002c82:	68bb      	ldr	r3, [r7, #8]
 8002c84:	2b02      	cmp	r3, #2
 8002c86:	d107      	bne.n	8002c98 <USART_GetITStatus+0x64>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	8a1b      	ldrh	r3, [r3, #16]
 8002c8c:	b29b      	uxth	r3, r3
 8002c8e:	461a      	mov	r2, r3
 8002c90:	697b      	ldr	r3, [r7, #20]
 8002c92:	4013      	ands	r3, r2
 8002c94:	617b      	str	r3, [r7, #20]
 8002c96:	e006      	b.n	8002ca6 <USART_GetITStatus+0x72>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	8a9b      	ldrh	r3, [r3, #20]
 8002c9c:	b29b      	uxth	r3, r3
 8002c9e:	461a      	mov	r2, r3
 8002ca0:	697b      	ldr	r3, [r7, #20]
 8002ca2:	4013      	ands	r3, r2
 8002ca4:	617b      	str	r3, [r7, #20]
 8002ca6:	887b      	ldrh	r3, [r7, #2]
 8002ca8:	0a1b      	lsrs	r3, r3, #8
 8002caa:	b29b      	uxth	r3, r3
 8002cac:	60fb      	str	r3, [r7, #12]
 8002cae:	2201      	movs	r2, #1
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb6:	60fb      	str	r3, [r7, #12]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	881b      	ldrh	r3, [r3, #0]
 8002cbc:	b29b      	uxth	r3, r3
 8002cbe:	461a      	mov	r2, r3
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	4013      	ands	r3, r2
 8002cc4:	60fb      	str	r3, [r7, #12]
 8002cc6:	697b      	ldr	r3, [r7, #20]
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d005      	beq.n	8002cd8 <USART_GetITStatus+0xa4>
 8002ccc:	68fb      	ldr	r3, [r7, #12]
 8002cce:	2b00      	cmp	r3, #0
 8002cd0:	d002      	beq.n	8002cd8 <USART_GetITStatus+0xa4>
 8002cd2:	2301      	movs	r3, #1
 8002cd4:	74fb      	strb	r3, [r7, #19]
 8002cd6:	e001      	b.n	8002cdc <USART_GetITStatus+0xa8>
 8002cd8:	2300      	movs	r3, #0
 8002cda:	74fb      	strb	r3, [r7, #19]
 8002cdc:	7cfb      	ldrb	r3, [r7, #19]
 8002cde:	4618      	mov	r0, r3
 8002ce0:	371c      	adds	r7, #28
 8002ce2:	46bd      	mov	sp, r7
 8002ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce8:	4770      	bx	lr

08002cea <USART_ClearITPendingBit>:
 8002cea:	b480      	push	{r7}
 8002cec:	b085      	sub	sp, #20
 8002cee:	af00      	add	r7, sp, #0
 8002cf0:	6078      	str	r0, [r7, #4]
 8002cf2:	460b      	mov	r3, r1
 8002cf4:	807b      	strh	r3, [r7, #2]
 8002cf6:	2300      	movs	r3, #0
 8002cf8:	81fb      	strh	r3, [r7, #14]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	81bb      	strh	r3, [r7, #12]
 8002cfe:	887b      	ldrh	r3, [r7, #2]
 8002d00:	0a1b      	lsrs	r3, r3, #8
 8002d02:	81fb      	strh	r3, [r7, #14]
 8002d04:	89fb      	ldrh	r3, [r7, #14]
 8002d06:	2201      	movs	r2, #1
 8002d08:	fa02 f303 	lsl.w	r3, r2, r3
 8002d0c:	81bb      	strh	r3, [r7, #12]
 8002d0e:	89bb      	ldrh	r3, [r7, #12]
 8002d10:	43db      	mvns	r3, r3
 8002d12:	b29a      	uxth	r2, r3
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	801a      	strh	r2, [r3, #0]
 8002d18:	bf00      	nop
 8002d1a:	3714      	adds	r7, #20
 8002d1c:	46bd      	mov	sp, r7
 8002d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d22:	4770      	bx	lr

08002d24 <Button_GetLogicInputPin>:
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b082      	sub	sp, #8
 8002d28:	af00      	add	r7, sp, #0
 8002d2a:	4603      	mov	r3, r0
 8002d2c:	71fb      	strb	r3, [r7, #7]
 8002d2e:	79fb      	ldrb	r3, [r7, #7]
 8002d30:	2b05      	cmp	r3, #5
 8002d32:	d901      	bls.n	8002d38 <Button_GetLogicInputPin+0x14>
 8002d34:	23fe      	movs	r3, #254	@ 0xfe
 8002d36:	e00c      	b.n	8002d52 <Button_GetLogicInputPin+0x2e>
 8002d38:	79fb      	ldrb	r3, [r7, #7]
 8002d3a:	4a08      	ldr	r2, [pc, #32]	@ (8002d5c <Button_GetLogicInputPin+0x38>)
 8002d3c:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002d40:	79fb      	ldrb	r3, [r7, #7]
 8002d42:	4a06      	ldr	r2, [pc, #24]	@ (8002d5c <Button_GetLogicInputPin+0x38>)
 8002d44:	00db      	lsls	r3, r3, #3
 8002d46:	4413      	add	r3, r2
 8002d48:	889b      	ldrh	r3, [r3, #4]
 8002d4a:	4619      	mov	r1, r3
 8002d4c:	f7ff fb7c 	bl	8002448 <GPIO_ReadInputDataBit>
 8002d50:	4603      	mov	r3, r0
 8002d52:	4618      	mov	r0, r3
 8002d54:	3708      	adds	r7, #8
 8002d56:	46bd      	mov	sp, r7
 8002d58:	bd80      	pop	{r7, pc}
 8002d5a:	bf00      	nop
 8002d5c:	20000048 	.word	0x20000048

08002d60 <NVIC_SetPriority>:
 8002d60:	b480      	push	{r7}
 8002d62:	b083      	sub	sp, #12
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	4603      	mov	r3, r0
 8002d68:	6039      	str	r1, [r7, #0]
 8002d6a:	71fb      	strb	r3, [r7, #7]
 8002d6c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d70:	2b00      	cmp	r3, #0
 8002d72:	da0b      	bge.n	8002d8c <NVIC_SetPriority+0x2c>
 8002d74:	683b      	ldr	r3, [r7, #0]
 8002d76:	b2da      	uxtb	r2, r3
 8002d78:	490c      	ldr	r1, [pc, #48]	@ (8002dac <NVIC_SetPriority+0x4c>)
 8002d7a:	79fb      	ldrb	r3, [r7, #7]
 8002d7c:	f003 030f 	and.w	r3, r3, #15
 8002d80:	3b04      	subs	r3, #4
 8002d82:	0112      	lsls	r2, r2, #4
 8002d84:	b2d2      	uxtb	r2, r2
 8002d86:	440b      	add	r3, r1
 8002d88:	761a      	strb	r2, [r3, #24]
 8002d8a:	e009      	b.n	8002da0 <NVIC_SetPriority+0x40>
 8002d8c:	683b      	ldr	r3, [r7, #0]
 8002d8e:	b2da      	uxtb	r2, r3
 8002d90:	4907      	ldr	r1, [pc, #28]	@ (8002db0 <NVIC_SetPriority+0x50>)
 8002d92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d96:	0112      	lsls	r2, r2, #4
 8002d98:	b2d2      	uxtb	r2, r2
 8002d9a:	440b      	add	r3, r1
 8002d9c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002da0:	bf00      	nop
 8002da2:	370c      	adds	r7, #12
 8002da4:	46bd      	mov	sp, r7
 8002da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002daa:	4770      	bx	lr
 8002dac:	e000ed00 	.word	0xe000ed00
 8002db0:	e000e100 	.word	0xe000e100

08002db4 <SysTick_Config>:
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b082      	sub	sp, #8
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	6078      	str	r0, [r7, #4]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	3b01      	subs	r3, #1
 8002dc0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002dc4:	d301      	bcc.n	8002dca <SysTick_Config+0x16>
 8002dc6:	2301      	movs	r3, #1
 8002dc8:	e00f      	b.n	8002dea <SysTick_Config+0x36>
 8002dca:	4a0a      	ldr	r2, [pc, #40]	@ (8002df4 <SysTick_Config+0x40>)
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	3b01      	subs	r3, #1
 8002dd0:	6053      	str	r3, [r2, #4]
 8002dd2:	210f      	movs	r1, #15
 8002dd4:	f04f 30ff 	mov.w	r0, #4294967295
 8002dd8:	f7ff ffc2 	bl	8002d60 <NVIC_SetPriority>
 8002ddc:	4b05      	ldr	r3, [pc, #20]	@ (8002df4 <SysTick_Config+0x40>)
 8002dde:	2200      	movs	r2, #0
 8002de0:	609a      	str	r2, [r3, #8]
 8002de2:	4b04      	ldr	r3, [pc, #16]	@ (8002df4 <SysTick_Config+0x40>)
 8002de4:	2207      	movs	r2, #7
 8002de6:	601a      	str	r2, [r3, #0]
 8002de8:	2300      	movs	r3, #0
 8002dea:	4618      	mov	r0, r3
 8002dec:	3708      	adds	r7, #8
 8002dee:	46bd      	mov	sp, r7
 8002df0:	bd80      	pop	{r7, pc}
 8002df2:	bf00      	nop
 8002df4:	e000e010 	.word	0xe000e010

08002df8 <TimerInit>:
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	b084      	sub	sp, #16
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	463b      	mov	r3, r7
 8002e00:	4618      	mov	r0, r3
 8002e02:	f7ff fb9d 	bl	8002540 <RCC_GetClocksFreq>
 8002e06:	683b      	ldr	r3, [r7, #0]
 8002e08:	4a0a      	ldr	r2, [pc, #40]	@ (8002e34 <TimerInit+0x3c>)
 8002e0a:	fba2 2303 	umull	r2, r3, r2, r3
 8002e0e:	099b      	lsrs	r3, r3, #6
 8002e10:	4618      	mov	r0, r3
 8002e12:	f7ff ffcf 	bl	8002db4 <SysTick_Config>
 8002e16:	2101      	movs	r1, #1
 8002e18:	f04f 30ff 	mov.w	r0, #4294967295
 8002e1c:	f7ff ffa0 	bl	8002d60 <NVIC_SetPriority>
 8002e20:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8002e24:	2100      	movs	r1, #0
 8002e26:	4804      	ldr	r0, [pc, #16]	@ (8002e38 <TimerInit+0x40>)
 8002e28:	f001 ff66 	bl	8004cf8 <memsetl>
 8002e2c:	bf00      	nop
 8002e2e:	3710      	adds	r7, #16
 8002e30:	46bd      	mov	sp, r7
 8002e32:	bd80      	pop	{r7, pc}
 8002e34:	10624dd3 	.word	0x10624dd3
 8002e38:	20000280 	.word	0x20000280

08002e3c <TimerStart>:
 8002e3c:	b590      	push	{r4, r7, lr}
 8002e3e:	b087      	sub	sp, #28
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	60f8      	str	r0, [r7, #12]
 8002e44:	60b9      	str	r1, [r7, #8]
 8002e46:	603b      	str	r3, [r7, #0]
 8002e48:	4613      	mov	r3, r2
 8002e4a:	71fb      	strb	r3, [r7, #7]
 8002e4c:	2300      	movs	r3, #0
 8002e4e:	75fb      	strb	r3, [r7, #23]
 8002e50:	e04c      	b.n	8002eec <TimerStart+0xb0>
 8002e52:	7dfa      	ldrb	r2, [r7, #23]
 8002e54:	4929      	ldr	r1, [pc, #164]	@ (8002efc <TimerStart+0xc0>)
 8002e56:	4613      	mov	r3, r2
 8002e58:	005b      	lsls	r3, r3, #1
 8002e5a:	4413      	add	r3, r2
 8002e5c:	00db      	lsls	r3, r3, #3
 8002e5e:	440b      	add	r3, r1
 8002e60:	3310      	adds	r3, #16
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	d13e      	bne.n	8002ee6 <TimerStart+0xaa>
 8002e68:	7dfa      	ldrb	r2, [r7, #23]
 8002e6a:	4924      	ldr	r1, [pc, #144]	@ (8002efc <TimerStart+0xc0>)
 8002e6c:	4613      	mov	r3, r2
 8002e6e:	005b      	lsls	r3, r3, #1
 8002e70:	4413      	add	r3, r2
 8002e72:	00db      	lsls	r3, r3, #3
 8002e74:	440b      	add	r3, r1
 8002e76:	68fa      	ldr	r2, [r7, #12]
 8002e78:	601a      	str	r2, [r3, #0]
 8002e7a:	7dfa      	ldrb	r2, [r7, #23]
 8002e7c:	491f      	ldr	r1, [pc, #124]	@ (8002efc <TimerStart+0xc0>)
 8002e7e:	4613      	mov	r3, r2
 8002e80:	005b      	lsls	r3, r3, #1
 8002e82:	4413      	add	r3, r2
 8002e84:	00db      	lsls	r3, r3, #3
 8002e86:	440b      	add	r3, r1
 8002e88:	3310      	adds	r3, #16
 8002e8a:	683a      	ldr	r2, [r7, #0]
 8002e8c:	601a      	str	r2, [r3, #0]
 8002e8e:	7dfa      	ldrb	r2, [r7, #23]
 8002e90:	491a      	ldr	r1, [pc, #104]	@ (8002efc <TimerStart+0xc0>)
 8002e92:	4613      	mov	r3, r2
 8002e94:	005b      	lsls	r3, r3, #1
 8002e96:	4413      	add	r3, r2
 8002e98:	00db      	lsls	r3, r3, #3
 8002e9a:	440b      	add	r3, r1
 8002e9c:	330c      	adds	r3, #12
 8002e9e:	79fa      	ldrb	r2, [r7, #7]
 8002ea0:	701a      	strb	r2, [r3, #0]
 8002ea2:	7dfa      	ldrb	r2, [r7, #23]
 8002ea4:	4915      	ldr	r1, [pc, #84]	@ (8002efc <TimerStart+0xc0>)
 8002ea6:	4613      	mov	r3, r2
 8002ea8:	005b      	lsls	r3, r3, #1
 8002eaa:	4413      	add	r3, r2
 8002eac:	00db      	lsls	r3, r3, #3
 8002eae:	440b      	add	r3, r1
 8002eb0:	3314      	adds	r3, #20
 8002eb2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8002eb4:	601a      	str	r2, [r3, #0]
 8002eb6:	7dfc      	ldrb	r4, [r7, #23]
 8002eb8:	f000 f872 	bl	8002fa0 <GetMilSecTick>
 8002ebc:	4601      	mov	r1, r0
 8002ebe:	4a0f      	ldr	r2, [pc, #60]	@ (8002efc <TimerStart+0xc0>)
 8002ec0:	4623      	mov	r3, r4
 8002ec2:	005b      	lsls	r3, r3, #1
 8002ec4:	4423      	add	r3, r4
 8002ec6:	00db      	lsls	r3, r3, #3
 8002ec8:	4413      	add	r3, r2
 8002eca:	3304      	adds	r3, #4
 8002ecc:	6019      	str	r1, [r3, #0]
 8002ece:	7dfa      	ldrb	r2, [r7, #23]
 8002ed0:	490a      	ldr	r1, [pc, #40]	@ (8002efc <TimerStart+0xc0>)
 8002ed2:	4613      	mov	r3, r2
 8002ed4:	005b      	lsls	r3, r3, #1
 8002ed6:	4413      	add	r3, r2
 8002ed8:	00db      	lsls	r3, r3, #3
 8002eda:	440b      	add	r3, r1
 8002edc:	3308      	adds	r3, #8
 8002ede:	68ba      	ldr	r2, [r7, #8]
 8002ee0:	601a      	str	r2, [r3, #0]
 8002ee2:	7dfb      	ldrb	r3, [r7, #23]
 8002ee4:	e006      	b.n	8002ef4 <TimerStart+0xb8>
 8002ee6:	7dfb      	ldrb	r3, [r7, #23]
 8002ee8:	3301      	adds	r3, #1
 8002eea:	75fb      	strb	r3, [r7, #23]
 8002eec:	7dfb      	ldrb	r3, [r7, #23]
 8002eee:	2b0f      	cmp	r3, #15
 8002ef0:	d9af      	bls.n	8002e52 <TimerStart+0x16>
 8002ef2:	23ff      	movs	r3, #255	@ 0xff
 8002ef4:	4618      	mov	r0, r3
 8002ef6:	371c      	adds	r7, #28
 8002ef8:	46bd      	mov	sp, r7
 8002efa:	bd90      	pop	{r4, r7, pc}
 8002efc:	20000280 	.word	0x20000280

08002f00 <TimerStop>:
 8002f00:	b480      	push	{r7}
 8002f02:	b083      	sub	sp, #12
 8002f04:	af00      	add	r7, sp, #0
 8002f06:	4603      	mov	r3, r0
 8002f08:	71fb      	strb	r3, [r7, #7]
 8002f0a:	79fb      	ldrb	r3, [r7, #7]
 8002f0c:	2b0f      	cmp	r3, #15
 8002f0e:	d80a      	bhi.n	8002f26 <TimerStop+0x26>
 8002f10:	79fa      	ldrb	r2, [r7, #7]
 8002f12:	4922      	ldr	r1, [pc, #136]	@ (8002f9c <TimerStop+0x9c>)
 8002f14:	4613      	mov	r3, r2
 8002f16:	005b      	lsls	r3, r3, #1
 8002f18:	4413      	add	r3, r2
 8002f1a:	00db      	lsls	r3, r3, #3
 8002f1c:	440b      	add	r3, r1
 8002f1e:	3310      	adds	r3, #16
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d101      	bne.n	8002f2a <TimerStop+0x2a>
 8002f26:	2300      	movs	r3, #0
 8002f28:	e031      	b.n	8002f8e <TimerStop+0x8e>
 8002f2a:	79fa      	ldrb	r2, [r7, #7]
 8002f2c:	491b      	ldr	r1, [pc, #108]	@ (8002f9c <TimerStop+0x9c>)
 8002f2e:	4613      	mov	r3, r2
 8002f30:	005b      	lsls	r3, r3, #1
 8002f32:	4413      	add	r3, r2
 8002f34:	00db      	lsls	r3, r3, #3
 8002f36:	440b      	add	r3, r1
 8002f38:	2200      	movs	r2, #0
 8002f3a:	601a      	str	r2, [r3, #0]
 8002f3c:	79fa      	ldrb	r2, [r7, #7]
 8002f3e:	4917      	ldr	r1, [pc, #92]	@ (8002f9c <TimerStop+0x9c>)
 8002f40:	4613      	mov	r3, r2
 8002f42:	005b      	lsls	r3, r3, #1
 8002f44:	4413      	add	r3, r2
 8002f46:	00db      	lsls	r3, r3, #3
 8002f48:	440b      	add	r3, r1
 8002f4a:	3310      	adds	r3, #16
 8002f4c:	2200      	movs	r2, #0
 8002f4e:	601a      	str	r2, [r3, #0]
 8002f50:	79fa      	ldrb	r2, [r7, #7]
 8002f52:	4912      	ldr	r1, [pc, #72]	@ (8002f9c <TimerStop+0x9c>)
 8002f54:	4613      	mov	r3, r2
 8002f56:	005b      	lsls	r3, r3, #1
 8002f58:	4413      	add	r3, r2
 8002f5a:	00db      	lsls	r3, r3, #3
 8002f5c:	440b      	add	r3, r1
 8002f5e:	330c      	adds	r3, #12
 8002f60:	2200      	movs	r2, #0
 8002f62:	701a      	strb	r2, [r3, #0]
 8002f64:	79fa      	ldrb	r2, [r7, #7]
 8002f66:	490d      	ldr	r1, [pc, #52]	@ (8002f9c <TimerStop+0x9c>)
 8002f68:	4613      	mov	r3, r2
 8002f6a:	005b      	lsls	r3, r3, #1
 8002f6c:	4413      	add	r3, r2
 8002f6e:	00db      	lsls	r3, r3, #3
 8002f70:	440b      	add	r3, r1
 8002f72:	3308      	adds	r3, #8
 8002f74:	2200      	movs	r2, #0
 8002f76:	601a      	str	r2, [r3, #0]
 8002f78:	79fa      	ldrb	r2, [r7, #7]
 8002f7a:	4908      	ldr	r1, [pc, #32]	@ (8002f9c <TimerStop+0x9c>)
 8002f7c:	4613      	mov	r3, r2
 8002f7e:	005b      	lsls	r3, r3, #1
 8002f80:	4413      	add	r3, r2
 8002f82:	00db      	lsls	r3, r3, #3
 8002f84:	440b      	add	r3, r1
 8002f86:	3304      	adds	r3, #4
 8002f88:	2200      	movs	r2, #0
 8002f8a:	601a      	str	r2, [r3, #0]
 8002f8c:	2301      	movs	r3, #1
 8002f8e:	4618      	mov	r0, r3
 8002f90:	370c      	adds	r7, #12
 8002f92:	46bd      	mov	sp, r7
 8002f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f98:	4770      	bx	lr
 8002f9a:	bf00      	nop
 8002f9c:	20000280 	.word	0x20000280

08002fa0 <GetMilSecTick>:
 8002fa0:	b480      	push	{r7}
 8002fa2:	af00      	add	r7, sp, #0
 8002fa4:	4b03      	ldr	r3, [pc, #12]	@ (8002fb4 <GetMilSecTick+0x14>)
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	4618      	mov	r0, r3
 8002faa:	46bd      	mov	sp, r7
 8002fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fb0:	4770      	bx	lr
 8002fb2:	bf00      	nop
 8002fb4:	20000400 	.word	0x20000400

08002fb8 <processTimerScheduler>:
 8002fb8:	b580      	push	{r7, lr}
 8002fba:	b084      	sub	sp, #16
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	2300      	movs	r3, #0
 8002fc0:	73fb      	strb	r3, [r7, #15]
 8002fc2:	e068      	b.n	8003096 <processTimerScheduler+0xde>
 8002fc4:	7bfa      	ldrb	r2, [r7, #15]
 8002fc6:	4937      	ldr	r1, [pc, #220]	@ (80030a4 <processTimerScheduler+0xec>)
 8002fc8:	4613      	mov	r3, r2
 8002fca:	005b      	lsls	r3, r3, #1
 8002fcc:	4413      	add	r3, r2
 8002fce:	00db      	lsls	r3, r3, #3
 8002fd0:	440b      	add	r3, r1
 8002fd2:	3310      	adds	r3, #16
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d05a      	beq.n	8003090 <processTimerScheduler+0xd8>
 8002fda:	7bfb      	ldrb	r3, [r7, #15]
 8002fdc:	4618      	mov	r0, r3
 8002fde:	f000 f863 	bl	80030a8 <TimeExpired>
 8002fe2:	4603      	mov	r3, r0
 8002fe4:	2b00      	cmp	r3, #0
 8002fe6:	d053      	beq.n	8003090 <processTimerScheduler+0xd8>
 8002fe8:	7bfa      	ldrb	r2, [r7, #15]
 8002fea:	492e      	ldr	r1, [pc, #184]	@ (80030a4 <processTimerScheduler+0xec>)
 8002fec:	4613      	mov	r3, r2
 8002fee:	005b      	lsls	r3, r3, #1
 8002ff0:	4413      	add	r3, r2
 8002ff2:	00db      	lsls	r3, r3, #3
 8002ff4:	440b      	add	r3, r1
 8002ff6:	3310      	adds	r3, #16
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	60bb      	str	r3, [r7, #8]
 8002ffc:	7bfa      	ldrb	r2, [r7, #15]
 8002ffe:	4929      	ldr	r1, [pc, #164]	@ (80030a4 <processTimerScheduler+0xec>)
 8003000:	4613      	mov	r3, r2
 8003002:	005b      	lsls	r3, r3, #1
 8003004:	4413      	add	r3, r2
 8003006:	00db      	lsls	r3, r3, #3
 8003008:	440b      	add	r3, r1
 800300a:	3314      	adds	r3, #20
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	607b      	str	r3, [r7, #4]
 8003010:	7bfa      	ldrb	r2, [r7, #15]
 8003012:	4924      	ldr	r1, [pc, #144]	@ (80030a4 <processTimerScheduler+0xec>)
 8003014:	4613      	mov	r3, r2
 8003016:	005b      	lsls	r3, r3, #1
 8003018:	4413      	add	r3, r2
 800301a:	00db      	lsls	r3, r3, #3
 800301c:	440b      	add	r3, r1
 800301e:	330c      	adds	r3, #12
 8003020:	781b      	ldrb	r3, [r3, #0]
 8003022:	b2db      	uxtb	r3, r3
 8003024:	2bff      	cmp	r3, #255	@ 0xff
 8003026:	d020      	beq.n	800306a <processTimerScheduler+0xb2>
 8003028:	7bfa      	ldrb	r2, [r7, #15]
 800302a:	491e      	ldr	r1, [pc, #120]	@ (80030a4 <processTimerScheduler+0xec>)
 800302c:	4613      	mov	r3, r2
 800302e:	005b      	lsls	r3, r3, #1
 8003030:	4413      	add	r3, r2
 8003032:	00db      	lsls	r3, r3, #3
 8003034:	440b      	add	r3, r1
 8003036:	330c      	adds	r3, #12
 8003038:	781b      	ldrb	r3, [r3, #0]
 800303a:	b2db      	uxtb	r3, r3
 800303c:	2b00      	cmp	r3, #0
 800303e:	d014      	beq.n	800306a <processTimerScheduler+0xb2>
 8003040:	7bfa      	ldrb	r2, [r7, #15]
 8003042:	4918      	ldr	r1, [pc, #96]	@ (80030a4 <processTimerScheduler+0xec>)
 8003044:	4613      	mov	r3, r2
 8003046:	005b      	lsls	r3, r3, #1
 8003048:	4413      	add	r3, r2
 800304a:	00db      	lsls	r3, r3, #3
 800304c:	440b      	add	r3, r1
 800304e:	330c      	adds	r3, #12
 8003050:	781b      	ldrb	r3, [r3, #0]
 8003052:	b2db      	uxtb	r3, r3
 8003054:	3b01      	subs	r3, #1
 8003056:	b2d8      	uxtb	r0, r3
 8003058:	4912      	ldr	r1, [pc, #72]	@ (80030a4 <processTimerScheduler+0xec>)
 800305a:	4613      	mov	r3, r2
 800305c:	005b      	lsls	r3, r3, #1
 800305e:	4413      	add	r3, r2
 8003060:	00db      	lsls	r3, r3, #3
 8003062:	440b      	add	r3, r1
 8003064:	330c      	adds	r3, #12
 8003066:	4602      	mov	r2, r0
 8003068:	701a      	strb	r2, [r3, #0]
 800306a:	7bfa      	ldrb	r2, [r7, #15]
 800306c:	490d      	ldr	r1, [pc, #52]	@ (80030a4 <processTimerScheduler+0xec>)
 800306e:	4613      	mov	r3, r2
 8003070:	005b      	lsls	r3, r3, #1
 8003072:	4413      	add	r3, r2
 8003074:	00db      	lsls	r3, r3, #3
 8003076:	440b      	add	r3, r1
 8003078:	330c      	adds	r3, #12
 800307a:	781b      	ldrb	r3, [r3, #0]
 800307c:	b2db      	uxtb	r3, r3
 800307e:	2b00      	cmp	r3, #0
 8003080:	d103      	bne.n	800308a <processTimerScheduler+0xd2>
 8003082:	7bfb      	ldrb	r3, [r7, #15]
 8003084:	4618      	mov	r0, r3
 8003086:	f7ff ff3b 	bl	8002f00 <TimerStop>
 800308a:	68bb      	ldr	r3, [r7, #8]
 800308c:	6878      	ldr	r0, [r7, #4]
 800308e:	4798      	blx	r3
 8003090:	7bfb      	ldrb	r3, [r7, #15]
 8003092:	3301      	adds	r3, #1
 8003094:	73fb      	strb	r3, [r7, #15]
 8003096:	7bfb      	ldrb	r3, [r7, #15]
 8003098:	2b0f      	cmp	r3, #15
 800309a:	d993      	bls.n	8002fc4 <processTimerScheduler+0xc>
 800309c:	bf00      	nop
 800309e:	3710      	adds	r7, #16
 80030a0:	46bd      	mov	sp, r7
 80030a2:	bd80      	pop	{r7, pc}
 80030a4:	20000280 	.word	0x20000280

080030a8 <TimeExpired>:
 80030a8:	b580      	push	{r7, lr}
 80030aa:	b084      	sub	sp, #16
 80030ac:	af00      	add	r7, sp, #0
 80030ae:	4603      	mov	r3, r0
 80030b0:	71fb      	strb	r3, [r7, #7]
 80030b2:	2300      	movs	r3, #0
 80030b4:	60fb      	str	r3, [r7, #12]
 80030b6:	b672      	cpsid	i
 80030b8:	f7ff ff72 	bl	8002fa0 <GetMilSecTick>
 80030bc:	60b8      	str	r0, [r7, #8]
 80030be:	79fb      	ldrb	r3, [r7, #7]
 80030c0:	2b0f      	cmp	r3, #15
 80030c2:	d80a      	bhi.n	80030da <TimeExpired+0x32>
 80030c4:	79fa      	ldrb	r2, [r7, #7]
 80030c6:	492a      	ldr	r1, [pc, #168]	@ (8003170 <TimeExpired+0xc8>)
 80030c8:	4613      	mov	r3, r2
 80030ca:	005b      	lsls	r3, r3, #1
 80030cc:	4413      	add	r3, r2
 80030ce:	00db      	lsls	r3, r3, #3
 80030d0:	440b      	add	r3, r1
 80030d2:	3310      	adds	r3, #16
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	d102      	bne.n	80030e0 <TimeExpired+0x38>
 80030da:	b662      	cpsie	i
 80030dc:	2300      	movs	r3, #0
 80030de:	e042      	b.n	8003166 <TimeExpired+0xbe>
 80030e0:	79fa      	ldrb	r2, [r7, #7]
 80030e2:	4923      	ldr	r1, [pc, #140]	@ (8003170 <TimeExpired+0xc8>)
 80030e4:	4613      	mov	r3, r2
 80030e6:	005b      	lsls	r3, r3, #1
 80030e8:	4413      	add	r3, r2
 80030ea:	00db      	lsls	r3, r3, #3
 80030ec:	440b      	add	r3, r1
 80030ee:	3304      	adds	r3, #4
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	68ba      	ldr	r2, [r7, #8]
 80030f4:	429a      	cmp	r2, r3
 80030f6:	d30c      	bcc.n	8003112 <TimeExpired+0x6a>
 80030f8:	79fa      	ldrb	r2, [r7, #7]
 80030fa:	491d      	ldr	r1, [pc, #116]	@ (8003170 <TimeExpired+0xc8>)
 80030fc:	4613      	mov	r3, r2
 80030fe:	005b      	lsls	r3, r3, #1
 8003100:	4413      	add	r3, r2
 8003102:	00db      	lsls	r3, r3, #3
 8003104:	440b      	add	r3, r1
 8003106:	3304      	adds	r3, #4
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	68ba      	ldr	r2, [r7, #8]
 800310c:	1ad3      	subs	r3, r2, r3
 800310e:	60fb      	str	r3, [r7, #12]
 8003110:	e00e      	b.n	8003130 <TimeExpired+0x88>
 8003112:	79fa      	ldrb	r2, [r7, #7]
 8003114:	4916      	ldr	r1, [pc, #88]	@ (8003170 <TimeExpired+0xc8>)
 8003116:	4613      	mov	r3, r2
 8003118:	005b      	lsls	r3, r3, #1
 800311a:	4413      	add	r3, r2
 800311c:	00db      	lsls	r3, r3, #3
 800311e:	440b      	add	r3, r1
 8003120:	3304      	adds	r3, #4
 8003122:	681a      	ldr	r2, [r3, #0]
 8003124:	68bb      	ldr	r3, [r7, #8]
 8003126:	1ad3      	subs	r3, r2, r3
 8003128:	60fb      	str	r3, [r7, #12]
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	43db      	mvns	r3, r3
 800312e:	60fb      	str	r3, [r7, #12]
 8003130:	79fa      	ldrb	r2, [r7, #7]
 8003132:	490f      	ldr	r1, [pc, #60]	@ (8003170 <TimeExpired+0xc8>)
 8003134:	4613      	mov	r3, r2
 8003136:	005b      	lsls	r3, r3, #1
 8003138:	4413      	add	r3, r2
 800313a:	00db      	lsls	r3, r3, #3
 800313c:	440b      	add	r3, r1
 800313e:	3308      	adds	r3, #8
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	68fa      	ldr	r2, [r7, #12]
 8003144:	429a      	cmp	r2, r3
 8003146:	d202      	bcs.n	800314e <TimeExpired+0xa6>
 8003148:	b662      	cpsie	i
 800314a:	2300      	movs	r3, #0
 800314c:	e00b      	b.n	8003166 <TimeExpired+0xbe>
 800314e:	79fa      	ldrb	r2, [r7, #7]
 8003150:	4907      	ldr	r1, [pc, #28]	@ (8003170 <TimeExpired+0xc8>)
 8003152:	4613      	mov	r3, r2
 8003154:	005b      	lsls	r3, r3, #1
 8003156:	4413      	add	r3, r2
 8003158:	00db      	lsls	r3, r3, #3
 800315a:	440b      	add	r3, r1
 800315c:	3304      	adds	r3, #4
 800315e:	68ba      	ldr	r2, [r7, #8]
 8003160:	601a      	str	r2, [r3, #0]
 8003162:	b662      	cpsie	i
 8003164:	2301      	movs	r3, #1
 8003166:	4618      	mov	r0, r3
 8003168:	3710      	adds	r7, #16
 800316a:	46bd      	mov	sp, r7
 800316c:	bd80      	pop	{r7, pc}
 800316e:	bf00      	nop
 8003170:	20000280 	.word	0x20000280

08003174 <SysTick_Handler>:
 8003174:	b480      	push	{r7}
 8003176:	af00      	add	r7, sp, #0
 8003178:	4b04      	ldr	r3, [pc, #16]	@ (800318c <SysTick_Handler+0x18>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	3301      	adds	r3, #1
 800317e:	4a03      	ldr	r2, [pc, #12]	@ (800318c <SysTick_Handler+0x18>)
 8003180:	6013      	str	r3, [r2, #0]
 8003182:	bf00      	nop
 8003184:	46bd      	mov	sp, r7
 8003186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318a:	4770      	bx	lr
 800318c:	20000400 	.word	0x20000400

08003190 <delayMicroseconds>:
 8003190:	b480      	push	{r7}
 8003192:	b083      	sub	sp, #12
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
 8003198:	bf00      	nop
 800319a:	370c      	adds	r7, #12
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr

080031a4 <ucg_gpio_init>:
 80031a4:	b580      	push	{r7, lr}
 80031a6:	b082      	sub	sp, #8
 80031a8:	af00      	add	r7, sp, #0
 80031aa:	2101      	movs	r1, #1
 80031ac:	2007      	movs	r0, #7
 80031ae:	f7ff fa6f 	bl	8002690 <RCC_AHB1PeriphClockCmd>
 80031b2:	2301      	movs	r3, #1
 80031b4:	713b      	strb	r3, [r7, #4]
 80031b6:	2303      	movs	r3, #3
 80031b8:	717b      	strb	r3, [r7, #5]
 80031ba:	2300      	movs	r3, #0
 80031bc:	71bb      	strb	r3, [r7, #6]
 80031be:	2300      	movs	r3, #0
 80031c0:	71fb      	strb	r3, [r7, #7]
 80031c2:	f44f 7368 	mov.w	r3, #928	@ 0x3a0
 80031c6:	603b      	str	r3, [r7, #0]
 80031c8:	463b      	mov	r3, r7
 80031ca:	4619      	mov	r1, r3
 80031cc:	480a      	ldr	r0, [pc, #40]	@ (80031f8 <ucg_gpio_init+0x54>)
 80031ce:	f7ff f8ad 	bl	800232c <GPIO_Init>
 80031d2:	f44f 6388 	mov.w	r3, #1088	@ 0x440
 80031d6:	603b      	str	r3, [r7, #0]
 80031d8:	463b      	mov	r3, r7
 80031da:	4619      	mov	r1, r3
 80031dc:	4807      	ldr	r0, [pc, #28]	@ (80031fc <ucg_gpio_init+0x58>)
 80031de:	f7ff f8a5 	bl	800232c <GPIO_Init>
 80031e2:	2380      	movs	r3, #128	@ 0x80
 80031e4:	603b      	str	r3, [r7, #0]
 80031e6:	463b      	mov	r3, r7
 80031e8:	4619      	mov	r1, r3
 80031ea:	4805      	ldr	r0, [pc, #20]	@ (8003200 <ucg_gpio_init+0x5c>)
 80031ec:	f7ff f89e 	bl	800232c <GPIO_Init>
 80031f0:	bf00      	nop
 80031f2:	3708      	adds	r7, #8
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bd80      	pop	{r7, pc}
 80031f8:	40020000 	.word	0x40020000
 80031fc:	40020400 	.word	0x40020400
 8003200:	40020800 	.word	0x40020800

08003204 <ucg_com_arduino_send_generic_SW_SPI>:
 8003204:	b580      	push	{r7, lr}
 8003206:	b084      	sub	sp, #16
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
 800320c:	460b      	mov	r3, r1
 800320e:	70fb      	strb	r3, [r7, #3]
 8003210:	2308      	movs	r3, #8
 8003212:	73fb      	strb	r3, [r7, #15]
 8003214:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003218:	2b00      	cmp	r3, #0
 800321a:	da05      	bge.n	8003228 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 800321c:	2201      	movs	r2, #1
 800321e:	2180      	movs	r1, #128	@ 0x80
 8003220:	4814      	ldr	r0, [pc, #80]	@ (8003274 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8003222:	f7ff f92b 	bl	800247c <GPIO_WriteBit>
 8003226:	e004      	b.n	8003232 <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8003228:	2200      	movs	r2, #0
 800322a:	2180      	movs	r1, #128	@ 0x80
 800322c:	4811      	ldr	r0, [pc, #68]	@ (8003274 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800322e:	f7ff f925 	bl	800247c <GPIO_WriteBit>
 8003232:	2001      	movs	r0, #1
 8003234:	f7ff ffac 	bl	8003190 <delayMicroseconds>
 8003238:	2201      	movs	r2, #1
 800323a:	2120      	movs	r1, #32
 800323c:	480d      	ldr	r0, [pc, #52]	@ (8003274 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800323e:	f7ff f91d 	bl	800247c <GPIO_WriteBit>
 8003242:	2001      	movs	r0, #1
 8003244:	f7ff ffa4 	bl	8003190 <delayMicroseconds>
 8003248:	7bfb      	ldrb	r3, [r7, #15]
 800324a:	3b01      	subs	r3, #1
 800324c:	73fb      	strb	r3, [r7, #15]
 800324e:	2200      	movs	r2, #0
 8003250:	2120      	movs	r1, #32
 8003252:	4808      	ldr	r0, [pc, #32]	@ (8003274 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8003254:	f7ff f912 	bl	800247c <GPIO_WriteBit>
 8003258:	2001      	movs	r0, #1
 800325a:	f7ff ff99 	bl	8003190 <delayMicroseconds>
 800325e:	78fb      	ldrb	r3, [r7, #3]
 8003260:	005b      	lsls	r3, r3, #1
 8003262:	70fb      	strb	r3, [r7, #3]
 8003264:	7bfb      	ldrb	r3, [r7, #15]
 8003266:	2b00      	cmp	r3, #0
 8003268:	d1d4      	bne.n	8003214 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 800326a:	bf00      	nop
 800326c:	3710      	adds	r7, #16
 800326e:	46bd      	mov	sp, r7
 8003270:	bd80      	pop	{r7, pc}
 8003272:	bf00      	nop
 8003274:	40020000 	.word	0x40020000

08003278 <ucg_com_arduino_generic_SW_SPI>:
 8003278:	b580      	push	{r7, lr}
 800327a:	b084      	sub	sp, #16
 800327c:	af00      	add	r7, sp, #0
 800327e:	60f8      	str	r0, [r7, #12]
 8003280:	607b      	str	r3, [r7, #4]
 8003282:	460b      	mov	r3, r1
 8003284:	817b      	strh	r3, [r7, #10]
 8003286:	4613      	mov	r3, r2
 8003288:	813b      	strh	r3, [r7, #8]
 800328a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800328e:	3b0a      	subs	r3, #10
 8003290:	2b0b      	cmp	r3, #11
 8003292:	f200 80dc 	bhi.w	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003296:	a201      	add	r2, pc, #4	@ (adr r2, 800329c <ucg_com_arduino_generic_SW_SPI+0x24>)
 8003298:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800329c:	080032cd 	.word	0x080032cd
 80032a0:	0800344f 	.word	0x0800344f
 80032a4:	0800331f 	.word	0x0800331f
 80032a8:	08003329 	.word	0x08003329
 80032ac:	08003339 	.word	0x08003339
 80032b0:	08003349 	.word	0x08003349
 80032b4:	0800335b 	.word	0x0800335b
 80032b8:	0800337b 	.word	0x0800337b
 80032bc:	080033a3 	.word	0x080033a3
 80032c0:	080033d9 	.word	0x080033d9
 80032c4:	080033f7 	.word	0x080033f7
 80032c8:	08003447 	.word	0x08003447
 80032cc:	f7ff ff6a 	bl	80031a4 <ucg_gpio_init>
 80032d0:	2201      	movs	r2, #1
 80032d2:	2180      	movs	r1, #128	@ 0x80
 80032d4:	4860      	ldr	r0, [pc, #384]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80032d6:	f7ff f8d1 	bl	800247c <GPIO_WriteBit>
 80032da:	2201      	movs	r2, #1
 80032dc:	2140      	movs	r1, #64	@ 0x40
 80032de:	485f      	ldr	r0, [pc, #380]	@ (800345c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80032e0:	f7ff f8cc 	bl	800247c <GPIO_WriteBit>
 80032e4:	2201      	movs	r2, #1
 80032e6:	2180      	movs	r1, #128	@ 0x80
 80032e8:	485d      	ldr	r0, [pc, #372]	@ (8003460 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 80032ea:	f7ff f8c7 	bl	800247c <GPIO_WriteBit>
 80032ee:	2201      	movs	r2, #1
 80032f0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80032f4:	4858      	ldr	r0, [pc, #352]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80032f6:	f7ff f8c1 	bl	800247c <GPIO_WriteBit>
 80032fa:	2200      	movs	r2, #0
 80032fc:	2120      	movs	r1, #32
 80032fe:	4856      	ldr	r0, [pc, #344]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003300:	f7ff f8bc 	bl	800247c <GPIO_WriteBit>
 8003304:	2201      	movs	r2, #1
 8003306:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800330a:	4854      	ldr	r0, [pc, #336]	@ (800345c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 800330c:	f7ff f8b6 	bl	800247c <GPIO_WriteBit>
 8003310:	2201      	movs	r2, #1
 8003312:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003316:	4850      	ldr	r0, [pc, #320]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003318:	f7ff f8b0 	bl	800247c <GPIO_WriteBit>
 800331c:	e097      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800331e:	893b      	ldrh	r3, [r7, #8]
 8003320:	4618      	mov	r0, r3
 8003322:	f7ff ff35 	bl	8003190 <delayMicroseconds>
 8003326:	e092      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003328:	893b      	ldrh	r3, [r7, #8]
 800332a:	b2db      	uxtb	r3, r3
 800332c:	461a      	mov	r2, r3
 800332e:	2180      	movs	r1, #128	@ 0x80
 8003330:	484b      	ldr	r0, [pc, #300]	@ (8003460 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8003332:	f7ff f8a3 	bl	800247c <GPIO_WriteBit>
 8003336:	e08a      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003338:	893b      	ldrh	r3, [r7, #8]
 800333a:	b2db      	uxtb	r3, r3
 800333c:	461a      	mov	r2, r3
 800333e:	2140      	movs	r1, #64	@ 0x40
 8003340:	4846      	ldr	r0, [pc, #280]	@ (800345c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8003342:	f7ff f89b 	bl	800247c <GPIO_WriteBit>
 8003346:	e082      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003348:	893b      	ldrh	r3, [r7, #8]
 800334a:	b2db      	uxtb	r3, r3
 800334c:	461a      	mov	r2, r3
 800334e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003352:	4841      	ldr	r0, [pc, #260]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003354:	f7ff f892 	bl	800247c <GPIO_WriteBit>
 8003358:	e079      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800335a:	893b      	ldrh	r3, [r7, #8]
 800335c:	b2db      	uxtb	r3, r3
 800335e:	4619      	mov	r1, r3
 8003360:	68f8      	ldr	r0, [r7, #12]
 8003362:	f7ff ff4f 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 8003366:	e072      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	781b      	ldrb	r3, [r3, #0]
 800336c:	4619      	mov	r1, r3
 800336e:	68f8      	ldr	r0, [r7, #12]
 8003370:	f7ff ff48 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 8003374:	893b      	ldrh	r3, [r7, #8]
 8003376:	3b01      	subs	r3, #1
 8003378:	813b      	strh	r3, [r7, #8]
 800337a:	893b      	ldrh	r3, [r7, #8]
 800337c:	2b00      	cmp	r3, #0
 800337e:	d1f3      	bne.n	8003368 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8003380:	e065      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	781b      	ldrb	r3, [r3, #0]
 8003386:	4619      	mov	r1, r3
 8003388:	68f8      	ldr	r0, [r7, #12]
 800338a:	f7ff ff3b 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	3301      	adds	r3, #1
 8003392:	781b      	ldrb	r3, [r3, #0]
 8003394:	4619      	mov	r1, r3
 8003396:	68f8      	ldr	r0, [r7, #12]
 8003398:	f7ff ff34 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 800339c:	893b      	ldrh	r3, [r7, #8]
 800339e:	3b01      	subs	r3, #1
 80033a0:	813b      	strh	r3, [r7, #8]
 80033a2:	893b      	ldrh	r3, [r7, #8]
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d1ec      	bne.n	8003382 <ucg_com_arduino_generic_SW_SPI+0x10a>
 80033a8:	e051      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	781b      	ldrb	r3, [r3, #0]
 80033ae:	4619      	mov	r1, r3
 80033b0:	68f8      	ldr	r0, [r7, #12]
 80033b2:	f7ff ff27 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	3301      	adds	r3, #1
 80033ba:	781b      	ldrb	r3, [r3, #0]
 80033bc:	4619      	mov	r1, r3
 80033be:	68f8      	ldr	r0, [r7, #12]
 80033c0:	f7ff ff20 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	3302      	adds	r3, #2
 80033c8:	781b      	ldrb	r3, [r3, #0]
 80033ca:	4619      	mov	r1, r3
 80033cc:	68f8      	ldr	r0, [r7, #12]
 80033ce:	f7ff ff19 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 80033d2:	893b      	ldrh	r3, [r7, #8]
 80033d4:	3b01      	subs	r3, #1
 80033d6:	813b      	strh	r3, [r7, #8]
 80033d8:	893b      	ldrh	r3, [r7, #8]
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d1e5      	bne.n	80033aa <ucg_com_arduino_generic_SW_SPI+0x132>
 80033de:	e036      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	1c5a      	adds	r2, r3, #1
 80033e4:	607a      	str	r2, [r7, #4]
 80033e6:	781b      	ldrb	r3, [r3, #0]
 80033e8:	4619      	mov	r1, r3
 80033ea:	68f8      	ldr	r0, [r7, #12]
 80033ec:	f7ff ff0a 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 80033f0:	893b      	ldrh	r3, [r7, #8]
 80033f2:	3b01      	subs	r3, #1
 80033f4:	813b      	strh	r3, [r7, #8]
 80033f6:	893b      	ldrh	r3, [r7, #8]
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	d1f1      	bne.n	80033e0 <ucg_com_arduino_generic_SW_SPI+0x168>
 80033fc:	e027      	b.n	800344e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	781b      	ldrb	r3, [r3, #0]
 8003402:	2b00      	cmp	r3, #0
 8003404:	d010      	beq.n	8003428 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	781b      	ldrb	r3, [r3, #0]
 800340a:	2b01      	cmp	r3, #1
 800340c:	d106      	bne.n	800341c <ucg_com_arduino_generic_SW_SPI+0x1a4>
 800340e:	2200      	movs	r2, #0
 8003410:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003414:	4810      	ldr	r0, [pc, #64]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003416:	f7ff f831 	bl	800247c <GPIO_WriteBit>
 800341a:	e005      	b.n	8003428 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 800341c:	2201      	movs	r2, #1
 800341e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003422:	480d      	ldr	r0, [pc, #52]	@ (8003458 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003424:	f7ff f82a 	bl	800247c <GPIO_WriteBit>
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	3301      	adds	r3, #1
 800342c:	607b      	str	r3, [r7, #4]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	781b      	ldrb	r3, [r3, #0]
 8003432:	4619      	mov	r1, r3
 8003434:	68f8      	ldr	r0, [r7, #12]
 8003436:	f7ff fee5 	bl	8003204 <ucg_com_arduino_send_generic_SW_SPI>
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	3301      	adds	r3, #1
 800343e:	607b      	str	r3, [r7, #4]
 8003440:	893b      	ldrh	r3, [r7, #8]
 8003442:	3b01      	subs	r3, #1
 8003444:	813b      	strh	r3, [r7, #8]
 8003446:	893b      	ldrh	r3, [r7, #8]
 8003448:	2b00      	cmp	r3, #0
 800344a:	d1d8      	bne.n	80033fe <ucg_com_arduino_generic_SW_SPI+0x186>
 800344c:	bf00      	nop
 800344e:	2301      	movs	r3, #1
 8003450:	4618      	mov	r0, r3
 8003452:	3710      	adds	r7, #16
 8003454:	46bd      	mov	sp, r7
 8003456:	bd80      	pop	{r7, pc}
 8003458:	40020000 	.word	0x40020000
 800345c:	40020400 	.word	0x40020400
 8003460:	40020800 	.word	0x40020800

08003464 <Ucglib4WireSWSPI_begin>:
 8003464:	b580      	push	{r7, lr}
 8003466:	b082      	sub	sp, #8
 8003468:	af00      	add	r7, sp, #0
 800346a:	6078      	str	r0, [r7, #4]
 800346c:	460b      	mov	r3, r1
 800346e:	70fb      	strb	r3, [r7, #3]
 8003470:	4b07      	ldr	r3, [pc, #28]	@ (8003490 <Ucglib4WireSWSPI_begin+0x2c>)
 8003472:	4a08      	ldr	r2, [pc, #32]	@ (8003494 <Ucglib4WireSWSPI_begin+0x30>)
 8003474:	4908      	ldr	r1, [pc, #32]	@ (8003498 <Ucglib4WireSWSPI_begin+0x34>)
 8003476:	6878      	ldr	r0, [r7, #4]
 8003478:	f001 f9a2 	bl	80047c0 <ucg_Init>
 800347c:	78fb      	ldrb	r3, [r7, #3]
 800347e:	4619      	mov	r1, r3
 8003480:	6878      	ldr	r0, [r7, #4]
 8003482:	f000 ff86 	bl	8004392 <ucg_SetFontMode>
 8003486:	bf00      	nop
 8003488:	3708      	adds	r7, #8
 800348a:	46bd      	mov	sp, r7
 800348c:	bd80      	pop	{r7, pc}
 800348e:	bf00      	nop
 8003490:	08003279 	.word	0x08003279
 8003494:	08003ad1 	.word	0x08003ad1
 8003498:	08003bf9 	.word	0x08003bf9

0800349c <ucg_DrawBox>:
 800349c:	b580      	push	{r7, lr}
 800349e:	b084      	sub	sp, #16
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	60f8      	str	r0, [r7, #12]
 80034a4:	4608      	mov	r0, r1
 80034a6:	4611      	mov	r1, r2
 80034a8:	461a      	mov	r2, r3
 80034aa:	4603      	mov	r3, r0
 80034ac:	817b      	strh	r3, [r7, #10]
 80034ae:	460b      	mov	r3, r1
 80034b0:	813b      	strh	r3, [r7, #8]
 80034b2:	4613      	mov	r3, r2
 80034b4:	80fb      	strh	r3, [r7, #6]
 80034b6:	e014      	b.n	80034e2 <ucg_DrawBox+0x46>
 80034b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80034bc:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80034c0:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80034c4:	68f8      	ldr	r0, [r7, #12]
 80034c6:	f001 f9ed 	bl	80048a4 <ucg_DrawHLine>
 80034ca:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80034ce:	b29b      	uxth	r3, r3
 80034d0:	3b01      	subs	r3, #1
 80034d2:	b29b      	uxth	r3, r3
 80034d4:	833b      	strh	r3, [r7, #24]
 80034d6:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80034da:	b29b      	uxth	r3, r3
 80034dc:	3301      	adds	r3, #1
 80034de:	b29b      	uxth	r3, r3
 80034e0:	813b      	strh	r3, [r7, #8]
 80034e2:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	dce6      	bgt.n	80034b8 <ucg_DrawBox+0x1c>
 80034ea:	bf00      	nop
 80034ec:	3710      	adds	r7, #16
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}

080034f2 <ucg_ClearScreen>:
 80034f2:	b580      	push	{r7, lr}
 80034f4:	b084      	sub	sp, #16
 80034f6:	af02      	add	r7, sp, #8
 80034f8:	6078      	str	r0, [r7, #4]
 80034fa:	2300      	movs	r3, #0
 80034fc:	9300      	str	r3, [sp, #0]
 80034fe:	2300      	movs	r3, #0
 8003500:	2200      	movs	r2, #0
 8003502:	2100      	movs	r1, #0
 8003504:	6878      	ldr	r0, [r7, #4]
 8003506:	f001 f9ec 	bl	80048e2 <ucg_SetColor>
 800350a:	6878      	ldr	r0, [r7, #4]
 800350c:	f000 fb3b 	bl	8003b86 <ucg_SetMaxClipRange>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800351c:	9300      	str	r3, [sp, #0]
 800351e:	4613      	mov	r3, r2
 8003520:	2200      	movs	r2, #0
 8003522:	2100      	movs	r1, #0
 8003524:	6878      	ldr	r0, [r7, #4]
 8003526:	f7ff ffb9 	bl	800349c <ucg_DrawBox>
 800352a:	23ff      	movs	r3, #255	@ 0xff
 800352c:	9300      	str	r3, [sp, #0]
 800352e:	23ff      	movs	r3, #255	@ 0xff
 8003530:	22ff      	movs	r2, #255	@ 0xff
 8003532:	2100      	movs	r1, #0
 8003534:	6878      	ldr	r0, [r7, #4]
 8003536:	f001 f9d4 	bl	80048e2 <ucg_SetColor>
 800353a:	bf00      	nop
 800353c:	3708      	adds	r7, #8
 800353e:	46bd      	mov	sp, r7
 8003540:	bd80      	pop	{r7, pc}

08003542 <ucg_ccs_init>:
 8003542:	b480      	push	{r7}
 8003544:	b083      	sub	sp, #12
 8003546:	af00      	add	r7, sp, #0
 8003548:	6078      	str	r0, [r7, #4]
 800354a:	4608      	mov	r0, r1
 800354c:	4611      	mov	r1, r2
 800354e:	461a      	mov	r2, r3
 8003550:	4603      	mov	r3, r0
 8003552:	70fb      	strb	r3, [r7, #3]
 8003554:	460b      	mov	r3, r1
 8003556:	70bb      	strb	r3, [r7, #2]
 8003558:	4613      	mov	r3, r2
 800355a:	803b      	strh	r3, [r7, #0]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	78fa      	ldrb	r2, [r7, #3]
 8003560:	705a      	strb	r2, [r3, #1]
 8003562:	78bb      	ldrb	r3, [r7, #2]
 8003564:	b29a      	uxth	r2, r3
 8003566:	78fb      	ldrb	r3, [r7, #3]
 8003568:	b29b      	uxth	r3, r3
 800356a:	1ad3      	subs	r3, r2, r3
 800356c:	b29b      	uxth	r3, r3
 800356e:	b21a      	sxth	r2, r3
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	809a      	strh	r2, [r3, #4]
 8003574:	883b      	ldrh	r3, [r7, #0]
 8003576:	3b01      	subs	r3, #1
 8003578:	b29b      	uxth	r3, r3
 800357a:	b21a      	sxth	r2, r3
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	811a      	strh	r2, [r3, #8]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	2201      	movs	r2, #1
 8003584:	805a      	strh	r2, [r3, #2]
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800358c:	461a      	mov	r2, r3
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003594:	fb92 f3f3 	sdiv	r3, r2, r3
 8003598:	b21a      	sxth	r2, r3
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	80da      	strh	r2, [r3, #6]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	da0c      	bge.n	80035c2 <ucg_ccs_init+0x80>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80035ae:	b29b      	uxth	r3, r3
 80035b0:	425b      	negs	r3, r3
 80035b2:	b29b      	uxth	r3, r3
 80035b4:	b21a      	sxth	r2, r3
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	809a      	strh	r2, [r3, #4]
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80035c0:	805a      	strh	r2, [r3, #2]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80035c8:	687a      	ldr	r2, [r7, #4]
 80035ca:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80035ce:	fb93 f1f2 	sdiv	r1, r3, r2
 80035d2:	fb02 f201 	mul.w	r2, r2, r1
 80035d6:	1a9b      	subs	r3, r3, r2
 80035d8:	b21a      	sxth	r2, r3
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	815a      	strh	r2, [r3, #10]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80035e4:	0fda      	lsrs	r2, r3, #31
 80035e6:	4413      	add	r3, r2
 80035e8:	105b      	asrs	r3, r3, #1
 80035ea:	b21a      	sxth	r2, r3
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	819a      	strh	r2, [r3, #12]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	78fa      	ldrb	r2, [r7, #3]
 80035f4:	701a      	strb	r2, [r3, #0]
 80035f6:	bf00      	nop
 80035f8:	370c      	adds	r7, #12
 80035fa:	46bd      	mov	sp, r7
 80035fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003600:	4770      	bx	lr

08003602 <ucg_ccs_step>:
 8003602:	b480      	push	{r7}
 8003604:	b083      	sub	sp, #12
 8003606:	af00      	add	r7, sp, #0
 8003608:	6078      	str	r0, [r7, #4]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	781a      	ldrb	r2, [r3, #0]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003614:	b2db      	uxtb	r3, r3
 8003616:	4413      	add	r3, r2
 8003618:	b2da      	uxtb	r2, r3
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	701a      	strb	r2, [r3, #0]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003624:	b29a      	uxth	r2, r3
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800362c:	b29b      	uxth	r3, r3
 800362e:	4413      	add	r3, r2
 8003630:	b29b      	uxth	r3, r3
 8003632:	b21a      	sxth	r2, r3
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	819a      	strh	r2, [r3, #12]
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003644:	429a      	cmp	r2, r3
 8003646:	db16      	blt.n	8003676 <ucg_ccs_step+0x74>
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	781a      	ldrb	r2, [r3, #0]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003652:	b2db      	uxtb	r3, r3
 8003654:	4413      	add	r3, r2
 8003656:	b2da      	uxtb	r2, r3
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	701a      	strb	r2, [r3, #0]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003662:	b29a      	uxth	r2, r3
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800366a:	b29b      	uxth	r3, r3
 800366c:	1ad3      	subs	r3, r2, r3
 800366e:	b29b      	uxth	r3, r3
 8003670:	b21a      	sxth	r2, r3
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	819a      	strh	r2, [r3, #12]
 8003676:	bf00      	nop
 8003678:	370c      	adds	r7, #12
 800367a:	46bd      	mov	sp, r7
 800367c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003680:	4770      	bx	lr

08003682 <ucg_ccs_seek>:
 8003682:	b480      	push	{r7}
 8003684:	b085      	sub	sp, #20
 8003686:	af00      	add	r7, sp, #0
 8003688:	6078      	str	r0, [r7, #4]
 800368a:	460b      	mov	r3, r1
 800368c:	807b      	strh	r3, [r7, #2]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003694:	b2da      	uxtb	r2, r3
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	701a      	strb	r2, [r3, #0]
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	781a      	ldrb	r2, [r3, #0]
 800369e:	887b      	ldrh	r3, [r7, #2]
 80036a0:	b2db      	uxtb	r3, r3
 80036a2:	fb12 f303 	smulbb	r3, r2, r3
 80036a6:	b2da      	uxtb	r2, r3
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	701a      	strb	r2, [r3, #0]
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80036b2:	b29a      	uxth	r2, r3
 80036b4:	887b      	ldrh	r3, [r7, #2]
 80036b6:	fb12 f303 	smulbb	r3, r2, r3
 80036ba:	b29a      	uxth	r2, r3
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80036c2:	0fd9      	lsrs	r1, r3, #31
 80036c4:	440b      	add	r3, r1
 80036c6:	105b      	asrs	r3, r3, #1
 80036c8:	b21b      	sxth	r3, r3
 80036ca:	b29b      	uxth	r3, r3
 80036cc:	4413      	add	r3, r2
 80036ce:	b29b      	uxth	r3, r3
 80036d0:	81fb      	strh	r3, [r7, #14]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	db0e      	blt.n	80036fa <ucg_ccs_seek+0x78>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	781a      	ldrb	r2, [r3, #0]
 80036e0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80036e4:	6879      	ldr	r1, [r7, #4]
 80036e6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80036ea:	fb93 f3f1 	sdiv	r3, r3, r1
 80036ee:	b2db      	uxtb	r3, r3
 80036f0:	4413      	add	r3, r2
 80036f2:	b2da      	uxtb	r2, r3
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	701a      	strb	r2, [r3, #0]
 80036f8:	e00d      	b.n	8003716 <ucg_ccs_seek+0x94>
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	781a      	ldrb	r2, [r3, #0]
 80036fe:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003702:	6879      	ldr	r1, [r7, #4]
 8003704:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8003708:	fb93 f3f1 	sdiv	r3, r3, r1
 800370c:	b2db      	uxtb	r3, r3
 800370e:	1ad3      	subs	r3, r2, r3
 8003710:	b2da      	uxtb	r2, r3
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	701a      	strb	r2, [r3, #0]
 8003716:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800371a:	687a      	ldr	r2, [r7, #4]
 800371c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8003720:	fb93 f1f2 	sdiv	r1, r3, r2
 8003724:	fb02 f201 	mul.w	r2, r2, r1
 8003728:	1a9b      	subs	r3, r3, r2
 800372a:	b21a      	sxth	r2, r3
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	819a      	strh	r2, [r3, #12]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	781a      	ldrb	r2, [r3, #0]
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	785b      	ldrb	r3, [r3, #1]
 8003738:	4413      	add	r3, r2
 800373a:	b2da      	uxtb	r2, r3
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	701a      	strb	r2, [r3, #0]
 8003740:	bf00      	nop
 8003742:	3714      	adds	r7, #20
 8003744:	46bd      	mov	sp, r7
 8003746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800374a:	4770      	bx	lr

0800374c <ucg_dev_default_cb>:
 800374c:	b580      	push	{r7, lr}
 800374e:	b084      	sub	sp, #16
 8003750:	af00      	add	r7, sp, #0
 8003752:	60f8      	str	r0, [r7, #12]
 8003754:	460b      	mov	r3, r1
 8003756:	607a      	str	r2, [r7, #4]
 8003758:	817b      	strh	r3, [r7, #10]
 800375a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800375e:	2b0c      	cmp	r3, #12
 8003760:	d00a      	beq.n	8003778 <ucg_dev_default_cb+0x2c>
 8003762:	2b17      	cmp	r3, #23
 8003764:	d10f      	bne.n	8003786 <ucg_dev_default_cb+0x3a>
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	68db      	ldr	r3, [r3, #12]
 800376a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800376e:	687a      	ldr	r2, [r7, #4]
 8003770:	68f8      	ldr	r0, [r7, #12]
 8003772:	4798      	blx	r3
 8003774:	4603      	mov	r3, r0
 8003776:	e007      	b.n	8003788 <ucg_dev_default_cb+0x3c>
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	687a      	ldr	r2, [r7, #4]
 800377c:	3370      	adds	r3, #112	@ 0x70
 800377e:	6810      	ldr	r0, [r2, #0]
 8003780:	6851      	ldr	r1, [r2, #4]
 8003782:	c303      	stmia	r3!, {r0, r1}
 8003784:	bf00      	nop
 8003786:	2301      	movs	r3, #1
 8003788:	4618      	mov	r0, r3
 800378a:	3710      	adds	r7, #16
 800378c:	46bd      	mov	sp, r7
 800378e:	bd80      	pop	{r7, pc}

08003790 <ucg_ext_none>:
 8003790:	b480      	push	{r7}
 8003792:	b085      	sub	sp, #20
 8003794:	af00      	add	r7, sp, #0
 8003796:	60f8      	str	r0, [r7, #12]
 8003798:	460b      	mov	r3, r1
 800379a:	607a      	str	r2, [r7, #4]
 800379c:	817b      	strh	r3, [r7, #10]
 800379e:	2301      	movs	r3, #1
 80037a0:	4618      	mov	r0, r3
 80037a2:	3714      	adds	r7, #20
 80037a4:	46bd      	mov	sp, r7
 80037a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037aa:	4770      	bx	lr

080037ac <ucg_handle_st7735_l90fx>:
 80037ac:	b590      	push	{r4, r7, lr}
 80037ae:	b085      	sub	sp, #20
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]
 80037b4:	6878      	ldr	r0, [r7, #4]
 80037b6:	f001 fb55 	bl	8004e64 <ucg_clip_l90fx>
 80037ba:	4603      	mov	r3, r0
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d053      	beq.n	8003868 <ucg_handle_st7735_l90fx+0xbc>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80037c6:	2b01      	cmp	r3, #1
 80037c8:	d008      	beq.n	80037dc <ucg_handle_st7735_l90fx+0x30>
 80037ca:	2b02      	cmp	r3, #2
 80037cc:	d00b      	beq.n	80037e6 <ucg_handle_st7735_l90fx+0x3a>
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d11b      	bne.n	800380a <ucg_handle_st7735_l90fx+0x5e>
 80037d2:	4928      	ldr	r1, [pc, #160]	@ (8003874 <ucg_handle_st7735_l90fx+0xc8>)
 80037d4:	6878      	ldr	r0, [r7, #4]
 80037d6:	f001 fe73 	bl	80054c0 <ucg_com_SendCmdSeq>
 80037da:	e028      	b.n	800382e <ucg_handle_st7735_l90fx+0x82>
 80037dc:	4926      	ldr	r1, [pc, #152]	@ (8003878 <ucg_handle_st7735_l90fx+0xcc>)
 80037de:	6878      	ldr	r0, [r7, #4]
 80037e0:	f001 fe6e 	bl	80054c0 <ucg_com_SendCmdSeq>
 80037e4:	e023      	b.n	800382e <ucg_handle_st7735_l90fx+0x82>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80037ea:	81fb      	strh	r3, [r7, #14]
 80037ec:	89fb      	ldrh	r3, [r7, #14]
 80037ee:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 80037f2:	b29b      	uxth	r3, r3
 80037f4:	b21a      	sxth	r2, r3
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	849a      	strh	r2, [r3, #36]	@ 0x24
 80037fa:	4920      	ldr	r1, [pc, #128]	@ (800387c <ucg_handle_st7735_l90fx+0xd0>)
 80037fc:	6878      	ldr	r0, [r7, #4]
 80037fe:	f001 fe5f 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	89fa      	ldrh	r2, [r7, #14]
 8003806:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003808:	e011      	b.n	800382e <ucg_handle_st7735_l90fx+0x82>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800380e:	81fb      	strh	r3, [r7, #14]
 8003810:	89fb      	ldrh	r3, [r7, #14]
 8003812:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8003816:	b29b      	uxth	r3, r3
 8003818:	b21a      	sxth	r2, r3
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800381e:	4918      	ldr	r1, [pc, #96]	@ (8003880 <ucg_handle_st7735_l90fx+0xd4>)
 8003820:	6878      	ldr	r0, [r7, #4]
 8003822:	f001 fe4d 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	89fa      	ldrh	r2, [r7, #14]
 800382a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800382c:	bf00      	nop
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8003834:	723b      	strb	r3, [r7, #8]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800383c:	727b      	strb	r3, [r7, #9]
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 8003844:	72bb      	strb	r3, [r7, #10]
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	69dc      	ldr	r4, [r3, #28]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8003850:	b29a      	uxth	r2, r3
 8003852:	f107 0308 	add.w	r3, r7, #8
 8003856:	2113      	movs	r1, #19
 8003858:	6878      	ldr	r0, [r7, #4]
 800385a:	47a0      	blx	r4
 800385c:	2101      	movs	r1, #1
 800385e:	6878      	ldr	r0, [r7, #4]
 8003860:	f001 fd7a 	bl	8005358 <ucg_com_SetCSLineStatus>
 8003864:	2301      	movs	r3, #1
 8003866:	e000      	b.n	800386a <ucg_handle_st7735_l90fx+0xbe>
 8003868:	2300      	movs	r3, #0
 800386a:	4618      	mov	r0, r3
 800386c:	3714      	adds	r7, #20
 800386e:	46bd      	mov	sp, r7
 8003870:	bd90      	pop	{r4, r7, pc}
 8003872:	bf00      	nop
 8003874:	0800639c 	.word	0x0800639c
 8003878:	080063bc 	.word	0x080063bc
 800387c:	080063e0 	.word	0x080063e0
 8003880:	08006404 	.word	0x08006404

08003884 <ucg_handle_st7735_l90se>:
 8003884:	b590      	push	{r4, r7, lr}
 8003886:	b087      	sub	sp, #28
 8003888:	af00      	add	r7, sp, #0
 800388a:	6078      	str	r0, [r7, #4]
 800388c:	2300      	movs	r3, #0
 800388e:	75fb      	strb	r3, [r7, #23]
 8003890:	e01a      	b.n	80038c8 <ucg_handle_st7735_l90se+0x44>
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8003898:	7dfa      	ldrb	r2, [r7, #23]
 800389a:	4613      	mov	r3, r2
 800389c:	00db      	lsls	r3, r3, #3
 800389e:	1a9b      	subs	r3, r3, r2
 80038a0:	005b      	lsls	r3, r3, #1
 80038a2:	18c8      	adds	r0, r1, r3
 80038a4:	7dfb      	ldrb	r3, [r7, #23]
 80038a6:	687a      	ldr	r2, [r7, #4]
 80038a8:	4413      	add	r3, r2
 80038aa:	f893 103a 	ldrb.w	r1, [r3, #58]	@ 0x3a
 80038ae:	7dfb      	ldrb	r3, [r7, #23]
 80038b0:	687a      	ldr	r2, [r7, #4]
 80038b2:	4413      	add	r3, r2
 80038b4:	f893 203d 	ldrb.w	r2, [r3, #61]	@ 0x3d
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 80038be:	f7ff fe40 	bl	8003542 <ucg_ccs_init>
 80038c2:	7dfb      	ldrb	r3, [r7, #23]
 80038c4:	3301      	adds	r3, #1
 80038c6:	75fb      	strb	r3, [r7, #23]
 80038c8:	7dfb      	ldrb	r3, [r7, #23]
 80038ca:	2b02      	cmp	r3, #2
 80038cc:	d9e1      	bls.n	8003892 <ucg_handle_st7735_l90se+0xe>
 80038ce:	6878      	ldr	r0, [r7, #4]
 80038d0:	f001 fc48 	bl	8005164 <ucg_clip_l90se>
 80038d4:	4603      	mov	r3, r0
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d071      	beq.n	80039be <ucg_handle_st7735_l90se+0x13a>
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80038e0:	2b01      	cmp	r3, #1
 80038e2:	d008      	beq.n	80038f6 <ucg_handle_st7735_l90se+0x72>
 80038e4:	2b02      	cmp	r3, #2
 80038e6:	d00b      	beq.n	8003900 <ucg_handle_st7735_l90se+0x7c>
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d11b      	bne.n	8003924 <ucg_handle_st7735_l90se+0xa0>
 80038ec:	4936      	ldr	r1, [pc, #216]	@ (80039c8 <ucg_handle_st7735_l90se+0x144>)
 80038ee:	6878      	ldr	r0, [r7, #4]
 80038f0:	f001 fde6 	bl	80054c0 <ucg_com_SendCmdSeq>
 80038f4:	e028      	b.n	8003948 <ucg_handle_st7735_l90se+0xc4>
 80038f6:	4935      	ldr	r1, [pc, #212]	@ (80039cc <ucg_handle_st7735_l90se+0x148>)
 80038f8:	6878      	ldr	r0, [r7, #4]
 80038fa:	f001 fde1 	bl	80054c0 <ucg_com_SendCmdSeq>
 80038fe:	e023      	b.n	8003948 <ucg_handle_st7735_l90se+0xc4>
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8003904:	827b      	strh	r3, [r7, #18]
 8003906:	8a7b      	ldrh	r3, [r7, #18]
 8003908:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 800390c:	b29b      	uxth	r3, r3
 800390e:	b21a      	sxth	r2, r3
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003914:	492e      	ldr	r1, [pc, #184]	@ (80039d0 <ucg_handle_st7735_l90se+0x14c>)
 8003916:	6878      	ldr	r0, [r7, #4]
 8003918:	f001 fdd2 	bl	80054c0 <ucg_com_SendCmdSeq>
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	8a7a      	ldrh	r2, [r7, #18]
 8003920:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003922:	e011      	b.n	8003948 <ucg_handle_st7735_l90se+0xc4>
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003928:	827b      	strh	r3, [r7, #18]
 800392a:	8a7b      	ldrh	r3, [r7, #18]
 800392c:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8003930:	b29b      	uxth	r3, r3
 8003932:	b21a      	sxth	r2, r3
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003938:	4926      	ldr	r1, [pc, #152]	@ (80039d4 <ucg_handle_st7735_l90se+0x150>)
 800393a:	6878      	ldr	r0, [r7, #4]
 800393c:	f001 fdc0 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	8a7a      	ldrh	r2, [r7, #18]
 8003944:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003946:	bf00      	nop
 8003948:	2300      	movs	r3, #0
 800394a:	82bb      	strh	r3, [r7, #20]
 800394c:	e02a      	b.n	80039a4 <ucg_handle_st7735_l90se+0x120>
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 8003954:	733b      	strb	r3, [r7, #12]
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 800395c:	737b      	strb	r3, [r7, #13]
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	f893 3062 	ldrb.w	r3, [r3, #98]	@ 0x62
 8003964:	73bb      	strb	r3, [r7, #14]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	69dc      	ldr	r4, [r3, #28]
 800396a:	f107 030c 	add.w	r3, r7, #12
 800396e:	2201      	movs	r2, #1
 8003970:	2113      	movs	r1, #19
 8003972:	6878      	ldr	r0, [r7, #4]
 8003974:	47a0      	blx	r4
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	3346      	adds	r3, #70	@ 0x46
 800397a:	4618      	mov	r0, r3
 800397c:	f7ff fe41 	bl	8003602 <ucg_ccs_step>
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	3346      	adds	r3, #70	@ 0x46
 8003984:	330e      	adds	r3, #14
 8003986:	4618      	mov	r0, r3
 8003988:	f7ff fe3b 	bl	8003602 <ucg_ccs_step>
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	3346      	adds	r3, #70	@ 0x46
 8003990:	331c      	adds	r3, #28
 8003992:	4618      	mov	r0, r3
 8003994:	f7ff fe35 	bl	8003602 <ucg_ccs_step>
 8003998:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 800399c:	b29b      	uxth	r3, r3
 800399e:	3301      	adds	r3, #1
 80039a0:	b29b      	uxth	r3, r3
 80039a2:	82bb      	strh	r3, [r7, #20]
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 80039aa:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80039ae:	429a      	cmp	r2, r3
 80039b0:	dbcd      	blt.n	800394e <ucg_handle_st7735_l90se+0xca>
 80039b2:	2101      	movs	r1, #1
 80039b4:	6878      	ldr	r0, [r7, #4]
 80039b6:	f001 fccf 	bl	8005358 <ucg_com_SetCSLineStatus>
 80039ba:	2301      	movs	r3, #1
 80039bc:	e000      	b.n	80039c0 <ucg_handle_st7735_l90se+0x13c>
 80039be:	2300      	movs	r3, #0
 80039c0:	4618      	mov	r0, r3
 80039c2:	371c      	adds	r7, #28
 80039c4:	46bd      	mov	sp, r7
 80039c6:	bd90      	pop	{r4, r7, pc}
 80039c8:	0800639c 	.word	0x0800639c
 80039cc:	080063bc 	.word	0x080063bc
 80039d0:	080063e0 	.word	0x080063e0
 80039d4:	08006404 	.word	0x08006404

080039d8 <ucg_dev_ic_st7735_18>:
 80039d8:	b590      	push	{r4, r7, lr}
 80039da:	b087      	sub	sp, #28
 80039dc:	af00      	add	r7, sp, #0
 80039de:	60f8      	str	r0, [r7, #12]
 80039e0:	460b      	mov	r3, r1
 80039e2:	607a      	str	r2, [r7, #4]
 80039e4:	817b      	strh	r3, [r7, #10]
 80039e6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80039ea:	3b0a      	subs	r3, #10
 80039ec:	2b0b      	cmp	r3, #11
 80039ee:	d85f      	bhi.n	8003ab0 <ucg_dev_ic_st7735_18+0xd8>
 80039f0:	a201      	add	r2, pc, #4	@ (adr r2, 80039f8 <ucg_dev_ic_st7735_18+0x20>)
 80039f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039f6:	bf00      	nop
 80039f8:	08003a29 	.word	0x08003a29
 80039fc:	08003a43 	.word	0x08003a43
 8003a00:	08003ab1 	.word	0x08003ab1
 8003a04:	08003ab1 	.word	0x08003ab1
 8003a08:	08003ab1 	.word	0x08003ab1
 8003a0c:	08003a4f 	.word	0x08003a4f
 8003a10:	08003ab1 	.word	0x08003ab1
 8003a14:	08003ab1 	.word	0x08003ab1
 8003a18:	08003ab1 	.word	0x08003ab1
 8003a1c:	08003ab1 	.word	0x08003ab1
 8003a20:	08003a5f 	.word	0x08003a5f
 8003a24:	08003aa7 	.word	0x08003aa7
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	2202      	movs	r2, #2
 8003a2c:	841a      	strh	r2, [r3, #32]
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	2201      	movs	r2, #1
 8003a32:	845a      	strh	r2, [r3, #34]	@ 0x22
 8003a34:	2242      	movs	r2, #66	@ 0x42
 8003a36:	2164      	movs	r1, #100	@ 0x64
 8003a38:	68f8      	ldr	r0, [r7, #12]
 8003a3a:	f001 fbdc 	bl	80051f6 <ucg_com_PowerUp>
 8003a3e:	4603      	mov	r3, r0
 8003a40:	e03e      	b.n	8003ac0 <ucg_dev_ic_st7735_18+0xe8>
 8003a42:	4921      	ldr	r1, [pc, #132]	@ (8003ac8 <ucg_dev_ic_st7735_18+0xf0>)
 8003a44:	68f8      	ldr	r0, [r7, #12]
 8003a46:	f001 fd3b 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003a4a:	2301      	movs	r3, #1
 8003a4c:	e038      	b.n	8003ac0 <ucg_dev_ic_st7735_18+0xe8>
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	2280      	movs	r2, #128	@ 0x80
 8003a52:	801a      	strh	r2, [r3, #0]
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	2280      	movs	r2, #128	@ 0x80
 8003a58:	805a      	strh	r2, [r3, #2]
 8003a5a:	2301      	movs	r3, #1
 8003a5c:	e030      	b.n	8003ac0 <ucg_dev_ic_st7735_18+0xe8>
 8003a5e:	68f8      	ldr	r0, [r7, #12]
 8003a60:	f001 f9e7 	bl	8004e32 <ucg_clip_is_pixel_visible>
 8003a64:	4603      	mov	r3, r0
 8003a66:	2b00      	cmp	r3, #0
 8003a68:	d01b      	beq.n	8003aa2 <ucg_dev_ic_st7735_18+0xca>
 8003a6a:	4918      	ldr	r1, [pc, #96]	@ (8003acc <ucg_dev_ic_st7735_18+0xf4>)
 8003a6c:	68f8      	ldr	r0, [r7, #12]
 8003a6e:	f001 fd27 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8003a78:	753b      	strb	r3, [r7, #20]
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8003a80:	757b      	strb	r3, [r7, #21]
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 8003a88:	75bb      	strb	r3, [r7, #22]
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	69dc      	ldr	r4, [r3, #28]
 8003a8e:	f107 0314 	add.w	r3, r7, #20
 8003a92:	2201      	movs	r2, #1
 8003a94:	2113      	movs	r1, #19
 8003a96:	68f8      	ldr	r0, [r7, #12]
 8003a98:	47a0      	blx	r4
 8003a9a:	2101      	movs	r1, #1
 8003a9c:	68f8      	ldr	r0, [r7, #12]
 8003a9e:	f001 fc5b 	bl	8005358 <ucg_com_SetCSLineStatus>
 8003aa2:	2301      	movs	r3, #1
 8003aa4:	e00c      	b.n	8003ac0 <ucg_dev_ic_st7735_18+0xe8>
 8003aa6:	68f8      	ldr	r0, [r7, #12]
 8003aa8:	f7ff fe80 	bl	80037ac <ucg_handle_st7735_l90fx>
 8003aac:	2301      	movs	r3, #1
 8003aae:	e007      	b.n	8003ac0 <ucg_dev_ic_st7735_18+0xe8>
 8003ab0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003ab4:	687a      	ldr	r2, [r7, #4]
 8003ab6:	4619      	mov	r1, r3
 8003ab8:	68f8      	ldr	r0, [r7, #12]
 8003aba:	f7ff fe47 	bl	800374c <ucg_dev_default_cb>
 8003abe:	4603      	mov	r3, r0
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	371c      	adds	r7, #28
 8003ac4:	46bd      	mov	sp, r7
 8003ac6:	bd90      	pop	{r4, r7, pc}
 8003ac8:	08006428 	.word	0x08006428
 8003acc:	0800637c 	.word	0x0800637c

08003ad0 <ucg_ext_st7735_18>:
 8003ad0:	b580      	push	{r7, lr}
 8003ad2:	b084      	sub	sp, #16
 8003ad4:	af00      	add	r7, sp, #0
 8003ad6:	60f8      	str	r0, [r7, #12]
 8003ad8:	460b      	mov	r3, r1
 8003ada:	607a      	str	r2, [r7, #4]
 8003adc:	817b      	strh	r3, [r7, #10]
 8003ade:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003ae2:	2b17      	cmp	r3, #23
 8003ae4:	d103      	bne.n	8003aee <ucg_ext_st7735_18+0x1e>
 8003ae6:	68f8      	ldr	r0, [r7, #12]
 8003ae8:	f7ff fecc 	bl	8003884 <ucg_handle_st7735_l90se>
 8003aec:	bf00      	nop
 8003aee:	2301      	movs	r3, #1
 8003af0:	4618      	mov	r0, r3
 8003af2:	3710      	adds	r7, #16
 8003af4:	46bd      	mov	sp, r7
 8003af6:	bd80      	pop	{r7, pc}

08003af8 <ucg_PowerDown>:
 8003af8:	b580      	push	{r7, lr}
 8003afa:	b082      	sub	sp, #8
 8003afc:	af00      	add	r7, sp, #0
 8003afe:	6078      	str	r0, [r7, #4]
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	781b      	ldrb	r3, [r3, #0]
 8003b04:	f003 0301 	and.w	r3, r3, #1
 8003b08:	b2db      	uxtb	r3, r3
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d00a      	beq.n	8003b24 <ucg_PowerDown+0x2c>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	689b      	ldr	r3, [r3, #8]
 8003b12:	2200      	movs	r2, #0
 8003b14:	210b      	movs	r1, #11
 8003b16:	6878      	ldr	r0, [r7, #4]
 8003b18:	4798      	blx	r3
 8003b1a:	687a      	ldr	r2, [r7, #4]
 8003b1c:	7813      	ldrb	r3, [r2, #0]
 8003b1e:	f36f 0300 	bfc	r3, #0, #1
 8003b22:	7013      	strb	r3, [r2, #0]
 8003b24:	bf00      	nop
 8003b26:	3708      	adds	r7, #8
 8003b28:	46bd      	mov	sp, r7
 8003b2a:	bd80      	pop	{r7, pc}

08003b2c <ucg_PowerUp>:
 8003b2c:	b580      	push	{r7, lr}
 8003b2e:	b084      	sub	sp, #16
 8003b30:	af00      	add	r7, sp, #0
 8003b32:	6078      	str	r0, [r7, #4]
 8003b34:	6878      	ldr	r0, [r7, #4]
 8003b36:	f7ff ffdf 	bl	8003af8 <ucg_PowerDown>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	689b      	ldr	r3, [r3, #8]
 8003b3e:	2200      	movs	r2, #0
 8003b40:	210a      	movs	r1, #10
 8003b42:	6878      	ldr	r0, [r7, #4]
 8003b44:	4798      	blx	r3
 8003b46:	4603      	mov	r3, r0
 8003b48:	81fb      	strh	r3, [r7, #14]
 8003b4a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b4e:	2b00      	cmp	r3, #0
 8003b50:	d004      	beq.n	8003b5c <ucg_PowerUp+0x30>
 8003b52:	687a      	ldr	r2, [r7, #4]
 8003b54:	7813      	ldrb	r3, [r2, #0]
 8003b56:	f043 0301 	orr.w	r3, r3, #1
 8003b5a:	7013      	strb	r3, [r2, #0]
 8003b5c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b60:	4618      	mov	r0, r3
 8003b62:	3710      	adds	r7, #16
 8003b64:	46bd      	mov	sp, r7
 8003b66:	bd80      	pop	{r7, pc}

08003b68 <ucg_SetClipBox>:
 8003b68:	b580      	push	{r7, lr}
 8003b6a:	b082      	sub	sp, #8
 8003b6c:	af00      	add	r7, sp, #0
 8003b6e:	6078      	str	r0, [r7, #4]
 8003b70:	6039      	str	r1, [r7, #0]
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	689b      	ldr	r3, [r3, #8]
 8003b76:	683a      	ldr	r2, [r7, #0]
 8003b78:	210c      	movs	r1, #12
 8003b7a:	6878      	ldr	r0, [r7, #4]
 8003b7c:	4798      	blx	r3
 8003b7e:	bf00      	nop
 8003b80:	3708      	adds	r7, #8
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bd80      	pop	{r7, pc}

08003b86 <ucg_SetMaxClipRange>:
 8003b86:	b580      	push	{r7, lr}
 8003b88:	b084      	sub	sp, #16
 8003b8a:	af00      	add	r7, sp, #0
 8003b8c:	6078      	str	r0, [r7, #4]
 8003b8e:	687a      	ldr	r2, [r7, #4]
 8003b90:	f107 030c 	add.w	r3, r7, #12
 8003b94:	3202      	adds	r2, #2
 8003b96:	6810      	ldr	r0, [r2, #0]
 8003b98:	6018      	str	r0, [r3, #0]
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	813b      	strh	r3, [r7, #8]
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	817b      	strh	r3, [r7, #10]
 8003ba2:	f107 0308 	add.w	r3, r7, #8
 8003ba6:	4619      	mov	r1, r3
 8003ba8:	6878      	ldr	r0, [r7, #4]
 8003baa:	f7ff ffdd 	bl	8003b68 <ucg_SetClipBox>
 8003bae:	bf00      	nop
 8003bb0:	3710      	adds	r7, #16
 8003bb2:	46bd      	mov	sp, r7
 8003bb4:	bd80      	pop	{r7, pc}

08003bb6 <ucg_GetDimension>:
 8003bb6:	b580      	push	{r7, lr}
 8003bb8:	b082      	sub	sp, #8
 8003bba:	af00      	add	r7, sp, #0
 8003bbc:	6078      	str	r0, [r7, #4]
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	689b      	ldr	r3, [r3, #8]
 8003bc2:	687a      	ldr	r2, [r7, #4]
 8003bc4:	3202      	adds	r2, #2
 8003bc6:	210f      	movs	r1, #15
 8003bc8:	6878      	ldr	r0, [r7, #4]
 8003bca:	4798      	blx	r3
 8003bcc:	6878      	ldr	r0, [r7, #4]
 8003bce:	f7ff ffda 	bl	8003b86 <ucg_SetMaxClipRange>
 8003bd2:	bf00      	nop
 8003bd4:	3708      	adds	r7, #8
 8003bd6:	46bd      	mov	sp, r7
 8003bd8:	bd80      	pop	{r7, pc}

08003bda <ucg_DrawL90FXWithArg>:
 8003bda:	b580      	push	{r7, lr}
 8003bdc:	b082      	sub	sp, #8
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	6078      	str	r0, [r7, #4]
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	689b      	ldr	r3, [r3, #8]
 8003be6:	687a      	ldr	r2, [r7, #4]
 8003be8:	3224      	adds	r2, #36	@ 0x24
 8003bea:	2115      	movs	r1, #21
 8003bec:	6878      	ldr	r0, [r7, #4]
 8003bee:	4798      	blx	r3
 8003bf0:	bf00      	nop
 8003bf2:	3708      	adds	r7, #8
 8003bf4:	46bd      	mov	sp, r7
 8003bf6:	bd80      	pop	{r7, pc}

08003bf8 <ucg_dev_st7735_18x128x128>:
 8003bf8:	b580      	push	{r7, lr}
 8003bfa:	b084      	sub	sp, #16
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	60f8      	str	r0, [r7, #12]
 8003c00:	460b      	mov	r3, r1
 8003c02:	607a      	str	r2, [r7, #4]
 8003c04:	817b      	strh	r3, [r7, #10]
 8003c06:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003c0a:	2b0b      	cmp	r3, #11
 8003c0c:	d015      	beq.n	8003c3a <ucg_dev_st7735_18x128x128+0x42>
 8003c0e:	2b0f      	cmp	r3, #15
 8003c10:	d01c      	beq.n	8003c4c <ucg_dev_st7735_18x128x128+0x54>
 8003c12:	2b0a      	cmp	r3, #10
 8003c14:	d122      	bne.n	8003c5c <ucg_dev_st7735_18x128x128+0x64>
 8003c16:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003c1a:	687a      	ldr	r2, [r7, #4]
 8003c1c:	4619      	mov	r1, r3
 8003c1e:	68f8      	ldr	r0, [r7, #12]
 8003c20:	f7ff feda 	bl	80039d8 <ucg_dev_ic_st7735_18>
 8003c24:	4603      	mov	r3, r0
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	d101      	bne.n	8003c2e <ucg_dev_st7735_18x128x128+0x36>
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	e01e      	b.n	8003c6c <ucg_dev_st7735_18x128x128+0x74>
 8003c2e:	4911      	ldr	r1, [pc, #68]	@ (8003c74 <ucg_dev_st7735_18x128x128+0x7c>)
 8003c30:	68f8      	ldr	r0, [r7, #12]
 8003c32:	f001 fc45 	bl	80054c0 <ucg_com_SendCmdSeq>
 8003c36:	2301      	movs	r3, #1
 8003c38:	e018      	b.n	8003c6c <ucg_dev_st7735_18x128x128+0x74>
 8003c3a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003c3e:	687a      	ldr	r2, [r7, #4]
 8003c40:	4619      	mov	r1, r3
 8003c42:	68f8      	ldr	r0, [r7, #12]
 8003c44:	f7ff fec8 	bl	80039d8 <ucg_dev_ic_st7735_18>
 8003c48:	4603      	mov	r3, r0
 8003c4a:	e00f      	b.n	8003c6c <ucg_dev_st7735_18x128x128+0x74>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	2280      	movs	r2, #128	@ 0x80
 8003c50:	801a      	strh	r2, [r3, #0]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	2280      	movs	r2, #128	@ 0x80
 8003c56:	805a      	strh	r2, [r3, #2]
 8003c58:	2301      	movs	r3, #1
 8003c5a:	e007      	b.n	8003c6c <ucg_dev_st7735_18x128x128+0x74>
 8003c5c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003c60:	687a      	ldr	r2, [r7, #4]
 8003c62:	4619      	mov	r1, r3
 8003c64:	68f8      	ldr	r0, [r7, #12]
 8003c66:	f7ff feb7 	bl	80039d8 <ucg_dev_ic_st7735_18>
 8003c6a:	4603      	mov	r3, r0
 8003c6c:	4618      	mov	r0, r3
 8003c6e:	3710      	adds	r7, #16
 8003c70:	46bd      	mov	sp, r7
 8003c72:	bd80      	pop	{r7, pc}
 8003c74:	08006430 	.word	0x08006430

08003c78 <ucg_font_get_byte>:
 8003c78:	b480      	push	{r7}
 8003c7a:	b083      	sub	sp, #12
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
 8003c80:	460b      	mov	r3, r1
 8003c82:	70fb      	strb	r3, [r7, #3]
 8003c84:	78fb      	ldrb	r3, [r7, #3]
 8003c86:	687a      	ldr	r2, [r7, #4]
 8003c88:	4413      	add	r3, r2
 8003c8a:	607b      	str	r3, [r7, #4]
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	781b      	ldrb	r3, [r3, #0]
 8003c90:	4618      	mov	r0, r3
 8003c92:	370c      	adds	r7, #12
 8003c94:	46bd      	mov	sp, r7
 8003c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c9a:	4770      	bx	lr

08003c9c <ucg_font_get_word>:
 8003c9c:	b480      	push	{r7}
 8003c9e:	b085      	sub	sp, #20
 8003ca0:	af00      	add	r7, sp, #0
 8003ca2:	6078      	str	r0, [r7, #4]
 8003ca4:	460b      	mov	r3, r1
 8003ca6:	70fb      	strb	r3, [r7, #3]
 8003ca8:	78fb      	ldrb	r3, [r7, #3]
 8003caa:	687a      	ldr	r2, [r7, #4]
 8003cac:	4413      	add	r3, r2
 8003cae:	607b      	str	r3, [r7, #4]
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	781b      	ldrb	r3, [r3, #0]
 8003cb4:	81fb      	strh	r3, [r7, #14]
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	3301      	adds	r3, #1
 8003cba:	607b      	str	r3, [r7, #4]
 8003cbc:	89fb      	ldrh	r3, [r7, #14]
 8003cbe:	021b      	lsls	r3, r3, #8
 8003cc0:	81fb      	strh	r3, [r7, #14]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	781b      	ldrb	r3, [r3, #0]
 8003cc6:	b29a      	uxth	r2, r3
 8003cc8:	89fb      	ldrh	r3, [r7, #14]
 8003cca:	4413      	add	r3, r2
 8003ccc:	81fb      	strh	r3, [r7, #14]
 8003cce:	89fb      	ldrh	r3, [r7, #14]
 8003cd0:	4618      	mov	r0, r3
 8003cd2:	3714      	adds	r7, #20
 8003cd4:	46bd      	mov	sp, r7
 8003cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cda:	4770      	bx	lr

08003cdc <ucg_read_font_info>:
 8003cdc:	b580      	push	{r7, lr}
 8003cde:	b082      	sub	sp, #8
 8003ce0:	af00      	add	r7, sp, #0
 8003ce2:	6078      	str	r0, [r7, #4]
 8003ce4:	6039      	str	r1, [r7, #0]
 8003ce6:	2100      	movs	r1, #0
 8003ce8:	6838      	ldr	r0, [r7, #0]
 8003cea:	f7ff ffc5 	bl	8003c78 <ucg_font_get_byte>
 8003cee:	4603      	mov	r3, r0
 8003cf0:	461a      	mov	r2, r3
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	701a      	strb	r2, [r3, #0]
 8003cf6:	2101      	movs	r1, #1
 8003cf8:	6838      	ldr	r0, [r7, #0]
 8003cfa:	f7ff ffbd 	bl	8003c78 <ucg_font_get_byte>
 8003cfe:	4603      	mov	r3, r0
 8003d00:	461a      	mov	r2, r3
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	705a      	strb	r2, [r3, #1]
 8003d06:	2102      	movs	r1, #2
 8003d08:	6838      	ldr	r0, [r7, #0]
 8003d0a:	f7ff ffb5 	bl	8003c78 <ucg_font_get_byte>
 8003d0e:	4603      	mov	r3, r0
 8003d10:	461a      	mov	r2, r3
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	709a      	strb	r2, [r3, #2]
 8003d16:	2103      	movs	r1, #3
 8003d18:	6838      	ldr	r0, [r7, #0]
 8003d1a:	f7ff ffad 	bl	8003c78 <ucg_font_get_byte>
 8003d1e:	4603      	mov	r3, r0
 8003d20:	461a      	mov	r2, r3
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	70da      	strb	r2, [r3, #3]
 8003d26:	2104      	movs	r1, #4
 8003d28:	6838      	ldr	r0, [r7, #0]
 8003d2a:	f7ff ffa5 	bl	8003c78 <ucg_font_get_byte>
 8003d2e:	4603      	mov	r3, r0
 8003d30:	461a      	mov	r2, r3
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	711a      	strb	r2, [r3, #4]
 8003d36:	2105      	movs	r1, #5
 8003d38:	6838      	ldr	r0, [r7, #0]
 8003d3a:	f7ff ff9d 	bl	8003c78 <ucg_font_get_byte>
 8003d3e:	4603      	mov	r3, r0
 8003d40:	461a      	mov	r2, r3
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	715a      	strb	r2, [r3, #5]
 8003d46:	2106      	movs	r1, #6
 8003d48:	6838      	ldr	r0, [r7, #0]
 8003d4a:	f7ff ff95 	bl	8003c78 <ucg_font_get_byte>
 8003d4e:	4603      	mov	r3, r0
 8003d50:	461a      	mov	r2, r3
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	719a      	strb	r2, [r3, #6]
 8003d56:	2107      	movs	r1, #7
 8003d58:	6838      	ldr	r0, [r7, #0]
 8003d5a:	f7ff ff8d 	bl	8003c78 <ucg_font_get_byte>
 8003d5e:	4603      	mov	r3, r0
 8003d60:	461a      	mov	r2, r3
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	71da      	strb	r2, [r3, #7]
 8003d66:	2108      	movs	r1, #8
 8003d68:	6838      	ldr	r0, [r7, #0]
 8003d6a:	f7ff ff85 	bl	8003c78 <ucg_font_get_byte>
 8003d6e:	4603      	mov	r3, r0
 8003d70:	461a      	mov	r2, r3
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	721a      	strb	r2, [r3, #8]
 8003d76:	2109      	movs	r1, #9
 8003d78:	6838      	ldr	r0, [r7, #0]
 8003d7a:	f7ff ff7d 	bl	8003c78 <ucg_font_get_byte>
 8003d7e:	4603      	mov	r3, r0
 8003d80:	b25a      	sxtb	r2, r3
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	725a      	strb	r2, [r3, #9]
 8003d86:	210a      	movs	r1, #10
 8003d88:	6838      	ldr	r0, [r7, #0]
 8003d8a:	f7ff ff75 	bl	8003c78 <ucg_font_get_byte>
 8003d8e:	4603      	mov	r3, r0
 8003d90:	b25a      	sxtb	r2, r3
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	729a      	strb	r2, [r3, #10]
 8003d96:	210b      	movs	r1, #11
 8003d98:	6838      	ldr	r0, [r7, #0]
 8003d9a:	f7ff ff6d 	bl	8003c78 <ucg_font_get_byte>
 8003d9e:	4603      	mov	r3, r0
 8003da0:	b25a      	sxtb	r2, r3
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	72da      	strb	r2, [r3, #11]
 8003da6:	210c      	movs	r1, #12
 8003da8:	6838      	ldr	r0, [r7, #0]
 8003daa:	f7ff ff65 	bl	8003c78 <ucg_font_get_byte>
 8003dae:	4603      	mov	r3, r0
 8003db0:	b25a      	sxtb	r2, r3
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	731a      	strb	r2, [r3, #12]
 8003db6:	210d      	movs	r1, #13
 8003db8:	6838      	ldr	r0, [r7, #0]
 8003dba:	f7ff ff5d 	bl	8003c78 <ucg_font_get_byte>
 8003dbe:	4603      	mov	r3, r0
 8003dc0:	b25a      	sxtb	r2, r3
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	735a      	strb	r2, [r3, #13]
 8003dc6:	210e      	movs	r1, #14
 8003dc8:	6838      	ldr	r0, [r7, #0]
 8003dca:	f7ff ff55 	bl	8003c78 <ucg_font_get_byte>
 8003dce:	4603      	mov	r3, r0
 8003dd0:	b25a      	sxtb	r2, r3
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	739a      	strb	r2, [r3, #14]
 8003dd6:	210f      	movs	r1, #15
 8003dd8:	6838      	ldr	r0, [r7, #0]
 8003dda:	f7ff ff4d 	bl	8003c78 <ucg_font_get_byte>
 8003dde:	4603      	mov	r3, r0
 8003de0:	b25a      	sxtb	r2, r3
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	73da      	strb	r2, [r3, #15]
 8003de6:	2110      	movs	r1, #16
 8003de8:	6838      	ldr	r0, [r7, #0]
 8003dea:	f7ff ff45 	bl	8003c78 <ucg_font_get_byte>
 8003dee:	4603      	mov	r3, r0
 8003df0:	b25a      	sxtb	r2, r3
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	741a      	strb	r2, [r3, #16]
 8003df6:	2111      	movs	r1, #17
 8003df8:	6838      	ldr	r0, [r7, #0]
 8003dfa:	f7ff ff4f 	bl	8003c9c <ucg_font_get_word>
 8003dfe:	4603      	mov	r3, r0
 8003e00:	461a      	mov	r2, r3
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	825a      	strh	r2, [r3, #18]
 8003e06:	2113      	movs	r1, #19
 8003e08:	6838      	ldr	r0, [r7, #0]
 8003e0a:	f7ff ff47 	bl	8003c9c <ucg_font_get_word>
 8003e0e:	4603      	mov	r3, r0
 8003e10:	461a      	mov	r2, r3
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	829a      	strh	r2, [r3, #20]
 8003e16:	bf00      	nop
 8003e18:	3708      	adds	r7, #8
 8003e1a:	46bd      	mov	sp, r7
 8003e1c:	bd80      	pop	{r7, pc}

08003e1e <ucg_font_decode_get_unsigned_bits>:
 8003e1e:	b480      	push	{r7}
 8003e20:	b085      	sub	sp, #20
 8003e22:	af00      	add	r7, sp, #0
 8003e24:	6078      	str	r0, [r7, #4]
 8003e26:	460b      	mov	r3, r1
 8003e28:	70fb      	strb	r3, [r7, #3]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	7b1b      	ldrb	r3, [r3, #12]
 8003e2e:	737b      	strb	r3, [r7, #13]
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	781b      	ldrb	r3, [r3, #0]
 8003e36:	73fb      	strb	r3, [r7, #15]
 8003e38:	7bfa      	ldrb	r2, [r7, #15]
 8003e3a:	7b7b      	ldrb	r3, [r7, #13]
 8003e3c:	fa42 f303 	asr.w	r3, r2, r3
 8003e40:	73fb      	strb	r3, [r7, #15]
 8003e42:	7b7b      	ldrb	r3, [r7, #13]
 8003e44:	73bb      	strb	r3, [r7, #14]
 8003e46:	7bba      	ldrb	r2, [r7, #14]
 8003e48:	78fb      	ldrb	r3, [r7, #3]
 8003e4a:	4413      	add	r3, r2
 8003e4c:	73bb      	strb	r3, [r7, #14]
 8003e4e:	7bbb      	ldrb	r3, [r7, #14]
 8003e50:	2b07      	cmp	r3, #7
 8003e52:	d91a      	bls.n	8003e8a <ucg_font_decode_get_unsigned_bits+0x6c>
 8003e54:	2308      	movs	r3, #8
 8003e56:	733b      	strb	r3, [r7, #12]
 8003e58:	7b3a      	ldrb	r2, [r7, #12]
 8003e5a:	7b7b      	ldrb	r3, [r7, #13]
 8003e5c:	1ad3      	subs	r3, r2, r3
 8003e5e:	733b      	strb	r3, [r7, #12]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	1c5a      	adds	r2, r3, #1
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	601a      	str	r2, [r3, #0]
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	781b      	ldrb	r3, [r3, #0]
 8003e70:	461a      	mov	r2, r3
 8003e72:	7b3b      	ldrb	r3, [r7, #12]
 8003e74:	fa02 f303 	lsl.w	r3, r2, r3
 8003e78:	b25a      	sxtb	r2, r3
 8003e7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003e7e:	4313      	orrs	r3, r2
 8003e80:	b25b      	sxtb	r3, r3
 8003e82:	73fb      	strb	r3, [r7, #15]
 8003e84:	7bbb      	ldrb	r3, [r7, #14]
 8003e86:	3b08      	subs	r3, #8
 8003e88:	73bb      	strb	r3, [r7, #14]
 8003e8a:	78fb      	ldrb	r3, [r7, #3]
 8003e8c:	f04f 32ff 	mov.w	r2, #4294967295
 8003e90:	fa02 f303 	lsl.w	r3, r2, r3
 8003e94:	b2db      	uxtb	r3, r3
 8003e96:	43db      	mvns	r3, r3
 8003e98:	b2da      	uxtb	r2, r3
 8003e9a:	7bfb      	ldrb	r3, [r7, #15]
 8003e9c:	4013      	ands	r3, r2
 8003e9e:	73fb      	strb	r3, [r7, #15]
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	7bba      	ldrb	r2, [r7, #14]
 8003ea4:	731a      	strb	r2, [r3, #12]
 8003ea6:	7bfb      	ldrb	r3, [r7, #15]
 8003ea8:	4618      	mov	r0, r3
 8003eaa:	3714      	adds	r7, #20
 8003eac:	46bd      	mov	sp, r7
 8003eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb2:	4770      	bx	lr

08003eb4 <ucg_font_decode_get_signed_bits>:
 8003eb4:	b580      	push	{r7, lr}
 8003eb6:	b084      	sub	sp, #16
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	6078      	str	r0, [r7, #4]
 8003ebc:	460b      	mov	r3, r1
 8003ebe:	70fb      	strb	r3, [r7, #3]
 8003ec0:	78fb      	ldrb	r3, [r7, #3]
 8003ec2:	4619      	mov	r1, r3
 8003ec4:	6878      	ldr	r0, [r7, #4]
 8003ec6:	f7ff ffaa 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 8003eca:	4603      	mov	r3, r0
 8003ecc:	73fb      	strb	r3, [r7, #15]
 8003ece:	2301      	movs	r3, #1
 8003ed0:	73bb      	strb	r3, [r7, #14]
 8003ed2:	78fb      	ldrb	r3, [r7, #3]
 8003ed4:	3b01      	subs	r3, #1
 8003ed6:	70fb      	strb	r3, [r7, #3]
 8003ed8:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8003edc:	78fb      	ldrb	r3, [r7, #3]
 8003ede:	fa02 f303 	lsl.w	r3, r2, r3
 8003ee2:	73bb      	strb	r3, [r7, #14]
 8003ee4:	7bfa      	ldrb	r2, [r7, #15]
 8003ee6:	7bbb      	ldrb	r3, [r7, #14]
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	b2db      	uxtb	r3, r3
 8003eec:	73fb      	strb	r3, [r7, #15]
 8003eee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003ef2:	4618      	mov	r0, r3
 8003ef4:	3710      	adds	r7, #16
 8003ef6:	46bd      	mov	sp, r7
 8003ef8:	bd80      	pop	{r7, pc}

08003efa <ucg_add_vector_y>:
 8003efa:	b490      	push	{r4, r7}
 8003efc:	b082      	sub	sp, #8
 8003efe:	af00      	add	r7, sp, #0
 8003f00:	4604      	mov	r4, r0
 8003f02:	4608      	mov	r0, r1
 8003f04:	4611      	mov	r1, r2
 8003f06:	461a      	mov	r2, r3
 8003f08:	4623      	mov	r3, r4
 8003f0a:	80fb      	strh	r3, [r7, #6]
 8003f0c:	4603      	mov	r3, r0
 8003f0e:	717b      	strb	r3, [r7, #5]
 8003f10:	460b      	mov	r3, r1
 8003f12:	713b      	strb	r3, [r7, #4]
 8003f14:	4613      	mov	r3, r2
 8003f16:	70fb      	strb	r3, [r7, #3]
 8003f18:	78fb      	ldrb	r3, [r7, #3]
 8003f1a:	2b01      	cmp	r3, #1
 8003f1c:	d00b      	beq.n	8003f36 <ucg_add_vector_y+0x3c>
 8003f1e:	2b02      	cmp	r3, #2
 8003f20:	d011      	beq.n	8003f46 <ucg_add_vector_y+0x4c>
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d117      	bne.n	8003f56 <ucg_add_vector_y+0x5c>
 8003f26:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003f2a:	b29a      	uxth	r2, r3
 8003f2c:	88fb      	ldrh	r3, [r7, #6]
 8003f2e:	4413      	add	r3, r2
 8003f30:	b29b      	uxth	r3, r3
 8003f32:	80fb      	strh	r3, [r7, #6]
 8003f34:	e017      	b.n	8003f66 <ucg_add_vector_y+0x6c>
 8003f36:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003f3a:	b29a      	uxth	r2, r3
 8003f3c:	88fb      	ldrh	r3, [r7, #6]
 8003f3e:	4413      	add	r3, r2
 8003f40:	b29b      	uxth	r3, r3
 8003f42:	80fb      	strh	r3, [r7, #6]
 8003f44:	e00f      	b.n	8003f66 <ucg_add_vector_y+0x6c>
 8003f46:	88fa      	ldrh	r2, [r7, #6]
 8003f48:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003f4c:	b29b      	uxth	r3, r3
 8003f4e:	1ad3      	subs	r3, r2, r3
 8003f50:	b29b      	uxth	r3, r3
 8003f52:	80fb      	strh	r3, [r7, #6]
 8003f54:	e007      	b.n	8003f66 <ucg_add_vector_y+0x6c>
 8003f56:	88fa      	ldrh	r2, [r7, #6]
 8003f58:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003f5c:	b29b      	uxth	r3, r3
 8003f5e:	1ad3      	subs	r3, r2, r3
 8003f60:	b29b      	uxth	r3, r3
 8003f62:	80fb      	strh	r3, [r7, #6]
 8003f64:	bf00      	nop
 8003f66:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003f6a:	4618      	mov	r0, r3
 8003f6c:	3708      	adds	r7, #8
 8003f6e:	46bd      	mov	sp, r7
 8003f70:	bc90      	pop	{r4, r7}
 8003f72:	4770      	bx	lr

08003f74 <ucg_add_vector_x>:
 8003f74:	b490      	push	{r4, r7}
 8003f76:	b082      	sub	sp, #8
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	4604      	mov	r4, r0
 8003f7c:	4608      	mov	r0, r1
 8003f7e:	4611      	mov	r1, r2
 8003f80:	461a      	mov	r2, r3
 8003f82:	4623      	mov	r3, r4
 8003f84:	80fb      	strh	r3, [r7, #6]
 8003f86:	4603      	mov	r3, r0
 8003f88:	717b      	strb	r3, [r7, #5]
 8003f8a:	460b      	mov	r3, r1
 8003f8c:	713b      	strb	r3, [r7, #4]
 8003f8e:	4613      	mov	r3, r2
 8003f90:	70fb      	strb	r3, [r7, #3]
 8003f92:	78fb      	ldrb	r3, [r7, #3]
 8003f94:	2b01      	cmp	r3, #1
 8003f96:	d00b      	beq.n	8003fb0 <ucg_add_vector_x+0x3c>
 8003f98:	2b02      	cmp	r3, #2
 8003f9a:	d011      	beq.n	8003fc0 <ucg_add_vector_x+0x4c>
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	d117      	bne.n	8003fd0 <ucg_add_vector_x+0x5c>
 8003fa0:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003fa4:	b29a      	uxth	r2, r3
 8003fa6:	88fb      	ldrh	r3, [r7, #6]
 8003fa8:	4413      	add	r3, r2
 8003faa:	b29b      	uxth	r3, r3
 8003fac:	80fb      	strh	r3, [r7, #6]
 8003fae:	e017      	b.n	8003fe0 <ucg_add_vector_x+0x6c>
 8003fb0:	88fa      	ldrh	r2, [r7, #6]
 8003fb2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003fb6:	b29b      	uxth	r3, r3
 8003fb8:	1ad3      	subs	r3, r2, r3
 8003fba:	b29b      	uxth	r3, r3
 8003fbc:	80fb      	strh	r3, [r7, #6]
 8003fbe:	e00f      	b.n	8003fe0 <ucg_add_vector_x+0x6c>
 8003fc0:	88fa      	ldrh	r2, [r7, #6]
 8003fc2:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003fc6:	b29b      	uxth	r3, r3
 8003fc8:	1ad3      	subs	r3, r2, r3
 8003fca:	b29b      	uxth	r3, r3
 8003fcc:	80fb      	strh	r3, [r7, #6]
 8003fce:	e007      	b.n	8003fe0 <ucg_add_vector_x+0x6c>
 8003fd0:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003fd4:	b29a      	uxth	r2, r3
 8003fd6:	88fb      	ldrh	r3, [r7, #6]
 8003fd8:	4413      	add	r3, r2
 8003fda:	b29b      	uxth	r3, r3
 8003fdc:	80fb      	strh	r3, [r7, #6]
 8003fde:	bf00      	nop
 8003fe0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003fe4:	4618      	mov	r0, r3
 8003fe6:	3708      	adds	r7, #8
 8003fe8:	46bd      	mov	sp, r7
 8003fea:	bc90      	pop	{r4, r7}
 8003fec:	4770      	bx	lr

08003fee <ucg_font_decode_len>:
 8003fee:	b590      	push	{r4, r7, lr}
 8003ff0:	b089      	sub	sp, #36	@ 0x24
 8003ff2:	af02      	add	r7, sp, #8
 8003ff4:	6078      	str	r0, [r7, #4]
 8003ff6:	460b      	mov	r3, r1
 8003ff8:	70fb      	strb	r3, [r7, #3]
 8003ffa:	4613      	mov	r3, r2
 8003ffc:	70bb      	strb	r3, [r7, #2]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	3380      	adds	r3, #128	@ 0x80
 8004002:	613b      	str	r3, [r7, #16]
 8004004:	78fb      	ldrb	r3, [r7, #3]
 8004006:	75fb      	strb	r3, [r7, #23]
 8004008:	693b      	ldr	r3, [r7, #16]
 800400a:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800400e:	757b      	strb	r3, [r7, #21]
 8004010:	693b      	ldr	r3, [r7, #16]
 8004012:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8004016:	753b      	strb	r3, [r7, #20]
 8004018:	693b      	ldr	r3, [r7, #16]
 800401a:	f993 300a 	ldrsb.w	r3, [r3, #10]
 800401e:	73fb      	strb	r3, [r7, #15]
 8004020:	7bfa      	ldrb	r2, [r7, #15]
 8004022:	7d7b      	ldrb	r3, [r7, #21]
 8004024:	1ad3      	subs	r3, r2, r3
 8004026:	73fb      	strb	r3, [r7, #15]
 8004028:	7bfb      	ldrb	r3, [r7, #15]
 800402a:	75bb      	strb	r3, [r7, #22]
 800402c:	7dfa      	ldrb	r2, [r7, #23]
 800402e:	7bfb      	ldrb	r3, [r7, #15]
 8004030:	429a      	cmp	r2, r3
 8004032:	d201      	bcs.n	8004038 <ucg_font_decode_len+0x4a>
 8004034:	7dfb      	ldrb	r3, [r7, #23]
 8004036:	75bb      	strb	r3, [r7, #22]
 8004038:	693b      	ldr	r3, [r7, #16]
 800403a:	889b      	ldrh	r3, [r3, #4]
 800403c:	81bb      	strh	r3, [r7, #12]
 800403e:	693b      	ldr	r3, [r7, #16]
 8004040:	88db      	ldrh	r3, [r3, #6]
 8004042:	817b      	strh	r3, [r7, #10]
 8004044:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8004048:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800404c:	693b      	ldr	r3, [r7, #16]
 800404e:	7b9b      	ldrb	r3, [r3, #14]
 8004050:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8004054:	f7ff ff8e 	bl	8003f74 <ucg_add_vector_x>
 8004058:	4603      	mov	r3, r0
 800405a:	81bb      	strh	r3, [r7, #12]
 800405c:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8004060:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8004064:	693b      	ldr	r3, [r7, #16]
 8004066:	7b9b      	ldrb	r3, [r3, #14]
 8004068:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 800406c:	f7ff ff45 	bl	8003efa <ucg_add_vector_y>
 8004070:	4603      	mov	r3, r0
 8004072:	817b      	strh	r3, [r7, #10]
 8004074:	78bb      	ldrb	r3, [r7, #2]
 8004076:	2b00      	cmp	r3, #0
 8004078:	d011      	beq.n	800409e <ucg_font_decode_len+0xb0>
 800407a:	7dbb      	ldrb	r3, [r7, #22]
 800407c:	b21c      	sxth	r4, r3
 800407e:	693b      	ldr	r3, [r7, #16]
 8004080:	7b9b      	ldrb	r3, [r3, #14]
 8004082:	b21b      	sxth	r3, r3
 8004084:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8004088:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 800408c:	2200      	movs	r2, #0
 800408e:	9201      	str	r2, [sp, #4]
 8004090:	9300      	str	r3, [sp, #0]
 8004092:	4623      	mov	r3, r4
 8004094:	4602      	mov	r2, r0
 8004096:	6878      	ldr	r0, [r7, #4]
 8004098:	f000 fbc0 	bl	800481c <ucg_Draw90Line>
 800409c:	e014      	b.n	80040c8 <ucg_font_decode_len+0xda>
 800409e:	693b      	ldr	r3, [r7, #16]
 80040a0:	7b5b      	ldrb	r3, [r3, #13]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d110      	bne.n	80040c8 <ucg_font_decode_len+0xda>
 80040a6:	7dbb      	ldrb	r3, [r7, #22]
 80040a8:	b21c      	sxth	r4, r3
 80040aa:	693b      	ldr	r3, [r7, #16]
 80040ac:	7b9b      	ldrb	r3, [r3, #14]
 80040ae:	b21b      	sxth	r3, r3
 80040b0:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80040b4:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 80040b8:	2201      	movs	r2, #1
 80040ba:	9201      	str	r2, [sp, #4]
 80040bc:	9300      	str	r3, [sp, #0]
 80040be:	4623      	mov	r3, r4
 80040c0:	4602      	mov	r2, r0
 80040c2:	6878      	ldr	r0, [r7, #4]
 80040c4:	f000 fbaa 	bl	800481c <ucg_Draw90Line>
 80040c8:	7dfa      	ldrb	r2, [r7, #23]
 80040ca:	7bfb      	ldrb	r3, [r7, #15]
 80040cc:	429a      	cmp	r2, r3
 80040ce:	d309      	bcc.n	80040e4 <ucg_font_decode_len+0xf6>
 80040d0:	7dfa      	ldrb	r2, [r7, #23]
 80040d2:	7bfb      	ldrb	r3, [r7, #15]
 80040d4:	1ad3      	subs	r3, r2, r3
 80040d6:	75fb      	strb	r3, [r7, #23]
 80040d8:	2300      	movs	r3, #0
 80040da:	757b      	strb	r3, [r7, #21]
 80040dc:	7d3b      	ldrb	r3, [r7, #20]
 80040de:	3301      	adds	r3, #1
 80040e0:	753b      	strb	r3, [r7, #20]
 80040e2:	e799      	b.n	8004018 <ucg_font_decode_len+0x2a>
 80040e4:	bf00      	nop
 80040e6:	7d7a      	ldrb	r2, [r7, #21]
 80040e8:	7dfb      	ldrb	r3, [r7, #23]
 80040ea:	4413      	add	r3, r2
 80040ec:	757b      	strb	r3, [r7, #21]
 80040ee:	f997 2015 	ldrsb.w	r2, [r7, #21]
 80040f2:	693b      	ldr	r3, [r7, #16]
 80040f4:	721a      	strb	r2, [r3, #8]
 80040f6:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80040fa:	693b      	ldr	r3, [r7, #16]
 80040fc:	725a      	strb	r2, [r3, #9]
 80040fe:	bf00      	nop
 8004100:	371c      	adds	r7, #28
 8004102:	46bd      	mov	sp, r7
 8004104:	bd90      	pop	{r4, r7, pc}

08004106 <ucg_font_setup_decode>:
 8004106:	b580      	push	{r7, lr}
 8004108:	b084      	sub	sp, #16
 800410a:	af00      	add	r7, sp, #0
 800410c:	6078      	str	r0, [r7, #4]
 800410e:	6039      	str	r1, [r7, #0]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	3380      	adds	r3, #128	@ 0x80
 8004114:	60fb      	str	r3, [r7, #12]
 8004116:	68fb      	ldr	r3, [r7, #12]
 8004118:	683a      	ldr	r2, [r7, #0]
 800411a:	601a      	str	r2, [r3, #0]
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	2200      	movs	r2, #0
 8004120:	731a      	strb	r2, [r3, #12]
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	1c5a      	adds	r2, r3, #1
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	601a      	str	r2, [r3, #0]
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	1c5a      	adds	r2, r3, #1
 8004132:	68fb      	ldr	r3, [r7, #12]
 8004134:	601a      	str	r2, [r3, #0]
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	f893 3094 	ldrb.w	r3, [r3, #148]	@ 0x94
 800413c:	4619      	mov	r1, r3
 800413e:	68f8      	ldr	r0, [r7, #12]
 8004140:	f7ff fe6d 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 8004144:	4603      	mov	r3, r0
 8004146:	b25a      	sxtb	r2, r3
 8004148:	68fb      	ldr	r3, [r7, #12]
 800414a:	729a      	strb	r2, [r3, #10]
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	f893 3095 	ldrb.w	r3, [r3, #149]	@ 0x95
 8004152:	4619      	mov	r1, r3
 8004154:	68f8      	ldr	r0, [r7, #12]
 8004156:	f7ff fe62 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 800415a:	4603      	mov	r3, r0
 800415c:	b25a      	sxtb	r2, r3
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	72da      	strb	r2, [r3, #11]
 8004162:	bf00      	nop
 8004164:	3710      	adds	r7, #16
 8004166:	46bd      	mov	sp, r7
 8004168:	bd80      	pop	{r7, pc}

0800416a <ucg_font_decode_glyph>:
 800416a:	b580      	push	{r7, lr}
 800416c:	b084      	sub	sp, #16
 800416e:	af00      	add	r7, sp, #0
 8004170:	6078      	str	r0, [r7, #4]
 8004172:	6039      	str	r1, [r7, #0]
 8004174:	6839      	ldr	r1, [r7, #0]
 8004176:	6878      	ldr	r0, [r7, #4]
 8004178:	f7ff ffc5 	bl	8004106 <ucg_font_setup_decode>
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	f893 308b 	ldrb.w	r3, [r3, #139]	@ 0x8b
 8004182:	73fb      	strb	r3, [r7, #15]
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	f893 3096 	ldrb.w	r3, [r3, #150]	@ 0x96
 8004190:	4619      	mov	r1, r3
 8004192:	4610      	mov	r0, r2
 8004194:	f7ff fe8e 	bl	8003eb4 <ucg_font_decode_get_signed_bits>
 8004198:	4603      	mov	r3, r0
 800419a:	73bb      	strb	r3, [r7, #14]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	f893 3097 	ldrb.w	r3, [r3, #151]	@ 0x97
 80041a8:	4619      	mov	r1, r3
 80041aa:	4610      	mov	r0, r2
 80041ac:	f7ff fe82 	bl	8003eb4 <ucg_font_decode_get_signed_bits>
 80041b0:	4603      	mov	r3, r0
 80041b2:	737b      	strb	r3, [r7, #13]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	f893 3098 	ldrb.w	r3, [r3, #152]	@ 0x98
 80041c0:	4619      	mov	r1, r3
 80041c2:	4610      	mov	r0, r2
 80041c4:	f7ff fe76 	bl	8003eb4 <ucg_font_decode_get_signed_bits>
 80041c8:	4603      	mov	r3, r0
 80041ca:	733b      	strb	r3, [r7, #12]
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	f993 308a 	ldrsb.w	r3, [r3, #138]	@ 0x8a
 80041d2:	2b00      	cmp	r3, #0
 80041d4:	dd69      	ble.n	80042aa <ucg_font_decode_glyph+0x140>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	@ 0x84
 80041dc:	7bfa      	ldrb	r2, [r7, #15]
 80041de:	7b7b      	ldrb	r3, [r7, #13]
 80041e0:	4413      	add	r3, r2
 80041e2:	b2db      	uxtb	r3, r3
 80041e4:	425b      	negs	r3, r3
 80041e6:	b2db      	uxtb	r3, r3
 80041e8:	b25a      	sxtb	r2, r3
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 80041f0:	f997 100e 	ldrsb.w	r1, [r7, #14]
 80041f4:	f7ff febe 	bl	8003f74 <ucg_add_vector_x>
 80041f8:	4603      	mov	r3, r0
 80041fa:	461a      	mov	r2, r3
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	@ 0x86
 8004208:	7bfa      	ldrb	r2, [r7, #15]
 800420a:	7b7b      	ldrb	r3, [r7, #13]
 800420c:	4413      	add	r3, r2
 800420e:	b2db      	uxtb	r3, r3
 8004210:	425b      	negs	r3, r3
 8004212:	b2db      	uxtb	r3, r3
 8004214:	b25a      	sxtb	r2, r3
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 800421c:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8004220:	f7ff fe6b 	bl	8003efa <ucg_add_vector_y>
 8004224:	4603      	mov	r3, r0
 8004226:	461a      	mov	r2, r3
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	2200      	movs	r2, #0
 8004232:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	2200      	movs	r2, #0
 800423a:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	f893 3092 	ldrb.w	r3, [r3, #146]	@ 0x92
 800424a:	4619      	mov	r1, r3
 800424c:	4610      	mov	r0, r2
 800424e:	f7ff fde6 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 8004252:	4603      	mov	r3, r0
 8004254:	72fb      	strb	r3, [r7, #11]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	f893 3093 	ldrb.w	r3, [r3, #147]	@ 0x93
 8004262:	4619      	mov	r1, r3
 8004264:	4610      	mov	r0, r2
 8004266:	f7ff fdda 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 800426a:	4603      	mov	r3, r0
 800426c:	72bb      	strb	r3, [r7, #10]
 800426e:	7afb      	ldrb	r3, [r7, #11]
 8004270:	2200      	movs	r2, #0
 8004272:	4619      	mov	r1, r3
 8004274:	6878      	ldr	r0, [r7, #4]
 8004276:	f7ff feba 	bl	8003fee <ucg_font_decode_len>
 800427a:	7abb      	ldrb	r3, [r7, #10]
 800427c:	2201      	movs	r2, #1
 800427e:	4619      	mov	r1, r3
 8004280:	6878      	ldr	r0, [r7, #4]
 8004282:	f7ff feb4 	bl	8003fee <ucg_font_decode_len>
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	3380      	adds	r3, #128	@ 0x80
 800428a:	2101      	movs	r1, #1
 800428c:	4618      	mov	r0, r3
 800428e:	f7ff fdc6 	bl	8003e1e <ucg_font_decode_get_unsigned_bits>
 8004292:	4603      	mov	r3, r0
 8004294:	2b00      	cmp	r3, #0
 8004296:	d1ea      	bne.n	800426e <ucg_font_decode_glyph+0x104>
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	f993 3089 	ldrsb.w	r3, [r3, #137]	@ 0x89
 800429e:	f997 200f 	ldrsb.w	r2, [r7, #15]
 80042a2:	429a      	cmp	r2, r3
 80042a4:	dd00      	ble.n	80042a8 <ucg_font_decode_glyph+0x13e>
 80042a6:	e7ca      	b.n	800423e <ucg_font_decode_glyph+0xd4>
 80042a8:	bf00      	nop
 80042aa:	f997 300c 	ldrsb.w	r3, [r7, #12]
 80042ae:	4618      	mov	r0, r3
 80042b0:	3710      	adds	r7, #16
 80042b2:	46bd      	mov	sp, r7
 80042b4:	bd80      	pop	{r7, pc}

080042b6 <ucg_font_get_glyph_data>:
 80042b6:	b480      	push	{r7}
 80042b8:	b085      	sub	sp, #20
 80042ba:	af00      	add	r7, sp, #0
 80042bc:	6078      	str	r0, [r7, #4]
 80042be:	460b      	mov	r3, r1
 80042c0:	70fb      	strb	r3, [r7, #3]
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80042c6:	60fb      	str	r3, [r7, #12]
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	3315      	adds	r3, #21
 80042cc:	60fb      	str	r3, [r7, #12]
 80042ce:	78fb      	ldrb	r3, [r7, #3]
 80042d0:	2b60      	cmp	r3, #96	@ 0x60
 80042d2:	d907      	bls.n	80042e4 <ucg_font_get_glyph_data+0x2e>
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	@ 0xa4
 80042da:	461a      	mov	r2, r3
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	4413      	add	r3, r2
 80042e0:	60fb      	str	r3, [r7, #12]
 80042e2:	e009      	b.n	80042f8 <ucg_font_get_glyph_data+0x42>
 80042e4:	78fb      	ldrb	r3, [r7, #3]
 80042e6:	2b40      	cmp	r3, #64	@ 0x40
 80042e8:	d906      	bls.n	80042f8 <ucg_font_get_glyph_data+0x42>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	@ 0xa2
 80042f0:	461a      	mov	r2, r3
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	4413      	add	r3, r2
 80042f6:	60fb      	str	r3, [r7, #12]
 80042f8:	68fb      	ldr	r3, [r7, #12]
 80042fa:	3301      	adds	r3, #1
 80042fc:	781b      	ldrb	r3, [r3, #0]
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d00e      	beq.n	8004320 <ucg_font_get_glyph_data+0x6a>
 8004302:	68fb      	ldr	r3, [r7, #12]
 8004304:	781b      	ldrb	r3, [r3, #0]
 8004306:	78fa      	ldrb	r2, [r7, #3]
 8004308:	429a      	cmp	r2, r3
 800430a:	d101      	bne.n	8004310 <ucg_font_get_glyph_data+0x5a>
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	e009      	b.n	8004324 <ucg_font_get_glyph_data+0x6e>
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	3301      	adds	r3, #1
 8004314:	781b      	ldrb	r3, [r3, #0]
 8004316:	461a      	mov	r2, r3
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	4413      	add	r3, r2
 800431c:	60fb      	str	r3, [r7, #12]
 800431e:	e7eb      	b.n	80042f8 <ucg_font_get_glyph_data+0x42>
 8004320:	bf00      	nop
 8004322:	2300      	movs	r3, #0
 8004324:	4618      	mov	r0, r3
 8004326:	3714      	adds	r7, #20
 8004328:	46bd      	mov	sp, r7
 800432a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432e:	4770      	bx	lr

08004330 <ucg_font_draw_glyph>:
 8004330:	b580      	push	{r7, lr}
 8004332:	b086      	sub	sp, #24
 8004334:	af00      	add	r7, sp, #0
 8004336:	60f8      	str	r0, [r7, #12]
 8004338:	4608      	mov	r0, r1
 800433a:	4611      	mov	r1, r2
 800433c:	461a      	mov	r2, r3
 800433e:	4603      	mov	r3, r0
 8004340:	817b      	strh	r3, [r7, #10]
 8004342:	460b      	mov	r3, r1
 8004344:	813b      	strh	r3, [r7, #8]
 8004346:	4613      	mov	r3, r2
 8004348:	71fb      	strb	r3, [r7, #7]
 800434a:	2300      	movs	r3, #0
 800434c:	82fb      	strh	r3, [r7, #22]
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	897a      	ldrh	r2, [r7, #10]
 8004352:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	893a      	ldrh	r2, [r7, #8]
 800435a:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	79fa      	ldrb	r2, [r7, #7]
 8004362:	f883 208e 	strb.w	r2, [r3, #142]	@ 0x8e
 8004366:	f897 3020 	ldrb.w	r3, [r7, #32]
 800436a:	4619      	mov	r1, r3
 800436c:	68f8      	ldr	r0, [r7, #12]
 800436e:	f7ff ffa2 	bl	80042b6 <ucg_font_get_glyph_data>
 8004372:	6138      	str	r0, [r7, #16]
 8004374:	693b      	ldr	r3, [r7, #16]
 8004376:	2b00      	cmp	r3, #0
 8004378:	d005      	beq.n	8004386 <ucg_font_draw_glyph+0x56>
 800437a:	6939      	ldr	r1, [r7, #16]
 800437c:	68f8      	ldr	r0, [r7, #12]
 800437e:	f7ff fef4 	bl	800416a <ucg_font_decode_glyph>
 8004382:	4603      	mov	r3, r0
 8004384:	82fb      	strh	r3, [r7, #22]
 8004386:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800438a:	4618      	mov	r0, r3
 800438c:	3718      	adds	r7, #24
 800438e:	46bd      	mov	sp, r7
 8004390:	bd80      	pop	{r7, pc}

08004392 <ucg_SetFontMode>:
 8004392:	b480      	push	{r7}
 8004394:	b083      	sub	sp, #12
 8004396:	af00      	add	r7, sp, #0
 8004398:	6078      	str	r0, [r7, #4]
 800439a:	460b      	mov	r3, r1
 800439c:	70fb      	strb	r3, [r7, #3]
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	78fa      	ldrb	r2, [r7, #3]
 80043a2:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 80043a6:	bf00      	nop
 80043a8:	370c      	adds	r7, #12
 80043aa:	46bd      	mov	sp, r7
 80043ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b0:	4770      	bx	lr
	...

080043b4 <ucg_DrawGlyph>:
 80043b4:	b580      	push	{r7, lr}
 80043b6:	b086      	sub	sp, #24
 80043b8:	af02      	add	r7, sp, #8
 80043ba:	60f8      	str	r0, [r7, #12]
 80043bc:	4608      	mov	r0, r1
 80043be:	4611      	mov	r1, r2
 80043c0:	461a      	mov	r2, r3
 80043c2:	4603      	mov	r3, r0
 80043c4:	817b      	strh	r3, [r7, #10]
 80043c6:	460b      	mov	r3, r1
 80043c8:	813b      	strh	r3, [r7, #8]
 80043ca:	4613      	mov	r3, r2
 80043cc:	71fb      	strb	r3, [r7, #7]
 80043ce:	79fb      	ldrb	r3, [r7, #7]
 80043d0:	2b03      	cmp	r3, #3
 80043d2:	d837      	bhi.n	8004444 <ucg_DrawGlyph+0x90>
 80043d4:	a201      	add	r2, pc, #4	@ (adr r2, 80043dc <ucg_DrawGlyph+0x28>)
 80043d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80043da:	bf00      	nop
 80043dc:	080043ed 	.word	0x080043ed
 80043e0:	08004403 	.word	0x08004403
 80043e4:	08004419 	.word	0x08004419
 80043e8:	0800442f 	.word	0x0800442f
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80043f0:	68f8      	ldr	r0, [r7, #12]
 80043f2:	4798      	blx	r3
 80043f4:	4603      	mov	r3, r0
 80043f6:	b29a      	uxth	r2, r3
 80043f8:	893b      	ldrh	r3, [r7, #8]
 80043fa:	4413      	add	r3, r2
 80043fc:	b29b      	uxth	r3, r3
 80043fe:	813b      	strh	r3, [r7, #8]
 8004400:	e020      	b.n	8004444 <ucg_DrawGlyph+0x90>
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004406:	68f8      	ldr	r0, [r7, #12]
 8004408:	4798      	blx	r3
 800440a:	4603      	mov	r3, r0
 800440c:	897a      	ldrh	r2, [r7, #10]
 800440e:	b29b      	uxth	r3, r3
 8004410:	1ad3      	subs	r3, r2, r3
 8004412:	b29b      	uxth	r3, r3
 8004414:	817b      	strh	r3, [r7, #10]
 8004416:	e015      	b.n	8004444 <ucg_DrawGlyph+0x90>
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800441c:	68f8      	ldr	r0, [r7, #12]
 800441e:	4798      	blx	r3
 8004420:	4603      	mov	r3, r0
 8004422:	893a      	ldrh	r2, [r7, #8]
 8004424:	b29b      	uxth	r3, r3
 8004426:	1ad3      	subs	r3, r2, r3
 8004428:	b29b      	uxth	r3, r3
 800442a:	813b      	strh	r3, [r7, #8]
 800442c:	e00a      	b.n	8004444 <ucg_DrawGlyph+0x90>
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004432:	68f8      	ldr	r0, [r7, #12]
 8004434:	4798      	blx	r3
 8004436:	4603      	mov	r3, r0
 8004438:	b29a      	uxth	r2, r3
 800443a:	897b      	ldrh	r3, [r7, #10]
 800443c:	4413      	add	r3, r2
 800443e:	b29b      	uxth	r3, r3
 8004440:	817b      	strh	r3, [r7, #10]
 8004442:	bf00      	nop
 8004444:	79f8      	ldrb	r0, [r7, #7]
 8004446:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800444a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800444e:	7e3b      	ldrb	r3, [r7, #24]
 8004450:	9300      	str	r3, [sp, #0]
 8004452:	4603      	mov	r3, r0
 8004454:	68f8      	ldr	r0, [r7, #12]
 8004456:	f7ff ff6b 	bl	8004330 <ucg_font_draw_glyph>
 800445a:	4603      	mov	r3, r0
 800445c:	4618      	mov	r0, r3
 800445e:	3710      	adds	r7, #16
 8004460:	46bd      	mov	sp, r7
 8004462:	bd80      	pop	{r7, pc}

08004464 <task_drawString>:
 8004464:	b580      	push	{r7, lr}
 8004466:	b086      	sub	sp, #24
 8004468:	af02      	add	r7, sp, #8
 800446a:	6078      	str	r0, [r7, #4]
 800446c:	2300      	movs	r3, #0
 800446e:	81fb      	strh	r3, [r7, #14]
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	60bb      	str	r3, [r7, #8]
 8004474:	4b45      	ldr	r3, [pc, #276]	@ (800458c <task_drawString+0x128>)
 8004476:	781b      	ldrb	r3, [r3, #0]
 8004478:	2b00      	cmp	r3, #0
 800447a:	d002      	beq.n	8004482 <task_drawString+0x1e>
 800447c:	2b01      	cmp	r3, #1
 800447e:	d01e      	beq.n	80044be <task_drawString+0x5a>
 8004480:	e07b      	b.n	800457a <task_drawString+0x116>
 8004482:	4843      	ldr	r0, [pc, #268]	@ (8004590 <task_drawString+0x12c>)
 8004484:	f000 fb5d 	bl	8004b42 <bufNumItems>
 8004488:	4603      	mov	r3, r0
 800448a:	2b00      	cmp	r3, #0
 800448c:	d007      	beq.n	800449e <task_drawString+0x3a>
 800448e:	4941      	ldr	r1, [pc, #260]	@ (8004594 <task_drawString+0x130>)
 8004490:	483f      	ldr	r0, [pc, #252]	@ (8004590 <task_drawString+0x12c>)
 8004492:	f000 fbef 	bl	8004c74 <bufDeDat>
 8004496:	4b3d      	ldr	r3, [pc, #244]	@ (800458c <task_drawString+0x128>)
 8004498:	2201      	movs	r2, #1
 800449a:	701a      	strb	r2, [r3, #0]
 800449c:	e071      	b.n	8004582 <task_drawString+0x11e>
 800449e:	4b3e      	ldr	r3, [pc, #248]	@ (8004598 <task_drawString+0x134>)
 80044a0:	781b      	ldrb	r3, [r3, #0]
 80044a2:	2bff      	cmp	r3, #255	@ 0xff
 80044a4:	d007      	beq.n	80044b6 <task_drawString+0x52>
 80044a6:	4b3c      	ldr	r3, [pc, #240]	@ (8004598 <task_drawString+0x134>)
 80044a8:	781b      	ldrb	r3, [r3, #0]
 80044aa:	4618      	mov	r0, r3
 80044ac:	f7fe fd28 	bl	8002f00 <TimerStop>
 80044b0:	4b39      	ldr	r3, [pc, #228]	@ (8004598 <task_drawString+0x134>)
 80044b2:	22ff      	movs	r2, #255	@ 0xff
 80044b4:	701a      	strb	r2, [r3, #0]
 80044b6:	4b35      	ldr	r3, [pc, #212]	@ (800458c <task_drawString+0x128>)
 80044b8:	2200      	movs	r2, #0
 80044ba:	701a      	strb	r2, [r3, #0]
 80044bc:	e061      	b.n	8004582 <task_drawString+0x11e>
 80044be:	4b35      	ldr	r3, [pc, #212]	@ (8004594 <task_drawString+0x130>)
 80044c0:	689b      	ldr	r3, [r3, #8]
 80044c2:	781b      	ldrb	r3, [r3, #0]
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d054      	beq.n	8004572 <task_drawString+0x10e>
 80044c8:	4b32      	ldr	r3, [pc, #200]	@ (8004594 <task_drawString+0x130>)
 80044ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80044ce:	4b31      	ldr	r3, [pc, #196]	@ (8004594 <task_drawString+0x130>)
 80044d0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80044d4:	4b2f      	ldr	r3, [pc, #188]	@ (8004594 <task_drawString+0x130>)
 80044d6:	7918      	ldrb	r0, [r3, #4]
 80044d8:	4b2e      	ldr	r3, [pc, #184]	@ (8004594 <task_drawString+0x130>)
 80044da:	689b      	ldr	r3, [r3, #8]
 80044dc:	781b      	ldrb	r3, [r3, #0]
 80044de:	9300      	str	r3, [sp, #0]
 80044e0:	4603      	mov	r3, r0
 80044e2:	68b8      	ldr	r0, [r7, #8]
 80044e4:	f7ff ff66 	bl	80043b4 <ucg_DrawGlyph>
 80044e8:	4603      	mov	r3, r0
 80044ea:	81fb      	strh	r3, [r7, #14]
 80044ec:	4b29      	ldr	r3, [pc, #164]	@ (8004594 <task_drawString+0x130>)
 80044ee:	791b      	ldrb	r3, [r3, #4]
 80044f0:	2b03      	cmp	r3, #3
 80044f2:	d837      	bhi.n	8004564 <task_drawString+0x100>
 80044f4:	a201      	add	r2, pc, #4	@ (adr r2, 80044fc <task_drawString+0x98>)
 80044f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80044fa:	bf00      	nop
 80044fc:	0800450d 	.word	0x0800450d
 8004500:	08004523 	.word	0x08004523
 8004504:	08004539 	.word	0x08004539
 8004508:	0800454f 	.word	0x0800454f
 800450c:	4b21      	ldr	r3, [pc, #132]	@ (8004594 <task_drawString+0x130>)
 800450e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004512:	b29a      	uxth	r2, r3
 8004514:	89fb      	ldrh	r3, [r7, #14]
 8004516:	4413      	add	r3, r2
 8004518:	b29b      	uxth	r3, r3
 800451a:	b21a      	sxth	r2, r3
 800451c:	4b1d      	ldr	r3, [pc, #116]	@ (8004594 <task_drawString+0x130>)
 800451e:	801a      	strh	r2, [r3, #0]
 8004520:	e021      	b.n	8004566 <task_drawString+0x102>
 8004522:	4b1c      	ldr	r3, [pc, #112]	@ (8004594 <task_drawString+0x130>)
 8004524:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004528:	b29a      	uxth	r2, r3
 800452a:	89fb      	ldrh	r3, [r7, #14]
 800452c:	4413      	add	r3, r2
 800452e:	b29b      	uxth	r3, r3
 8004530:	b21a      	sxth	r2, r3
 8004532:	4b18      	ldr	r3, [pc, #96]	@ (8004594 <task_drawString+0x130>)
 8004534:	805a      	strh	r2, [r3, #2]
 8004536:	e016      	b.n	8004566 <task_drawString+0x102>
 8004538:	4b16      	ldr	r3, [pc, #88]	@ (8004594 <task_drawString+0x130>)
 800453a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800453e:	b29a      	uxth	r2, r3
 8004540:	89fb      	ldrh	r3, [r7, #14]
 8004542:	1ad3      	subs	r3, r2, r3
 8004544:	b29b      	uxth	r3, r3
 8004546:	b21a      	sxth	r2, r3
 8004548:	4b12      	ldr	r3, [pc, #72]	@ (8004594 <task_drawString+0x130>)
 800454a:	801a      	strh	r2, [r3, #0]
 800454c:	e00b      	b.n	8004566 <task_drawString+0x102>
 800454e:	4b11      	ldr	r3, [pc, #68]	@ (8004594 <task_drawString+0x130>)
 8004550:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004554:	b29a      	uxth	r2, r3
 8004556:	89fb      	ldrh	r3, [r7, #14]
 8004558:	1ad3      	subs	r3, r2, r3
 800455a:	b29b      	uxth	r3, r3
 800455c:	b21a      	sxth	r2, r3
 800455e:	4b0d      	ldr	r3, [pc, #52]	@ (8004594 <task_drawString+0x130>)
 8004560:	805a      	strh	r2, [r3, #2]
 8004562:	e000      	b.n	8004566 <task_drawString+0x102>
 8004564:	bf00      	nop
 8004566:	4b0b      	ldr	r3, [pc, #44]	@ (8004594 <task_drawString+0x130>)
 8004568:	689b      	ldr	r3, [r3, #8]
 800456a:	3301      	adds	r3, #1
 800456c:	4a09      	ldr	r2, [pc, #36]	@ (8004594 <task_drawString+0x130>)
 800456e:	6093      	str	r3, [r2, #8]
 8004570:	e007      	b.n	8004582 <task_drawString+0x11e>
 8004572:	4b06      	ldr	r3, [pc, #24]	@ (800458c <task_drawString+0x128>)
 8004574:	2200      	movs	r2, #0
 8004576:	701a      	strb	r2, [r3, #0]
 8004578:	e003      	b.n	8004582 <task_drawString+0x11e>
 800457a:	4b04      	ldr	r3, [pc, #16]	@ (800458c <task_drawString+0x128>)
 800457c:	2200      	movs	r2, #0
 800457e:	701a      	strb	r2, [r3, #0]
 8004580:	bf00      	nop
 8004582:	bf00      	nop
 8004584:	3710      	adds	r7, #16
 8004586:	46bd      	mov	sp, r7
 8004588:	bd80      	pop	{r7, pc}
 800458a:	bf00      	nop
 800458c:	20001414 	.word	0x20001414
 8004590:	20000404 	.word	0x20000404
 8004594:	20001560 	.word	0x20001560
 8004598:	20000078 	.word	0x20000078

0800459c <ucg_DrawString>:
 800459c:	b580      	push	{r7, lr}
 800459e:	b08a      	sub	sp, #40	@ 0x28
 80045a0:	af02      	add	r7, sp, #8
 80045a2:	60f8      	str	r0, [r7, #12]
 80045a4:	4608      	mov	r0, r1
 80045a6:	4611      	mov	r1, r2
 80045a8:	461a      	mov	r2, r3
 80045aa:	4603      	mov	r3, r0
 80045ac:	817b      	strh	r3, [r7, #10]
 80045ae:	460b      	mov	r3, r1
 80045b0:	813b      	strh	r3, [r7, #8]
 80045b2:	4613      	mov	r3, r2
 80045b4:	71fb      	strb	r3, [r7, #7]
 80045b6:	2300      	movs	r3, #0
 80045b8:	83fb      	strh	r3, [r7, #30]
 80045ba:	897b      	ldrh	r3, [r7, #10]
 80045bc:	823b      	strh	r3, [r7, #16]
 80045be:	893b      	ldrh	r3, [r7, #8]
 80045c0:	827b      	strh	r3, [r7, #18]
 80045c2:	79fb      	ldrb	r3, [r7, #7]
 80045c4:	753b      	strb	r3, [r7, #20]
 80045c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80045c8:	61bb      	str	r3, [r7, #24]
 80045ca:	f107 0310 	add.w	r3, r7, #16
 80045ce:	4619      	mov	r1, r3
 80045d0:	480c      	ldr	r0, [pc, #48]	@ (8004604 <ucg_DrawString+0x68>)
 80045d2:	f000 fb01 	bl	8004bd8 <bufEnDat>
 80045d6:	4b0c      	ldr	r3, [pc, #48]	@ (8004608 <ucg_DrawString+0x6c>)
 80045d8:	781b      	ldrb	r3, [r3, #0]
 80045da:	2bff      	cmp	r3, #255	@ 0xff
 80045dc:	d10b      	bne.n	80045f6 <ucg_DrawString+0x5a>
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	9300      	str	r3, [sp, #0]
 80045e2:	4b0a      	ldr	r3, [pc, #40]	@ (800460c <ucg_DrawString+0x70>)
 80045e4:	22ff      	movs	r2, #255	@ 0xff
 80045e6:	211e      	movs	r1, #30
 80045e8:	4809      	ldr	r0, [pc, #36]	@ (8004610 <ucg_DrawString+0x74>)
 80045ea:	f7fe fc27 	bl	8002e3c <TimerStart>
 80045ee:	4603      	mov	r3, r0
 80045f0:	461a      	mov	r2, r3
 80045f2:	4b05      	ldr	r3, [pc, #20]	@ (8004608 <ucg_DrawString+0x6c>)
 80045f4:	701a      	strb	r2, [r3, #0]
 80045f6:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80045fa:	4618      	mov	r0, r3
 80045fc:	3720      	adds	r7, #32
 80045fe:	46bd      	mov	sp, r7
 8004600:	bd80      	pop	{r7, pc}
 8004602:	bf00      	nop
 8004604:	20000404 	.word	0x20000404
 8004608:	20000078 	.word	0x20000078
 800460c:	08004465 	.word	0x08004465
 8004610:	0800636c 	.word	0x0800636c

08004614 <ucg_UpdateRefHeight>:
 8004614:	b480      	push	{r7}
 8004616:	b083      	sub	sp, #12
 8004618:	af00      	add	r7, sp, #0
 800461a:	6078      	str	r0, [r7, #4]
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8004620:	2b00      	cmp	r3, #0
 8004622:	d05d      	beq.n	80046e0 <ucg_UpdateRefHeight+0xcc>
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	f993 209d 	ldrsb.w	r2, [r3, #157]	@ 0x9d
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	f993 209e 	ldrsb.w	r2, [r3, #158]	@ 0x9e
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 8004642:	2b00      	cmp	r3, #0
 8004644:	d04d      	beq.n	80046e2 <ucg_UpdateRefHeight+0xce>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 800464c:	2b01      	cmp	r3, #1
 800464e:	d11c      	bne.n	800468a <ucg_UpdateRefHeight+0x76>
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	f993 20ac 	ldrsb.w	r2, [r3, #172]	@ 0xac
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	f993 309f 	ldrsb.w	r3, [r3, #159]	@ 0x9f
 800465c:	429a      	cmp	r2, r3
 800465e:	da05      	bge.n	800466c <ucg_UpdateRefHeight+0x58>
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	f993 209f 	ldrsb.w	r2, [r3, #159]	@ 0x9f
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	f993 30a0 	ldrsb.w	r3, [r3, #160]	@ 0xa0
 8004678:	429a      	cmp	r2, r3
 800467a:	dd32      	ble.n	80046e2 <ucg_UpdateRefHeight+0xce>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	f993 20a0 	ldrsb.w	r2, [r3, #160]	@ 0xa0
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004688:	e02b      	b.n	80046e2 <ucg_UpdateRefHeight+0xce>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	f993 30ac 	ldrsb.w	r3, [r3, #172]	@ 0xac
 8004690:	461a      	mov	r2, r3
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 8004698:	4619      	mov	r1, r3
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 80046a0:	440b      	add	r3, r1
 80046a2:	429a      	cmp	r2, r3
 80046a4:	da0d      	bge.n	80046c2 <ucg_UpdateRefHeight+0xae>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 80046ac:	b2da      	uxtb	r2, r3
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 80046b4:	b2db      	uxtb	r3, r3
 80046b6:	4413      	add	r3, r2
 80046b8:	b2db      	uxtb	r3, r3
 80046ba:	b25a      	sxtb	r2, r3
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 80046ce:	429a      	cmp	r2, r3
 80046d0:	dd07      	ble.n	80046e2 <ucg_UpdateRefHeight+0xce>
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	f993 209c 	ldrsb.w	r2, [r3, #156]	@ 0x9c
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 80046de:	e000      	b.n	80046e2 <ucg_UpdateRefHeight+0xce>
 80046e0:	bf00      	nop
 80046e2:	370c      	adds	r7, #12
 80046e4:	46bd      	mov	sp, r7
 80046e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046ea:	4770      	bx	lr

080046ec <ucg_font_calc_vref_font>:
 80046ec:	b480      	push	{r7}
 80046ee:	b083      	sub	sp, #12
 80046f0:	af00      	add	r7, sp, #0
 80046f2:	6078      	str	r0, [r7, #4]
 80046f4:	2300      	movs	r3, #0
 80046f6:	4618      	mov	r0, r3
 80046f8:	370c      	adds	r7, #12
 80046fa:	46bd      	mov	sp, r7
 80046fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004700:	4770      	bx	lr
	...

08004704 <ucg_SetFontPosBaseline>:
 8004704:	b480      	push	{r7}
 8004706:	b083      	sub	sp, #12
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	4a04      	ldr	r2, [pc, #16]	@ (8004720 <ucg_SetFontPosBaseline+0x1c>)
 8004710:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004712:	bf00      	nop
 8004714:	370c      	adds	r7, #12
 8004716:	46bd      	mov	sp, r7
 8004718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800471c:	4770      	bx	lr
 800471e:	bf00      	nop
 8004720:	080046ed 	.word	0x080046ed

08004724 <ucg_SetFont>:
 8004724:	b580      	push	{r7, lr}
 8004726:	b082      	sub	sp, #8
 8004728:	af00      	add	r7, sp, #0
 800472a:	6078      	str	r0, [r7, #4]
 800472c:	6039      	str	r1, [r7, #0]
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8004732:	683a      	ldr	r2, [r7, #0]
 8004734:	429a      	cmp	r2, r3
 8004736:	d012      	beq.n	800475e <ucg_SetFont+0x3a>
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	683a      	ldr	r2, [r7, #0]
 800473c:	679a      	str	r2, [r3, #120]	@ 0x78
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	3390      	adds	r3, #144	@ 0x90
 8004742:	6839      	ldr	r1, [r7, #0]
 8004744:	4618      	mov	r0, r3
 8004746:	f7ff fac9 	bl	8003cdc <ucg_read_font_info>
 800474a:	6878      	ldr	r0, [r7, #4]
 800474c:	f7ff ff62 	bl	8004614 <ucg_UpdateRefHeight>
 8004750:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004754:	220c      	movs	r2, #12
 8004756:	4904      	ldr	r1, [pc, #16]	@ (8004768 <ucg_SetFont+0x44>)
 8004758:	4804      	ldr	r0, [pc, #16]	@ (800476c <ucg_SetFont+0x48>)
 800475a:	f000 f9d7 	bl	8004b0c <bufInit>
 800475e:	bf00      	nop
 8004760:	3708      	adds	r7, #8
 8004762:	46bd      	mov	sp, r7
 8004764:	bd80      	pop	{r7, pc}
 8004766:	bf00      	nop
 8004768:	20000404 	.word	0x20000404
 800476c:	20000414 	.word	0x20000414

08004770 <ucg_init_struct>:
 8004770:	b480      	push	{r7}
 8004772:	b083      	sub	sp, #12
 8004774:	af00      	add	r7, sp, #0
 8004776:	6078      	str	r0, [r7, #4]
 8004778:	687a      	ldr	r2, [r7, #4]
 800477a:	7813      	ldrb	r3, [r2, #0]
 800477c:	f36f 0300 	bfc	r3, #0, #1
 8004780:	7013      	strb	r3, [r2, #0]
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	2200      	movs	r2, #0
 8004786:	611a      	str	r2, [r3, #16]
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	2201      	movs	r2, #1
 800478c:	865a      	strh	r2, [r3, #50]	@ 0x32
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2200      	movs	r2, #0
 8004792:	679a      	str	r2, [r3, #120]	@ 0x78
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	2201      	movs	r2, #1
 8004798:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	2200      	movs	r2, #0
 80047a0:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	2200      	movs	r2, #0
 80047a8:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	2200      	movs	r2, #0
 80047b0:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 80047b4:	bf00      	nop
 80047b6:	370c      	adds	r7, #12
 80047b8:	46bd      	mov	sp, r7
 80047ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047be:	4770      	bx	lr

080047c0 <ucg_Init>:
 80047c0:	b580      	push	{r7, lr}
 80047c2:	b086      	sub	sp, #24
 80047c4:	af00      	add	r7, sp, #0
 80047c6:	60f8      	str	r0, [r7, #12]
 80047c8:	60b9      	str	r1, [r7, #8]
 80047ca:	607a      	str	r2, [r7, #4]
 80047cc:	603b      	str	r3, [r7, #0]
 80047ce:	68f8      	ldr	r0, [r7, #12]
 80047d0:	f7ff ffce 	bl	8004770 <ucg_init_struct>
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	2b00      	cmp	r3, #0
 80047d8:	d103      	bne.n	80047e2 <ucg_Init+0x22>
 80047da:	68fb      	ldr	r3, [r7, #12]
 80047dc:	4a0e      	ldr	r2, [pc, #56]	@ (8004818 <ucg_Init+0x58>)
 80047de:	60da      	str	r2, [r3, #12]
 80047e0:	e002      	b.n	80047e8 <ucg_Init+0x28>
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	687a      	ldr	r2, [r7, #4]
 80047e6:	60da      	str	r2, [r3, #12]
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	68ba      	ldr	r2, [r7, #8]
 80047ec:	609a      	str	r2, [r3, #8]
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	683a      	ldr	r2, [r7, #0]
 80047f2:	61da      	str	r2, [r3, #28]
 80047f4:	68f8      	ldr	r0, [r7, #12]
 80047f6:	f7ff ff85 	bl	8004704 <ucg_SetFontPosBaseline>
 80047fa:	68f8      	ldr	r0, [r7, #12]
 80047fc:	f7ff f996 	bl	8003b2c <ucg_PowerUp>
 8004800:	4603      	mov	r3, r0
 8004802:	82fb      	strh	r3, [r7, #22]
 8004804:	68f8      	ldr	r0, [r7, #12]
 8004806:	f7ff f9d6 	bl	8003bb6 <ucg_GetDimension>
 800480a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800480e:	4618      	mov	r0, r3
 8004810:	3718      	adds	r7, #24
 8004812:	46bd      	mov	sp, r7
 8004814:	bd80      	pop	{r7, pc}
 8004816:	bf00      	nop
 8004818:	08003791 	.word	0x08003791

0800481c <ucg_Draw90Line>:
 800481c:	b580      	push	{r7, lr}
 800481e:	b084      	sub	sp, #16
 8004820:	af00      	add	r7, sp, #0
 8004822:	60f8      	str	r0, [r7, #12]
 8004824:	4608      	mov	r0, r1
 8004826:	4611      	mov	r1, r2
 8004828:	461a      	mov	r2, r3
 800482a:	4603      	mov	r3, r0
 800482c:	817b      	strh	r3, [r7, #10]
 800482e:	460b      	mov	r3, r1
 8004830:	813b      	strh	r3, [r7, #8]
 8004832:	4613      	mov	r3, r2
 8004834:	80fb      	strh	r3, [r7, #6]
 8004836:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800483a:	68f9      	ldr	r1, [r7, #12]
 800483c:	4613      	mov	r3, r2
 800483e:	005b      	lsls	r3, r3, #1
 8004840:	4413      	add	r3, r2
 8004842:	440b      	add	r3, r1
 8004844:	333a      	adds	r3, #58	@ 0x3a
 8004846:	781a      	ldrb	r2, [r3, #0]
 8004848:	68fb      	ldr	r3, [r7, #12]
 800484a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800484e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004852:	68f9      	ldr	r1, [r7, #12]
 8004854:	4613      	mov	r3, r2
 8004856:	005b      	lsls	r3, r3, #1
 8004858:	4413      	add	r3, r2
 800485a:	440b      	add	r3, r1
 800485c:	333b      	adds	r3, #59	@ 0x3b
 800485e:	781a      	ldrb	r2, [r3, #0]
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
 8004866:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800486a:	68f9      	ldr	r1, [r7, #12]
 800486c:	4613      	mov	r3, r2
 800486e:	005b      	lsls	r3, r3, #1
 8004870:	4413      	add	r3, r2
 8004872:	440b      	add	r3, r1
 8004874:	333c      	adds	r3, #60	@ 0x3c
 8004876:	781a      	ldrb	r2, [r3, #0]
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	f883 202a 	strb.w	r2, [r3, #42]	@ 0x2a
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	897a      	ldrh	r2, [r7, #10]
 8004882:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	893a      	ldrh	r2, [r7, #8]
 8004888:	84da      	strh	r2, [r3, #38]	@ 0x26
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	88fa      	ldrh	r2, [r7, #6]
 800488e:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004890:	68fb      	ldr	r3, [r7, #12]
 8004892:	8b3a      	ldrh	r2, [r7, #24]
 8004894:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004896:	68f8      	ldr	r0, [r7, #12]
 8004898:	f7ff f99f 	bl	8003bda <ucg_DrawL90FXWithArg>
 800489c:	bf00      	nop
 800489e:	3710      	adds	r7, #16
 80048a0:	46bd      	mov	sp, r7
 80048a2:	bd80      	pop	{r7, pc}

080048a4 <ucg_DrawHLine>:
 80048a4:	b580      	push	{r7, lr}
 80048a6:	b086      	sub	sp, #24
 80048a8:	af02      	add	r7, sp, #8
 80048aa:	60f8      	str	r0, [r7, #12]
 80048ac:	4608      	mov	r0, r1
 80048ae:	4611      	mov	r1, r2
 80048b0:	461a      	mov	r2, r3
 80048b2:	4603      	mov	r3, r0
 80048b4:	817b      	strh	r3, [r7, #10]
 80048b6:	460b      	mov	r3, r1
 80048b8:	813b      	strh	r3, [r7, #8]
 80048ba:	4613      	mov	r3, r2
 80048bc:	80fb      	strh	r3, [r7, #6]
 80048be:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80048c2:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80048c6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80048ca:	2300      	movs	r3, #0
 80048cc:	9301      	str	r3, [sp, #4]
 80048ce:	2300      	movs	r3, #0
 80048d0:	9300      	str	r3, [sp, #0]
 80048d2:	4603      	mov	r3, r0
 80048d4:	68f8      	ldr	r0, [r7, #12]
 80048d6:	f7ff ffa1 	bl	800481c <ucg_Draw90Line>
 80048da:	bf00      	nop
 80048dc:	3710      	adds	r7, #16
 80048de:	46bd      	mov	sp, r7
 80048e0:	bd80      	pop	{r7, pc}

080048e2 <ucg_SetColor>:
 80048e2:	b480      	push	{r7}
 80048e4:	b083      	sub	sp, #12
 80048e6:	af00      	add	r7, sp, #0
 80048e8:	6078      	str	r0, [r7, #4]
 80048ea:	4608      	mov	r0, r1
 80048ec:	4611      	mov	r1, r2
 80048ee:	461a      	mov	r2, r3
 80048f0:	4603      	mov	r3, r0
 80048f2:	70fb      	strb	r3, [r7, #3]
 80048f4:	460b      	mov	r3, r1
 80048f6:	70bb      	strb	r3, [r7, #2]
 80048f8:	4613      	mov	r3, r2
 80048fa:	707b      	strb	r3, [r7, #1]
 80048fc:	78fa      	ldrb	r2, [r7, #3]
 80048fe:	6879      	ldr	r1, [r7, #4]
 8004900:	4613      	mov	r3, r2
 8004902:	005b      	lsls	r3, r3, #1
 8004904:	4413      	add	r3, r2
 8004906:	440b      	add	r3, r1
 8004908:	333a      	adds	r3, #58	@ 0x3a
 800490a:	78ba      	ldrb	r2, [r7, #2]
 800490c:	701a      	strb	r2, [r3, #0]
 800490e:	78fa      	ldrb	r2, [r7, #3]
 8004910:	6879      	ldr	r1, [r7, #4]
 8004912:	4613      	mov	r3, r2
 8004914:	005b      	lsls	r3, r3, #1
 8004916:	4413      	add	r3, r2
 8004918:	440b      	add	r3, r1
 800491a:	333b      	adds	r3, #59	@ 0x3b
 800491c:	787a      	ldrb	r2, [r7, #1]
 800491e:	701a      	strb	r2, [r3, #0]
 8004920:	78fa      	ldrb	r2, [r7, #3]
 8004922:	6879      	ldr	r1, [r7, #4]
 8004924:	4613      	mov	r3, r2
 8004926:	005b      	lsls	r3, r3, #1
 8004928:	4413      	add	r3, r2
 800492a:	440b      	add	r3, r1
 800492c:	333c      	adds	r3, #60	@ 0x3c
 800492e:	7c3a      	ldrb	r2, [r7, #16]
 8004930:	701a      	strb	r2, [r3, #0]
 8004932:	bf00      	nop
 8004934:	370c      	adds	r7, #12
 8004936:	46bd      	mov	sp, r7
 8004938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493c:	4770      	bx	lr

0800493e <ucg_UndoRotate>:
 800493e:	b580      	push	{r7, lr}
 8004940:	b082      	sub	sp, #8
 8004942:	af00      	add	r7, sp, #0
 8004944:	6078      	str	r0, [r7, #4]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	691b      	ldr	r3, [r3, #16]
 800494a:	2b00      	cmp	r3, #0
 800494c:	d006      	beq.n	800495c <ucg_UndoRotate+0x1e>
 800494e:	687b      	ldr	r3, [r7, #4]
 8004950:	691a      	ldr	r2, [r3, #16]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	609a      	str	r2, [r3, #8]
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	2200      	movs	r2, #0
 800495a:	611a      	str	r2, [r3, #16]
 800495c:	6878      	ldr	r0, [r7, #4]
 800495e:	f7ff f92a 	bl	8003bb6 <ucg_GetDimension>
 8004962:	6878      	ldr	r0, [r7, #4]
 8004964:	f7ff f90f 	bl	8003b86 <ucg_SetMaxClipRange>
 8004968:	bf00      	nop
 800496a:	3708      	adds	r7, #8
 800496c:	46bd      	mov	sp, r7
 800496e:	bd80      	pop	{r7, pc}

08004970 <ucg_rotate_180_xy>:
 8004970:	b480      	push	{r7}
 8004972:	b085      	sub	sp, #20
 8004974:	af00      	add	r7, sp, #0
 8004976:	6078      	str	r0, [r7, #4]
 8004978:	6039      	str	r1, [r7, #0]
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	8adb      	ldrh	r3, [r3, #22]
 800497e:	81fb      	strh	r3, [r7, #14]
 8004980:	89fa      	ldrh	r2, [r7, #14]
 8004982:	683b      	ldr	r3, [r7, #0]
 8004984:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004988:	b29b      	uxth	r3, r3
 800498a:	1ad3      	subs	r3, r2, r3
 800498c:	b29b      	uxth	r3, r3
 800498e:	81fb      	strh	r3, [r7, #14]
 8004990:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004994:	b29b      	uxth	r3, r3
 8004996:	3b01      	subs	r3, #1
 8004998:	b29b      	uxth	r3, r3
 800499a:	81fb      	strh	r3, [r7, #14]
 800499c:	683b      	ldr	r3, [r7, #0]
 800499e:	89fa      	ldrh	r2, [r7, #14]
 80049a0:	805a      	strh	r2, [r3, #2]
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	8a9b      	ldrh	r3, [r3, #20]
 80049a6:	81bb      	strh	r3, [r7, #12]
 80049a8:	89ba      	ldrh	r2, [r7, #12]
 80049aa:	683b      	ldr	r3, [r7, #0]
 80049ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80049b0:	b29b      	uxth	r3, r3
 80049b2:	1ad3      	subs	r3, r2, r3
 80049b4:	b29b      	uxth	r3, r3
 80049b6:	81bb      	strh	r3, [r7, #12]
 80049b8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80049bc:	b29b      	uxth	r3, r3
 80049be:	3b01      	subs	r3, #1
 80049c0:	b29b      	uxth	r3, r3
 80049c2:	81bb      	strh	r3, [r7, #12]
 80049c4:	683b      	ldr	r3, [r7, #0]
 80049c6:	89ba      	ldrh	r2, [r7, #12]
 80049c8:	801a      	strh	r2, [r3, #0]
 80049ca:	bf00      	nop
 80049cc:	3714      	adds	r7, #20
 80049ce:	46bd      	mov	sp, r7
 80049d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d4:	4770      	bx	lr
	...

080049d8 <ucg_dev_rotate180>:
 80049d8:	b580      	push	{r7, lr}
 80049da:	b084      	sub	sp, #16
 80049dc:	af00      	add	r7, sp, #0
 80049de:	60f8      	str	r0, [r7, #12]
 80049e0:	460b      	mov	r3, r1
 80049e2:	607a      	str	r2, [r7, #4]
 80049e4:	817b      	strh	r3, [r7, #10]
 80049e6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80049ea:	3b0c      	subs	r3, #12
 80049ec:	2b0b      	cmp	r3, #11
 80049ee:	d866      	bhi.n	8004abe <ucg_dev_rotate180+0xe6>
 80049f0:	a201      	add	r2, pc, #4	@ (adr r2, 80049f8 <ucg_dev_rotate180+0x20>)
 80049f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80049f6:	bf00      	nop
 80049f8:	08004a47 	.word	0x08004a47
 80049fc:	08004abf 	.word	0x08004abf
 8004a00:	08004abf 	.word	0x08004abf
 8004a04:	08004a29 	.word	0x08004a29
 8004a08:	08004abf 	.word	0x08004abf
 8004a0c:	08004abf 	.word	0x08004abf
 8004a10:	08004abf 	.word	0x08004abf
 8004a14:	08004abf 	.word	0x08004abf
 8004a18:	08004a8f 	.word	0x08004a8f
 8004a1c:	08004a8f 	.word	0x08004a8f
 8004a20:	08004abf 	.word	0x08004abf
 8004a24:	08004a8f 	.word	0x08004a8f
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	691b      	ldr	r3, [r3, #16]
 8004a2c:	68fa      	ldr	r2, [r7, #12]
 8004a2e:	3214      	adds	r2, #20
 8004a30:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004a34:	68f8      	ldr	r0, [r7, #12]
 8004a36:	4798      	blx	r3
 8004a38:	687a      	ldr	r2, [r7, #4]
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	3314      	adds	r3, #20
 8004a3e:	6818      	ldr	r0, [r3, #0]
 8004a40:	6010      	str	r0, [r2, #0]
 8004a42:	2301      	movs	r3, #1
 8004a44:	e043      	b.n	8004ace <ucg_dev_rotate180+0xf6>
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004a4c:	b29a      	uxth	r2, r3
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8004a54:	b29b      	uxth	r3, r3
 8004a56:	4413      	add	r3, r2
 8004a58:	b29b      	uxth	r3, r3
 8004a5a:	3b01      	subs	r3, #1
 8004a5c:	b29b      	uxth	r3, r3
 8004a5e:	b21a      	sxth	r2, r3
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	805a      	strh	r2, [r3, #2]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004a6a:	b29a      	uxth	r2, r3
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8004a72:	b29b      	uxth	r3, r3
 8004a74:	4413      	add	r3, r2
 8004a76:	b29b      	uxth	r3, r3
 8004a78:	3b01      	subs	r3, #1
 8004a7a:	b29b      	uxth	r3, r3
 8004a7c:	b21a      	sxth	r2, r3
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	801a      	strh	r2, [r3, #0]
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	4619      	mov	r1, r3
 8004a86:	68f8      	ldr	r0, [r7, #12]
 8004a88:	f7ff ff72 	bl	8004970 <ucg_rotate_180_xy>
 8004a8c:	e017      	b.n	8004abe <ucg_dev_rotate180+0xe6>
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004a94:	b29b      	uxth	r3, r3
 8004a96:	3302      	adds	r3, #2
 8004a98:	b29b      	uxth	r3, r3
 8004a9a:	b21a      	sxth	r2, r3
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004aa6:	f003 0303 	and.w	r3, r3, #3
 8004aaa:	b21a      	sxth	r2, r3
 8004aac:	68fb      	ldr	r3, [r7, #12]
 8004aae:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004ab0:	68fb      	ldr	r3, [r7, #12]
 8004ab2:	3324      	adds	r3, #36	@ 0x24
 8004ab4:	4619      	mov	r1, r3
 8004ab6:	68f8      	ldr	r0, [r7, #12]
 8004ab8:	f7ff ff5a 	bl	8004970 <ucg_rotate_180_xy>
 8004abc:	bf00      	nop
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	691b      	ldr	r3, [r3, #16]
 8004ac2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004ac6:	687a      	ldr	r2, [r7, #4]
 8004ac8:	68f8      	ldr	r0, [r7, #12]
 8004aca:	4798      	blx	r3
 8004acc:	4603      	mov	r3, r0
 8004ace:	4618      	mov	r0, r3
 8004ad0:	3710      	adds	r7, #16
 8004ad2:	46bd      	mov	sp, r7
 8004ad4:	bd80      	pop	{r7, pc}
 8004ad6:	bf00      	nop

08004ad8 <ucg_SetRotate180>:
 8004ad8:	b580      	push	{r7, lr}
 8004ada:	b082      	sub	sp, #8
 8004adc:	af00      	add	r7, sp, #0
 8004ade:	6078      	str	r0, [r7, #4]
 8004ae0:	6878      	ldr	r0, [r7, #4]
 8004ae2:	f7ff ff2c 	bl	800493e <ucg_UndoRotate>
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	689a      	ldr	r2, [r3, #8]
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	611a      	str	r2, [r3, #16]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	4a05      	ldr	r2, [pc, #20]	@ (8004b08 <ucg_SetRotate180+0x30>)
 8004af2:	609a      	str	r2, [r3, #8]
 8004af4:	6878      	ldr	r0, [r7, #4]
 8004af6:	f7ff f85e 	bl	8003bb6 <ucg_GetDimension>
 8004afa:	6878      	ldr	r0, [r7, #4]
 8004afc:	f7ff f843 	bl	8003b86 <ucg_SetMaxClipRange>
 8004b00:	bf00      	nop
 8004b02:	3708      	adds	r7, #8
 8004b04:	46bd      	mov	sp, r7
 8004b06:	bd80      	pop	{r7, pc}
 8004b08:	080049d9 	.word	0x080049d9

08004b0c <bufInit>:
 8004b0c:	b580      	push	{r7, lr}
 8004b0e:	b084      	sub	sp, #16
 8004b10:	af00      	add	r7, sp, #0
 8004b12:	60f8      	str	r0, [r7, #12]
 8004b14:	60b9      	str	r1, [r7, #8]
 8004b16:	4611      	mov	r1, r2
 8004b18:	461a      	mov	r2, r3
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	71fb      	strb	r3, [r7, #7]
 8004b1e:	4613      	mov	r3, r2
 8004b20:	80bb      	strh	r3, [r7, #4]
 8004b22:	68bb      	ldr	r3, [r7, #8]
 8004b24:	88ba      	ldrh	r2, [r7, #4]
 8004b26:	801a      	strh	r2, [r3, #0]
 8004b28:	68bb      	ldr	r3, [r7, #8]
 8004b2a:	79fa      	ldrb	r2, [r7, #7]
 8004b2c:	711a      	strb	r2, [r3, #4]
 8004b2e:	68bb      	ldr	r3, [r7, #8]
 8004b30:	68fa      	ldr	r2, [r7, #12]
 8004b32:	60da      	str	r2, [r3, #12]
 8004b34:	68b8      	ldr	r0, [r7, #8]
 8004b36:	f000 f836 	bl	8004ba6 <bufFlush>
 8004b3a:	bf00      	nop
 8004b3c:	3710      	adds	r7, #16
 8004b3e:	46bd      	mov	sp, r7
 8004b40:	bd80      	pop	{r7, pc}

08004b42 <bufNumItems>:
 8004b42:	b480      	push	{r7}
 8004b44:	b083      	sub	sp, #12
 8004b46:	af00      	add	r7, sp, #0
 8004b48:	6078      	str	r0, [r7, #4]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	885b      	ldrh	r3, [r3, #2]
 8004b4e:	4618      	mov	r0, r3
 8004b50:	370c      	adds	r7, #12
 8004b52:	46bd      	mov	sp, r7
 8004b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b58:	4770      	bx	lr

08004b5a <bufIsFull>:
 8004b5a:	b480      	push	{r7}
 8004b5c:	b083      	sub	sp, #12
 8004b5e:	af00      	add	r7, sp, #0
 8004b60:	6078      	str	r0, [r7, #4]
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	885a      	ldrh	r2, [r3, #2]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	881b      	ldrh	r3, [r3, #0]
 8004b6a:	429a      	cmp	r2, r3
 8004b6c:	bf2c      	ite	cs
 8004b6e:	2301      	movcs	r3, #1
 8004b70:	2300      	movcc	r3, #0
 8004b72:	b2db      	uxtb	r3, r3
 8004b74:	4618      	mov	r0, r3
 8004b76:	370c      	adds	r7, #12
 8004b78:	46bd      	mov	sp, r7
 8004b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b7e:	4770      	bx	lr

08004b80 <bufIsEmpty>:
 8004b80:	b480      	push	{r7}
 8004b82:	b083      	sub	sp, #12
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	6078      	str	r0, [r7, #4]
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	88da      	ldrh	r2, [r3, #6]
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	891b      	ldrh	r3, [r3, #8]
 8004b90:	429a      	cmp	r2, r3
 8004b92:	bf0c      	ite	eq
 8004b94:	2301      	moveq	r3, #1
 8004b96:	2300      	movne	r3, #0
 8004b98:	b2db      	uxtb	r3, r3
 8004b9a:	4618      	mov	r0, r3
 8004b9c:	370c      	adds	r7, #12
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ba4:	4770      	bx	lr

08004ba6 <bufFlush>:
 8004ba6:	b580      	push	{r7, lr}
 8004ba8:	b082      	sub	sp, #8
 8004baa:	af00      	add	r7, sp, #0
 8004bac:	6078      	str	r0, [r7, #4]
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	2200      	movs	r2, #0
 8004bb2:	80da      	strh	r2, [r3, #6]
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	2200      	movs	r2, #0
 8004bb8:	811a      	strh	r2, [r3, #8]
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	2200      	movs	r2, #0
 8004bbe:	805a      	strh	r2, [r3, #2]
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	68d8      	ldr	r0, [r3, #12]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	881b      	ldrh	r3, [r3, #0]
 8004bc8:	461a      	mov	r2, r3
 8004bca:	2100      	movs	r1, #0
 8004bcc:	f000 f894 	bl	8004cf8 <memsetl>
 8004bd0:	bf00      	nop
 8004bd2:	3708      	adds	r7, #8
 8004bd4:	46bd      	mov	sp, r7
 8004bd6:	bd80      	pop	{r7, pc}

08004bd8 <bufEnDat>:
 8004bd8:	b580      	push	{r7, lr}
 8004bda:	b084      	sub	sp, #16
 8004bdc:	af00      	add	r7, sp, #0
 8004bde:	6078      	str	r0, [r7, #4]
 8004be0:	6039      	str	r1, [r7, #0]
 8004be2:	b672      	cpsid	i
 8004be4:	2300      	movs	r3, #0
 8004be6:	73fb      	strb	r3, [r7, #15]
 8004be8:	e021      	b.n	8004c2e <bufEnDat+0x56>
 8004bea:	7bfb      	ldrb	r3, [r7, #15]
 8004bec:	683a      	ldr	r2, [r7, #0]
 8004bee:	441a      	add	r2, r3
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	68db      	ldr	r3, [r3, #12]
 8004bf4:	6879      	ldr	r1, [r7, #4]
 8004bf6:	88c9      	ldrh	r1, [r1, #6]
 8004bf8:	440b      	add	r3, r1
 8004bfa:	7812      	ldrb	r2, [r2, #0]
 8004bfc:	701a      	strb	r2, [r3, #0]
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	88db      	ldrh	r3, [r3, #6]
 8004c02:	3301      	adds	r3, #1
 8004c04:	b29b      	uxth	r3, r3
 8004c06:	b21a      	sxth	r2, r3
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	881b      	ldrh	r3, [r3, #0]
 8004c0c:	3b01      	subs	r3, #1
 8004c0e:	b29b      	uxth	r3, r3
 8004c10:	b21b      	sxth	r3, r3
 8004c12:	4013      	ands	r3, r2
 8004c14:	b21b      	sxth	r3, r3
 8004c16:	b29a      	uxth	r2, r3
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	80da      	strh	r2, [r3, #6]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	885b      	ldrh	r3, [r3, #2]
 8004c20:	3301      	adds	r3, #1
 8004c22:	b29a      	uxth	r2, r3
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	805a      	strh	r2, [r3, #2]
 8004c28:	7bfb      	ldrb	r3, [r7, #15]
 8004c2a:	3301      	adds	r3, #1
 8004c2c:	73fb      	strb	r3, [r7, #15]
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	791b      	ldrb	r3, [r3, #4]
 8004c32:	7bfa      	ldrb	r2, [r7, #15]
 8004c34:	429a      	cmp	r2, r3
 8004c36:	d3d8      	bcc.n	8004bea <bufEnDat+0x12>
 8004c38:	6878      	ldr	r0, [r7, #4]
 8004c3a:	f7ff ff8e 	bl	8004b5a <bufIsFull>
 8004c3e:	4603      	mov	r3, r0
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d011      	beq.n	8004c68 <bufEnDat+0x90>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	891a      	ldrh	r2, [r3, #8]
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	791b      	ldrb	r3, [r3, #4]
 8004c4c:	b29b      	uxth	r3, r3
 8004c4e:	4413      	add	r3, r2
 8004c50:	b29b      	uxth	r3, r3
 8004c52:	b21a      	sxth	r2, r3
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	881b      	ldrh	r3, [r3, #0]
 8004c58:	3b01      	subs	r3, #1
 8004c5a:	b29b      	uxth	r3, r3
 8004c5c:	b21b      	sxth	r3, r3
 8004c5e:	4013      	ands	r3, r2
 8004c60:	b21b      	sxth	r3, r3
 8004c62:	b29a      	uxth	r2, r3
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	811a      	strh	r2, [r3, #8]
 8004c68:	b662      	cpsie	i
 8004c6a:	2300      	movs	r3, #0
 8004c6c:	4618      	mov	r0, r3
 8004c6e:	3710      	adds	r7, #16
 8004c70:	46bd      	mov	sp, r7
 8004c72:	bd80      	pop	{r7, pc}

08004c74 <bufDeDat>:
 8004c74:	b580      	push	{r7, lr}
 8004c76:	b084      	sub	sp, #16
 8004c78:	af00      	add	r7, sp, #0
 8004c7a:	6078      	str	r0, [r7, #4]
 8004c7c:	6039      	str	r1, [r7, #0]
 8004c7e:	b672      	cpsid	i
 8004c80:	6878      	ldr	r0, [r7, #4]
 8004c82:	f7ff ff7d 	bl	8004b80 <bufIsEmpty>
 8004c86:	4603      	mov	r3, r0
 8004c88:	2b00      	cmp	r3, #0
 8004c8a:	d005      	beq.n	8004c98 <bufDeDat+0x24>
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	2200      	movs	r2, #0
 8004c90:	805a      	strh	r2, [r3, #2]
 8004c92:	b662      	cpsie	i
 8004c94:	2302      	movs	r3, #2
 8004c96:	e02b      	b.n	8004cf0 <bufDeDat+0x7c>
 8004c98:	2300      	movs	r3, #0
 8004c9a:	73fb      	strb	r3, [r7, #15]
 8004c9c:	e021      	b.n	8004ce2 <bufDeDat+0x6e>
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	68db      	ldr	r3, [r3, #12]
 8004ca2:	687a      	ldr	r2, [r7, #4]
 8004ca4:	8912      	ldrh	r2, [r2, #8]
 8004ca6:	441a      	add	r2, r3
 8004ca8:	7bfb      	ldrb	r3, [r7, #15]
 8004caa:	6839      	ldr	r1, [r7, #0]
 8004cac:	440b      	add	r3, r1
 8004cae:	7812      	ldrb	r2, [r2, #0]
 8004cb0:	701a      	strb	r2, [r3, #0]
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	891b      	ldrh	r3, [r3, #8]
 8004cb6:	3301      	adds	r3, #1
 8004cb8:	b29b      	uxth	r3, r3
 8004cba:	b21a      	sxth	r2, r3
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	881b      	ldrh	r3, [r3, #0]
 8004cc0:	3b01      	subs	r3, #1
 8004cc2:	b29b      	uxth	r3, r3
 8004cc4:	b21b      	sxth	r3, r3
 8004cc6:	4013      	ands	r3, r2
 8004cc8:	b21b      	sxth	r3, r3
 8004cca:	b29a      	uxth	r2, r3
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	811a      	strh	r2, [r3, #8]
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	885b      	ldrh	r3, [r3, #2]
 8004cd4:	3b01      	subs	r3, #1
 8004cd6:	b29a      	uxth	r2, r3
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	805a      	strh	r2, [r3, #2]
 8004cdc:	7bfb      	ldrb	r3, [r7, #15]
 8004cde:	3301      	adds	r3, #1
 8004ce0:	73fb      	strb	r3, [r7, #15]
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	791b      	ldrb	r3, [r3, #4]
 8004ce6:	7bfa      	ldrb	r2, [r7, #15]
 8004ce8:	429a      	cmp	r2, r3
 8004cea:	d3d8      	bcc.n	8004c9e <bufDeDat+0x2a>
 8004cec:	b662      	cpsie	i
 8004cee:	2300      	movs	r3, #0
 8004cf0:	4618      	mov	r0, r3
 8004cf2:	3710      	adds	r7, #16
 8004cf4:	46bd      	mov	sp, r7
 8004cf6:	bd80      	pop	{r7, pc}

08004cf8 <memsetl>:
 8004cf8:	b480      	push	{r7}
 8004cfa:	b083      	sub	sp, #12
 8004cfc:	af00      	add	r7, sp, #0
 8004cfe:	6078      	str	r0, [r7, #4]
 8004d00:	460b      	mov	r3, r1
 8004d02:	70fb      	strb	r3, [r7, #3]
 8004d04:	4613      	mov	r3, r2
 8004d06:	803b      	strh	r3, [r7, #0]
 8004d08:	e004      	b.n	8004d14 <memsetl+0x1c>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	1c5a      	adds	r2, r3, #1
 8004d0e:	607a      	str	r2, [r7, #4]
 8004d10:	78fa      	ldrb	r2, [r7, #3]
 8004d12:	701a      	strb	r2, [r3, #0]
 8004d14:	883b      	ldrh	r3, [r7, #0]
 8004d16:	1e5a      	subs	r2, r3, #1
 8004d18:	803a      	strh	r2, [r7, #0]
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d1f5      	bne.n	8004d0a <memsetl+0x12>
 8004d1e:	bf00      	nop
 8004d20:	370c      	adds	r7, #12
 8004d22:	46bd      	mov	sp, r7
 8004d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d28:	4770      	bx	lr

08004d2a <ucg_clip_is_x_visible>:
 8004d2a:	b480      	push	{r7}
 8004d2c:	b085      	sub	sp, #20
 8004d2e:	af00      	add	r7, sp, #0
 8004d30:	6078      	str	r0, [r7, #4]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8004d36:	81fb      	strh	r3, [r7, #14]
 8004d38:	89fa      	ldrh	r2, [r7, #14]
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 8004d40:	b29b      	uxth	r3, r3
 8004d42:	1ad3      	subs	r3, r2, r3
 8004d44:	b29b      	uxth	r3, r3
 8004d46:	81fb      	strh	r3, [r7, #14]
 8004d48:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	da01      	bge.n	8004d54 <ucg_clip_is_x_visible+0x2a>
 8004d50:	2300      	movs	r3, #0
 8004d52:	e009      	b.n	8004d68 <ucg_clip_is_x_visible+0x3e>
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8004d5a:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004d5e:	429a      	cmp	r2, r3
 8004d60:	db01      	blt.n	8004d66 <ucg_clip_is_x_visible+0x3c>
 8004d62:	2300      	movs	r3, #0
 8004d64:	e000      	b.n	8004d68 <ucg_clip_is_x_visible+0x3e>
 8004d66:	2301      	movs	r3, #1
 8004d68:	4618      	mov	r0, r3
 8004d6a:	3714      	adds	r7, #20
 8004d6c:	46bd      	mov	sp, r7
 8004d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d72:	4770      	bx	lr

08004d74 <ucg_clip_is_y_visible>:
 8004d74:	b480      	push	{r7}
 8004d76:	b085      	sub	sp, #20
 8004d78:	af00      	add	r7, sp, #0
 8004d7a:	6078      	str	r0, [r7, #4]
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004d80:	81fb      	strh	r3, [r7, #14]
 8004d82:	89fa      	ldrh	r2, [r7, #14]
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8004d8a:	b29b      	uxth	r3, r3
 8004d8c:	1ad3      	subs	r3, r2, r3
 8004d8e:	b29b      	uxth	r3, r3
 8004d90:	81fb      	strh	r3, [r7, #14]
 8004d92:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	da01      	bge.n	8004d9e <ucg_clip_is_y_visible+0x2a>
 8004d9a:	2300      	movs	r3, #0
 8004d9c:	e009      	b.n	8004db2 <ucg_clip_is_y_visible+0x3e>
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8004da4:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004da8:	429a      	cmp	r2, r3
 8004daa:	db01      	blt.n	8004db0 <ucg_clip_is_y_visible+0x3c>
 8004dac:	2300      	movs	r3, #0
 8004dae:	e000      	b.n	8004db2 <ucg_clip_is_y_visible+0x3e>
 8004db0:	2301      	movs	r3, #1
 8004db2:	4618      	mov	r0, r3
 8004db4:	3714      	adds	r7, #20
 8004db6:	46bd      	mov	sp, r7
 8004db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dbc:	4770      	bx	lr

08004dbe <ucg_clip_intersection>:
 8004dbe:	b480      	push	{r7}
 8004dc0:	b087      	sub	sp, #28
 8004dc2:	af00      	add	r7, sp, #0
 8004dc4:	60f8      	str	r0, [r7, #12]
 8004dc6:	60b9      	str	r1, [r7, #8]
 8004dc8:	4611      	mov	r1, r2
 8004dca:	461a      	mov	r2, r3
 8004dcc:	460b      	mov	r3, r1
 8004dce:	80fb      	strh	r3, [r7, #6]
 8004dd0:	4613      	mov	r3, r2
 8004dd2:	80bb      	strh	r3, [r7, #4]
 8004dd4:	68fb      	ldr	r3, [r7, #12]
 8004dd6:	881b      	ldrh	r3, [r3, #0]
 8004dd8:	82fb      	strh	r3, [r7, #22]
 8004dda:	68bb      	ldr	r3, [r7, #8]
 8004ddc:	881b      	ldrh	r3, [r3, #0]
 8004dde:	82bb      	strh	r3, [r7, #20]
 8004de0:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004de4:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004de8:	429a      	cmp	r2, r3
 8004dea:	db01      	blt.n	8004df0 <ucg_clip_intersection+0x32>
 8004dec:	2300      	movs	r3, #0
 8004dee:	e01a      	b.n	8004e26 <ucg_clip_intersection+0x68>
 8004df0:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004df4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004df8:	429a      	cmp	r2, r3
 8004dfa:	dc01      	bgt.n	8004e00 <ucg_clip_intersection+0x42>
 8004dfc:	2300      	movs	r3, #0
 8004dfe:	e012      	b.n	8004e26 <ucg_clip_intersection+0x68>
 8004e00:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004e04:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004e08:	429a      	cmp	r2, r3
 8004e0a:	da02      	bge.n	8004e12 <ucg_clip_intersection+0x54>
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	88fa      	ldrh	r2, [r7, #6]
 8004e10:	801a      	strh	r2, [r3, #0]
 8004e12:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004e16:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8004e1a:	429a      	cmp	r2, r3
 8004e1c:	dd02      	ble.n	8004e24 <ucg_clip_intersection+0x66>
 8004e1e:	68bb      	ldr	r3, [r7, #8]
 8004e20:	88ba      	ldrh	r2, [r7, #4]
 8004e22:	801a      	strh	r2, [r3, #0]
 8004e24:	2301      	movs	r3, #1
 8004e26:	4618      	mov	r0, r3
 8004e28:	371c      	adds	r7, #28
 8004e2a:	46bd      	mov	sp, r7
 8004e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e30:	4770      	bx	lr

08004e32 <ucg_clip_is_pixel_visible>:
 8004e32:	b580      	push	{r7, lr}
 8004e34:	b082      	sub	sp, #8
 8004e36:	af00      	add	r7, sp, #0
 8004e38:	6078      	str	r0, [r7, #4]
 8004e3a:	6878      	ldr	r0, [r7, #4]
 8004e3c:	f7ff ff75 	bl	8004d2a <ucg_clip_is_x_visible>
 8004e40:	4603      	mov	r3, r0
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d101      	bne.n	8004e4a <ucg_clip_is_pixel_visible+0x18>
 8004e46:	2300      	movs	r3, #0
 8004e48:	e008      	b.n	8004e5c <ucg_clip_is_pixel_visible+0x2a>
 8004e4a:	6878      	ldr	r0, [r7, #4]
 8004e4c:	f7ff ff92 	bl	8004d74 <ucg_clip_is_y_visible>
 8004e50:	4603      	mov	r3, r0
 8004e52:	2b00      	cmp	r3, #0
 8004e54:	d101      	bne.n	8004e5a <ucg_clip_is_pixel_visible+0x28>
 8004e56:	2300      	movs	r3, #0
 8004e58:	e000      	b.n	8004e5c <ucg_clip_is_pixel_visible+0x2a>
 8004e5a:	2301      	movs	r3, #1
 8004e5c:	4618      	mov	r0, r3
 8004e5e:	3708      	adds	r7, #8
 8004e60:	46bd      	mov	sp, r7
 8004e62:	bd80      	pop	{r7, pc}

08004e64 <ucg_clip_l90fx>:
 8004e64:	b590      	push	{r4, r7, lr}
 8004e66:	b085      	sub	sp, #20
 8004e68:	af00      	add	r7, sp, #0
 8004e6a:	6078      	str	r0, [r7, #4]
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2200      	movs	r2, #0
 8004e70:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004e78:	2b03      	cmp	r3, #3
 8004e7a:	f200 816d 	bhi.w	8005158 <ucg_clip_l90fx+0x2f4>
 8004e7e:	a201      	add	r2, pc, #4	@ (adr r2, 8004e84 <ucg_clip_l90fx+0x20>)
 8004e80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004e84:	08004e95 	.word	0x08004e95
 8004e88:	08004f3b 	.word	0x08004f3b
 8004e8c:	08004fe1 	.word	0x08004fe1
 8004e90:	0800509d 	.word	0x0800509d
 8004e94:	6878      	ldr	r0, [r7, #4]
 8004e96:	f7ff ff6d 	bl	8004d74 <ucg_clip_is_y_visible>
 8004e9a:	4603      	mov	r3, r0
 8004e9c:	2b00      	cmp	r3, #0
 8004e9e:	d101      	bne.n	8004ea4 <ucg_clip_l90fx+0x40>
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	e15a      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004eaa:	81fb      	strh	r3, [r7, #14]
 8004eac:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004eb0:	81bb      	strh	r3, [r7, #12]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004eb8:	b29a      	uxth	r2, r3
 8004eba:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ebe:	b29b      	uxth	r3, r3
 8004ec0:	4413      	add	r3, r2
 8004ec2:	b29b      	uxth	r3, r3
 8004ec4:	b21b      	sxth	r3, r3
 8004ec6:	81bb      	strh	r3, [r7, #12]
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 8004ed4:	b29a      	uxth	r2, r3
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8004edc:	b29b      	uxth	r3, r3
 8004ede:	4413      	add	r3, r2
 8004ee0:	b29b      	uxth	r3, r3
 8004ee2:	b21b      	sxth	r3, r3
 8004ee4:	f107 010c 	add.w	r1, r7, #12
 8004ee8:	f107 000e 	add.w	r0, r7, #14
 8004eec:	4622      	mov	r2, r4
 8004eee:	f7ff ff66 	bl	8004dbe <ucg_clip_intersection>
 8004ef2:	4603      	mov	r3, r0
 8004ef4:	2b00      	cmp	r3, #0
 8004ef6:	d101      	bne.n	8004efc <ucg_clip_l90fx+0x98>
 8004ef8:	2300      	movs	r3, #0
 8004efa:	e12e      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8004efc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004f00:	b29a      	uxth	r2, r3
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004f08:	b29b      	uxth	r3, r3
 8004f0a:	1ad3      	subs	r3, r2, r3
 8004f0c:	b29b      	uxth	r3, r3
 8004f0e:	b21a      	sxth	r2, r3
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004f14:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004f1c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004f20:	b29a      	uxth	r2, r3
 8004f22:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004f26:	b29b      	uxth	r3, r3
 8004f28:	1ad3      	subs	r3, r2, r3
 8004f2a:	b29b      	uxth	r3, r3
 8004f2c:	b21b      	sxth	r3, r3
 8004f2e:	81bb      	strh	r3, [r7, #12]
 8004f30:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004f38:	e10e      	b.n	8005158 <ucg_clip_l90fx+0x2f4>
 8004f3a:	6878      	ldr	r0, [r7, #4]
 8004f3c:	f7ff fef5 	bl	8004d2a <ucg_clip_is_x_visible>
 8004f40:	4603      	mov	r3, r0
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	d101      	bne.n	8004f4a <ucg_clip_l90fx+0xe6>
 8004f46:	2300      	movs	r3, #0
 8004f48:	e107      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004f50:	81fb      	strh	r3, [r7, #14]
 8004f52:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004f56:	81bb      	strh	r3, [r7, #12]
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004f5e:	b29a      	uxth	r2, r3
 8004f60:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004f64:	b29b      	uxth	r3, r3
 8004f66:	4413      	add	r3, r2
 8004f68:	b29b      	uxth	r3, r3
 8004f6a:	b21b      	sxth	r3, r3
 8004f6c:	81bb      	strh	r3, [r7, #12]
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8004f7a:	b29a      	uxth	r2, r3
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8004f82:	b29b      	uxth	r3, r3
 8004f84:	4413      	add	r3, r2
 8004f86:	b29b      	uxth	r3, r3
 8004f88:	b21b      	sxth	r3, r3
 8004f8a:	f107 010c 	add.w	r1, r7, #12
 8004f8e:	f107 000e 	add.w	r0, r7, #14
 8004f92:	4622      	mov	r2, r4
 8004f94:	f7ff ff13 	bl	8004dbe <ucg_clip_intersection>
 8004f98:	4603      	mov	r3, r0
 8004f9a:	2b00      	cmp	r3, #0
 8004f9c:	d101      	bne.n	8004fa2 <ucg_clip_l90fx+0x13e>
 8004f9e:	2300      	movs	r3, #0
 8004fa0:	e0db      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8004fa2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004fa6:	b29a      	uxth	r2, r3
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004fae:	b29b      	uxth	r3, r3
 8004fb0:	1ad3      	subs	r3, r2, r3
 8004fb2:	b29b      	uxth	r3, r3
 8004fb4:	b21a      	sxth	r2, r3
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004fba:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004fc2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004fc6:	b29a      	uxth	r2, r3
 8004fc8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004fcc:	b29b      	uxth	r3, r3
 8004fce:	1ad3      	subs	r3, r2, r3
 8004fd0:	b29b      	uxth	r3, r3
 8004fd2:	b21b      	sxth	r3, r3
 8004fd4:	81bb      	strh	r3, [r7, #12]
 8004fd6:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004fde:	e0bb      	b.n	8005158 <ucg_clip_l90fx+0x2f4>
 8004fe0:	6878      	ldr	r0, [r7, #4]
 8004fe2:	f7ff fec7 	bl	8004d74 <ucg_clip_is_y_visible>
 8004fe6:	4603      	mov	r3, r0
 8004fe8:	2b00      	cmp	r3, #0
 8004fea:	d101      	bne.n	8004ff0 <ucg_clip_l90fx+0x18c>
 8004fec:	2300      	movs	r3, #0
 8004fee:	e0b4      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004ff6:	81bb      	strh	r3, [r7, #12]
 8004ff8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ffc:	b29b      	uxth	r3, r3
 8004ffe:	3301      	adds	r3, #1
 8005000:	b29b      	uxth	r3, r3
 8005002:	b21b      	sxth	r3, r3
 8005004:	81bb      	strh	r3, [r7, #12]
 8005006:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800500a:	81fb      	strh	r3, [r7, #14]
 800500c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8005010:	b29a      	uxth	r2, r3
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8005018:	b29b      	uxth	r3, r3
 800501a:	1ad3      	subs	r3, r2, r3
 800501c:	b29b      	uxth	r3, r3
 800501e:	b21b      	sxth	r3, r3
 8005020:	81fb      	strh	r3, [r7, #14]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 800502e:	b29a      	uxth	r2, r3
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8005036:	b29b      	uxth	r3, r3
 8005038:	4413      	add	r3, r2
 800503a:	b29b      	uxth	r3, r3
 800503c:	b21b      	sxth	r3, r3
 800503e:	f107 010c 	add.w	r1, r7, #12
 8005042:	f107 000e 	add.w	r0, r7, #14
 8005046:	4622      	mov	r2, r4
 8005048:	f7ff feb9 	bl	8004dbe <ucg_clip_intersection>
 800504c:	4603      	mov	r3, r0
 800504e:	2b00      	cmp	r3, #0
 8005050:	d101      	bne.n	8005056 <ucg_clip_l90fx+0x1f2>
 8005052:	2300      	movs	r3, #0
 8005054:	e081      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8005056:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800505a:	b29a      	uxth	r2, r3
 800505c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8005060:	b29b      	uxth	r3, r3
 8005062:	1ad3      	subs	r3, r2, r3
 8005064:	b29b      	uxth	r3, r3
 8005066:	b21a      	sxth	r2, r3
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800506c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005070:	b29b      	uxth	r3, r3
 8005072:	3b01      	subs	r3, #1
 8005074:	b29b      	uxth	r3, r3
 8005076:	b21b      	sxth	r3, r3
 8005078:	81bb      	strh	r3, [r7, #12]
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8005080:	b29a      	uxth	r2, r3
 8005082:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005086:	b29b      	uxth	r3, r3
 8005088:	1ad3      	subs	r3, r2, r3
 800508a:	b29b      	uxth	r3, r3
 800508c:	b21a      	sxth	r2, r3
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	861a      	strh	r2, [r3, #48]	@ 0x30
 8005092:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	849a      	strh	r2, [r3, #36]	@ 0x24
 800509a:	e05d      	b.n	8005158 <ucg_clip_l90fx+0x2f4>
 800509c:	6878      	ldr	r0, [r7, #4]
 800509e:	f7ff fe44 	bl	8004d2a <ucg_clip_is_x_visible>
 80050a2:	4603      	mov	r3, r0
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d101      	bne.n	80050ac <ucg_clip_l90fx+0x248>
 80050a8:	2300      	movs	r3, #0
 80050aa:	e056      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 80050b2:	81bb      	strh	r3, [r7, #12]
 80050b4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80050b8:	b29b      	uxth	r3, r3
 80050ba:	3301      	adds	r3, #1
 80050bc:	b29b      	uxth	r3, r3
 80050be:	b21b      	sxth	r3, r3
 80050c0:	81bb      	strh	r3, [r7, #12]
 80050c2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80050c6:	81fb      	strh	r3, [r7, #14]
 80050c8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80050cc:	b29a      	uxth	r2, r3
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 80050d4:	b29b      	uxth	r3, r3
 80050d6:	1ad3      	subs	r3, r2, r3
 80050d8:	b29b      	uxth	r3, r3
 80050da:	b21b      	sxth	r3, r3
 80050dc:	81fb      	strh	r3, [r7, #14]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 80050ea:	b29a      	uxth	r2, r3
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 80050f2:	b29b      	uxth	r3, r3
 80050f4:	4413      	add	r3, r2
 80050f6:	b29b      	uxth	r3, r3
 80050f8:	b21b      	sxth	r3, r3
 80050fa:	f107 010c 	add.w	r1, r7, #12
 80050fe:	f107 000e 	add.w	r0, r7, #14
 8005102:	4622      	mov	r2, r4
 8005104:	f7ff fe5b 	bl	8004dbe <ucg_clip_intersection>
 8005108:	4603      	mov	r3, r0
 800510a:	2b00      	cmp	r3, #0
 800510c:	d101      	bne.n	8005112 <ucg_clip_l90fx+0x2ae>
 800510e:	2300      	movs	r3, #0
 8005110:	e023      	b.n	800515a <ucg_clip_l90fx+0x2f6>
 8005112:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005116:	b29a      	uxth	r2, r3
 8005118:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800511c:	b29b      	uxth	r3, r3
 800511e:	1ad3      	subs	r3, r2, r3
 8005120:	b29b      	uxth	r3, r3
 8005122:	b21a      	sxth	r2, r3
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8005128:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800512c:	b29b      	uxth	r3, r3
 800512e:	3b01      	subs	r3, #1
 8005130:	b29b      	uxth	r3, r3
 8005132:	b21b      	sxth	r3, r3
 8005134:	81bb      	strh	r3, [r7, #12]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 800513c:	b29a      	uxth	r2, r3
 800513e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005142:	b29b      	uxth	r3, r3
 8005144:	1ad3      	subs	r3, r2, r3
 8005146:	b29b      	uxth	r3, r3
 8005148:	b21a      	sxth	r2, r3
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	861a      	strh	r2, [r3, #48]	@ 0x30
 800514e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005156:	bf00      	nop
 8005158:	2301      	movs	r3, #1
 800515a:	4618      	mov	r0, r3
 800515c:	3714      	adds	r7, #20
 800515e:	46bd      	mov	sp, r7
 8005160:	bd90      	pop	{r4, r7, pc}
 8005162:	bf00      	nop

08005164 <ucg_clip_l90se>:
 8005164:	b580      	push	{r7, lr}
 8005166:	b084      	sub	sp, #16
 8005168:	af00      	add	r7, sp, #0
 800516a:	6078      	str	r0, [r7, #4]
 800516c:	6878      	ldr	r0, [r7, #4]
 800516e:	f7ff fe79 	bl	8004e64 <ucg_clip_l90fx>
 8005172:	4603      	mov	r3, r0
 8005174:	2b00      	cmp	r3, #0
 8005176:	d101      	bne.n	800517c <ucg_clip_l90se+0x18>
 8005178:	2300      	movs	r3, #0
 800517a:	e019      	b.n	80051b0 <ucg_clip_l90se+0x4c>
 800517c:	2300      	movs	r3, #0
 800517e:	73fb      	strb	r3, [r7, #15]
 8005180:	e012      	b.n	80051a8 <ucg_clip_l90se+0x44>
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8005188:	7bfa      	ldrb	r2, [r7, #15]
 800518a:	4613      	mov	r3, r2
 800518c:	00db      	lsls	r3, r3, #3
 800518e:	1a9b      	subs	r3, r3, r2
 8005190:	005b      	lsls	r3, r3, #1
 8005192:	18ca      	adds	r2, r1, r3
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	@ 0x30
 800519a:	4619      	mov	r1, r3
 800519c:	4610      	mov	r0, r2
 800519e:	f7fe fa70 	bl	8003682 <ucg_ccs_seek>
 80051a2:	7bfb      	ldrb	r3, [r7, #15]
 80051a4:	3301      	adds	r3, #1
 80051a6:	73fb      	strb	r3, [r7, #15]
 80051a8:	7bfb      	ldrb	r3, [r7, #15]
 80051aa:	2b02      	cmp	r3, #2
 80051ac:	d9e9      	bls.n	8005182 <ucg_clip_l90se+0x1e>
 80051ae:	2301      	movs	r3, #1
 80051b0:	4618      	mov	r0, r3
 80051b2:	3710      	adds	r7, #16
 80051b4:	46bd      	mov	sp, r7
 80051b6:	bd80      	pop	{r7, pc}

080051b8 <ucg_com_PowerDown>:
 80051b8:	b590      	push	{r4, r7, lr}
 80051ba:	b083      	sub	sp, #12
 80051bc:	af00      	add	r7, sp, #0
 80051be:	6078      	str	r0, [r7, #4]
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 80051c6:	f003 0308 	and.w	r3, r3, #8
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d006      	beq.n	80051dc <ucg_com_PowerDown+0x24>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	69dc      	ldr	r4, [r3, #28]
 80051d2:	2300      	movs	r3, #0
 80051d4:	2200      	movs	r2, #0
 80051d6:	210b      	movs	r1, #11
 80051d8:	6878      	ldr	r0, [r7, #4]
 80051da:	47a0      	blx	r4
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 80051e2:	f023 0308 	bic.w	r3, r3, #8
 80051e6:	b2da      	uxtb	r2, r3
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 80051ee:	bf00      	nop
 80051f0:	370c      	adds	r7, #12
 80051f2:	46bd      	mov	sp, r7
 80051f4:	bd90      	pop	{r4, r7, pc}

080051f6 <ucg_com_PowerUp>:
 80051f6:	b590      	push	{r4, r7, lr}
 80051f8:	b085      	sub	sp, #20
 80051fa:	af00      	add	r7, sp, #0
 80051fc:	6078      	str	r0, [r7, #4]
 80051fe:	460b      	mov	r3, r1
 8005200:	807b      	strh	r3, [r7, #2]
 8005202:	4613      	mov	r3, r2
 8005204:	803b      	strh	r3, [r7, #0]
 8005206:	887b      	ldrh	r3, [r7, #2]
 8005208:	813b      	strh	r3, [r7, #8]
 800520a:	883b      	ldrh	r3, [r7, #0]
 800520c:	817b      	strh	r3, [r7, #10]
 800520e:	6878      	ldr	r0, [r7, #4]
 8005210:	f7ff ffd2 	bl	80051b8 <ucg_com_PowerDown>
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	2200      	movs	r2, #0
 8005218:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	69dc      	ldr	r4, [r3, #28]
 8005220:	f107 0308 	add.w	r3, r7, #8
 8005224:	2200      	movs	r2, #0
 8005226:	210a      	movs	r1, #10
 8005228:	6878      	ldr	r0, [r7, #4]
 800522a:	47a0      	blx	r4
 800522c:	4603      	mov	r3, r0
 800522e:	81fb      	strh	r3, [r7, #14]
 8005230:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8005234:	2b00      	cmp	r3, #0
 8005236:	d008      	beq.n	800524a <ucg_com_PowerUp+0x54>
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 800523e:	f043 0308 	orr.w	r3, r3, #8
 8005242:	b2da      	uxtb	r2, r3
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 800524a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800524e:	4618      	mov	r0, r3
 8005250:	3714      	adds	r7, #20
 8005252:	46bd      	mov	sp, r7
 8005254:	bd90      	pop	{r4, r7, pc}

08005256 <ucg_com_SetLineStatus>:
 8005256:	b590      	push	{r4, r7, lr}
 8005258:	b083      	sub	sp, #12
 800525a:	af00      	add	r7, sp, #0
 800525c:	6078      	str	r0, [r7, #4]
 800525e:	4608      	mov	r0, r1
 8005260:	4611      	mov	r1, r2
 8005262:	461a      	mov	r2, r3
 8005264:	4603      	mov	r3, r0
 8005266:	70fb      	strb	r3, [r7, #3]
 8005268:	460b      	mov	r3, r1
 800526a:	70bb      	strb	r3, [r7, #2]
 800526c:	4613      	mov	r3, r2
 800526e:	707b      	strb	r3, [r7, #1]
 8005270:	78fb      	ldrb	r3, [r7, #3]
 8005272:	2b00      	cmp	r3, #0
 8005274:	d131      	bne.n	80052da <ucg_com_SetLineStatus+0x84>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 800527c:	78bb      	ldrb	r3, [r7, #2]
 800527e:	4013      	ands	r3, r2
 8005280:	b2db      	uxtb	r3, r3
 8005282:	2b00      	cmp	r3, #0
 8005284:	d008      	beq.n	8005298 <ucg_com_SetLineStatus+0x42>
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 800528c:	78bb      	ldrb	r3, [r7, #2]
 800528e:	4013      	ands	r3, r2
 8005290:	b2db      	uxtb	r3, r3
 8005292:	78ba      	ldrb	r2, [r7, #2]
 8005294:	429a      	cmp	r2, r3
 8005296:	d14b      	bne.n	8005330 <ucg_com_SetLineStatus+0xda>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	69dc      	ldr	r4, [r3, #28]
 800529c:	787b      	ldrb	r3, [r7, #1]
 800529e:	b219      	sxth	r1, r3
 80052a0:	78fb      	ldrb	r3, [r7, #3]
 80052a2:	b29a      	uxth	r2, r3
 80052a4:	2300      	movs	r3, #0
 80052a6:	6878      	ldr	r0, [r7, #4]
 80052a8:	47a0      	blx	r4
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 80052b0:	b25a      	sxtb	r2, r3
 80052b2:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80052b6:	43db      	mvns	r3, r3
 80052b8:	b25b      	sxtb	r3, r3
 80052ba:	4013      	ands	r3, r2
 80052bc:	b25b      	sxtb	r3, r3
 80052be:	b2da      	uxtb	r2, r3
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 80052cc:	78bb      	ldrb	r3, [r7, #2]
 80052ce:	4313      	orrs	r3, r2
 80052d0:	b2da      	uxtb	r2, r3
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 80052d8:	e02a      	b.n	8005330 <ucg_com_SetLineStatus+0xda>
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 80052e0:	78bb      	ldrb	r3, [r7, #2]
 80052e2:	4013      	ands	r3, r2
 80052e4:	b2db      	uxtb	r3, r3
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	d007      	beq.n	80052fa <ucg_com_SetLineStatus+0xa4>
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 80052f0:	78bb      	ldrb	r3, [r7, #2]
 80052f2:	4013      	ands	r3, r2
 80052f4:	b2db      	uxtb	r3, r3
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d11a      	bne.n	8005330 <ucg_com_SetLineStatus+0xda>
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	69dc      	ldr	r4, [r3, #28]
 80052fe:	787b      	ldrb	r3, [r7, #1]
 8005300:	b219      	sxth	r1, r3
 8005302:	78fb      	ldrb	r3, [r7, #3]
 8005304:	b29a      	uxth	r2, r3
 8005306:	2300      	movs	r3, #0
 8005308:	6878      	ldr	r0, [r7, #4]
 800530a:	47a0      	blx	r4
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8005312:	78bb      	ldrb	r3, [r7, #2]
 8005314:	4313      	orrs	r3, r2
 8005316:	b2da      	uxtb	r2, r3
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8005324:	78bb      	ldrb	r3, [r7, #2]
 8005326:	4313      	orrs	r3, r2
 8005328:	b2da      	uxtb	r2, r3
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8005330:	bf00      	nop
 8005332:	370c      	adds	r7, #12
 8005334:	46bd      	mov	sp, r7
 8005336:	bd90      	pop	{r4, r7, pc}

08005338 <ucg_com_SetResetLineStatus>:
 8005338:	b580      	push	{r7, lr}
 800533a:	b082      	sub	sp, #8
 800533c:	af00      	add	r7, sp, #0
 800533e:	6078      	str	r0, [r7, #4]
 8005340:	460b      	mov	r3, r1
 8005342:	70fb      	strb	r3, [r7, #3]
 8005344:	78f9      	ldrb	r1, [r7, #3]
 8005346:	230d      	movs	r3, #13
 8005348:	2204      	movs	r2, #4
 800534a:	6878      	ldr	r0, [r7, #4]
 800534c:	f7ff ff83 	bl	8005256 <ucg_com_SetLineStatus>
 8005350:	bf00      	nop
 8005352:	3708      	adds	r7, #8
 8005354:	46bd      	mov	sp, r7
 8005356:	bd80      	pop	{r7, pc}

08005358 <ucg_com_SetCSLineStatus>:
 8005358:	b580      	push	{r7, lr}
 800535a:	b082      	sub	sp, #8
 800535c:	af00      	add	r7, sp, #0
 800535e:	6078      	str	r0, [r7, #4]
 8005360:	460b      	mov	r3, r1
 8005362:	70fb      	strb	r3, [r7, #3]
 8005364:	78f9      	ldrb	r1, [r7, #3]
 8005366:	230e      	movs	r3, #14
 8005368:	2202      	movs	r2, #2
 800536a:	6878      	ldr	r0, [r7, #4]
 800536c:	f7ff ff73 	bl	8005256 <ucg_com_SetLineStatus>
 8005370:	bf00      	nop
 8005372:	3708      	adds	r7, #8
 8005374:	46bd      	mov	sp, r7
 8005376:	bd80      	pop	{r7, pc}

08005378 <ucg_com_SetCDLineStatus>:
 8005378:	b580      	push	{r7, lr}
 800537a:	b082      	sub	sp, #8
 800537c:	af00      	add	r7, sp, #0
 800537e:	6078      	str	r0, [r7, #4]
 8005380:	460b      	mov	r3, r1
 8005382:	70fb      	strb	r3, [r7, #3]
 8005384:	78f9      	ldrb	r1, [r7, #3]
 8005386:	230f      	movs	r3, #15
 8005388:	2201      	movs	r2, #1
 800538a:	6878      	ldr	r0, [r7, #4]
 800538c:	f7ff ff63 	bl	8005256 <ucg_com_SetLineStatus>
 8005390:	bf00      	nop
 8005392:	3708      	adds	r7, #8
 8005394:	46bd      	mov	sp, r7
 8005396:	bd80      	pop	{r7, pc}

08005398 <ucg_com_DelayMicroseconds>:
 8005398:	b590      	push	{r4, r7, lr}
 800539a:	b083      	sub	sp, #12
 800539c:	af00      	add	r7, sp, #0
 800539e:	6078      	str	r0, [r7, #4]
 80053a0:	460b      	mov	r3, r1
 80053a2:	807b      	strh	r3, [r7, #2]
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	69dc      	ldr	r4, [r3, #28]
 80053a8:	887a      	ldrh	r2, [r7, #2]
 80053aa:	2300      	movs	r3, #0
 80053ac:	210c      	movs	r1, #12
 80053ae:	6878      	ldr	r0, [r7, #4]
 80053b0:	47a0      	blx	r4
 80053b2:	bf00      	nop
 80053b4:	370c      	adds	r7, #12
 80053b6:	46bd      	mov	sp, r7
 80053b8:	bd90      	pop	{r4, r7, pc}

080053ba <ucg_com_DelayMilliseconds>:
 80053ba:	b580      	push	{r7, lr}
 80053bc:	b082      	sub	sp, #8
 80053be:	af00      	add	r7, sp, #0
 80053c0:	6078      	str	r0, [r7, #4]
 80053c2:	460b      	mov	r3, r1
 80053c4:	807b      	strh	r3, [r7, #2]
 80053c6:	e007      	b.n	80053d8 <ucg_com_DelayMilliseconds+0x1e>
 80053c8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80053cc:	6878      	ldr	r0, [r7, #4]
 80053ce:	f7ff ffe3 	bl	8005398 <ucg_com_DelayMicroseconds>
 80053d2:	887b      	ldrh	r3, [r7, #2]
 80053d4:	3b01      	subs	r3, #1
 80053d6:	807b      	strh	r3, [r7, #2]
 80053d8:	887b      	ldrh	r3, [r7, #2]
 80053da:	2b00      	cmp	r3, #0
 80053dc:	d1f4      	bne.n	80053c8 <ucg_com_DelayMilliseconds+0xe>
 80053de:	bf00      	nop
 80053e0:	3708      	adds	r7, #8
 80053e2:	46bd      	mov	sp, r7
 80053e4:	bd80      	pop	{r7, pc}

080053e6 <ucg_com_SendByte>:
 80053e6:	b590      	push	{r4, r7, lr}
 80053e8:	b083      	sub	sp, #12
 80053ea:	af00      	add	r7, sp, #0
 80053ec:	6078      	str	r0, [r7, #4]
 80053ee:	460b      	mov	r3, r1
 80053f0:	70fb      	strb	r3, [r7, #3]
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	69dc      	ldr	r4, [r3, #28]
 80053f6:	78fb      	ldrb	r3, [r7, #3]
 80053f8:	b29a      	uxth	r2, r3
 80053fa:	2300      	movs	r3, #0
 80053fc:	2110      	movs	r1, #16
 80053fe:	6878      	ldr	r0, [r7, #4]
 8005400:	47a0      	blx	r4
 8005402:	bf00      	nop
 8005404:	370c      	adds	r7, #12
 8005406:	46bd      	mov	sp, r7
 8005408:	bd90      	pop	{r4, r7, pc}

0800540a <ucg_com_SendStringP>:
 800540a:	b590      	push	{r4, r7, lr}
 800540c:	b087      	sub	sp, #28
 800540e:	af00      	add	r7, sp, #0
 8005410:	60f8      	str	r0, [r7, #12]
 8005412:	460b      	mov	r3, r1
 8005414:	607a      	str	r2, [r7, #4]
 8005416:	817b      	strh	r3, [r7, #10]
 8005418:	e010      	b.n	800543c <ucg_com_SendStringP+0x32>
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	781b      	ldrb	r3, [r3, #0]
 800541e:	75fb      	strb	r3, [r7, #23]
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	69dc      	ldr	r4, [r3, #28]
 8005424:	7dfb      	ldrb	r3, [r7, #23]
 8005426:	b29a      	uxth	r2, r3
 8005428:	2300      	movs	r3, #0
 800542a:	2110      	movs	r1, #16
 800542c:	68f8      	ldr	r0, [r7, #12]
 800542e:	47a0      	blx	r4
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	3301      	adds	r3, #1
 8005434:	607b      	str	r3, [r7, #4]
 8005436:	897b      	ldrh	r3, [r7, #10]
 8005438:	3b01      	subs	r3, #1
 800543a:	817b      	strh	r3, [r7, #10]
 800543c:	897b      	ldrh	r3, [r7, #10]
 800543e:	2b00      	cmp	r3, #0
 8005440:	d1eb      	bne.n	800541a <ucg_com_SendStringP+0x10>
 8005442:	bf00      	nop
 8005444:	371c      	adds	r7, #28
 8005446:	46bd      	mov	sp, r7
 8005448:	bd90      	pop	{r4, r7, pc}

0800544a <ucg_com_SendCmdArg>:
 800544a:	b580      	push	{r7, lr}
 800544c:	b084      	sub	sp, #16
 800544e:	af00      	add	r7, sp, #0
 8005450:	60f8      	str	r0, [r7, #12]
 8005452:	60b9      	str	r1, [r7, #8]
 8005454:	4611      	mov	r1, r2
 8005456:	461a      	mov	r2, r3
 8005458:	460b      	mov	r3, r1
 800545a:	71fb      	strb	r3, [r7, #7]
 800545c:	4613      	mov	r3, r2
 800545e:	71bb      	strb	r3, [r7, #6]
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8005466:	085b      	lsrs	r3, r3, #1
 8005468:	b2db      	uxtb	r3, r3
 800546a:	f003 0301 	and.w	r3, r3, #1
 800546e:	b2db      	uxtb	r3, r3
 8005470:	4619      	mov	r1, r3
 8005472:	68f8      	ldr	r0, [r7, #12]
 8005474:	f7ff ff80 	bl	8005378 <ucg_com_SetCDLineStatus>
 8005478:	79fb      	ldrb	r3, [r7, #7]
 800547a:	b29b      	uxth	r3, r3
 800547c:	68ba      	ldr	r2, [r7, #8]
 800547e:	4619      	mov	r1, r3
 8005480:	68f8      	ldr	r0, [r7, #12]
 8005482:	f7ff ffc2 	bl	800540a <ucg_com_SendStringP>
 8005486:	79bb      	ldrb	r3, [r7, #6]
 8005488:	2b00      	cmp	r3, #0
 800548a:	d014      	beq.n	80054b6 <ucg_com_SendCmdArg+0x6c>
 800548c:	79fb      	ldrb	r3, [r7, #7]
 800548e:	68ba      	ldr	r2, [r7, #8]
 8005490:	4413      	add	r3, r2
 8005492:	60bb      	str	r3, [r7, #8]
 8005494:	68fb      	ldr	r3, [r7, #12]
 8005496:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800549a:	f003 0301 	and.w	r3, r3, #1
 800549e:	b2db      	uxtb	r3, r3
 80054a0:	4619      	mov	r1, r3
 80054a2:	68f8      	ldr	r0, [r7, #12]
 80054a4:	f7ff ff68 	bl	8005378 <ucg_com_SetCDLineStatus>
 80054a8:	79bb      	ldrb	r3, [r7, #6]
 80054aa:	b29b      	uxth	r3, r3
 80054ac:	68ba      	ldr	r2, [r7, #8]
 80054ae:	4619      	mov	r1, r3
 80054b0:	68f8      	ldr	r0, [r7, #12]
 80054b2:	f7ff ffaa 	bl	800540a <ucg_com_SendStringP>
 80054b6:	bf00      	nop
 80054b8:	3710      	adds	r7, #16
 80054ba:	46bd      	mov	sp, r7
 80054bc:	bd80      	pop	{r7, pc}
	...

080054c0 <ucg_com_SendCmdSeq>:
 80054c0:	b580      	push	{r7, lr}
 80054c2:	b084      	sub	sp, #16
 80054c4:	af00      	add	r7, sp, #0
 80054c6:	6078      	str	r0, [r7, #4]
 80054c8:	6039      	str	r1, [r7, #0]
 80054ca:	683b      	ldr	r3, [r7, #0]
 80054cc:	781b      	ldrb	r3, [r3, #0]
 80054ce:	73fb      	strb	r3, [r7, #15]
 80054d0:	7bfb      	ldrb	r3, [r7, #15]
 80054d2:	091b      	lsrs	r3, r3, #4
 80054d4:	73bb      	strb	r3, [r7, #14]
 80054d6:	7bfb      	ldrb	r3, [r7, #15]
 80054d8:	f003 030f 	and.w	r3, r3, #15
 80054dc:	737b      	strb	r3, [r7, #13]
 80054de:	7bbb      	ldrb	r3, [r7, #14]
 80054e0:	2b0f      	cmp	r3, #15
 80054e2:	f200 8124 	bhi.w	800572e <ucg_com_SendCmdSeq+0x26e>
 80054e6:	a201      	add	r2, pc, #4	@ (adr r2, 80054ec <ucg_com_SendCmdSeq+0x2c>)
 80054e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054ec:	0800572f 	.word	0x0800572f
 80054f0:	0800552d 	.word	0x0800552d
 80054f4:	0800552d 	.word	0x0800552d
 80054f8:	0800552d 	.word	0x0800552d
 80054fc:	0800572f 	.word	0x0800572f
 8005500:	0800572f 	.word	0x0800572f
 8005504:	0800554d 	.word	0x0800554d
 8005508:	0800557f 	.word	0x0800557f
 800550c:	080055c3 	.word	0x080055c3
 8005510:	080055ef 	.word	0x080055ef
 8005514:	0800561b 	.word	0x0800561b
 8005518:	0800567b 	.word	0x0800567b
 800551c:	0800572f 	.word	0x0800572f
 8005520:	0800572f 	.word	0x0800572f
 8005524:	0800572f 	.word	0x0800572f
 8005528:	080056db 	.word	0x080056db
 800552c:	683b      	ldr	r3, [r7, #0]
 800552e:	1c59      	adds	r1, r3, #1
 8005530:	7b7b      	ldrb	r3, [r7, #13]
 8005532:	7bba      	ldrb	r2, [r7, #14]
 8005534:	6878      	ldr	r0, [r7, #4]
 8005536:	f7ff ff88 	bl	800544a <ucg_com_SendCmdArg>
 800553a:	7bbb      	ldrb	r3, [r7, #14]
 800553c:	1c5a      	adds	r2, r3, #1
 800553e:	7b7b      	ldrb	r3, [r7, #13]
 8005540:	4413      	add	r3, r2
 8005542:	461a      	mov	r2, r3
 8005544:	683b      	ldr	r3, [r7, #0]
 8005546:	4413      	add	r3, r2
 8005548:	603b      	str	r3, [r7, #0]
 800554a:	e0ef      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8005552:	f003 0301 	and.w	r3, r3, #1
 8005556:	b2db      	uxtb	r3, r3
 8005558:	4619      	mov	r1, r3
 800555a:	6878      	ldr	r0, [r7, #4]
 800555c:	f7ff ff0c 	bl	8005378 <ucg_com_SetCDLineStatus>
 8005560:	7b7b      	ldrb	r3, [r7, #13]
 8005562:	b299      	uxth	r1, r3
 8005564:	683b      	ldr	r3, [r7, #0]
 8005566:	3301      	adds	r3, #1
 8005568:	461a      	mov	r2, r3
 800556a:	6878      	ldr	r0, [r7, #4]
 800556c:	f7ff ff4d 	bl	800540a <ucg_com_SendStringP>
 8005570:	7b7b      	ldrb	r3, [r7, #13]
 8005572:	3301      	adds	r3, #1
 8005574:	461a      	mov	r2, r3
 8005576:	683b      	ldr	r3, [r7, #0]
 8005578:	4413      	add	r3, r2
 800557a:	603b      	str	r3, [r7, #0]
 800557c:	e0d6      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8005584:	085b      	lsrs	r3, r3, #1
 8005586:	b2db      	uxtb	r3, r3
 8005588:	f003 0301 	and.w	r3, r3, #1
 800558c:	2b00      	cmp	r3, #0
 800558e:	bf0c      	ite	eq
 8005590:	2301      	moveq	r3, #1
 8005592:	2300      	movne	r3, #0
 8005594:	b2db      	uxtb	r3, r3
 8005596:	4619      	mov	r1, r3
 8005598:	6878      	ldr	r0, [r7, #4]
 800559a:	f7ff feed 	bl	8005378 <ucg_com_SetCDLineStatus>
 800559e:	7b7b      	ldrb	r3, [r7, #13]
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d007      	beq.n	80055b4 <ucg_com_SendCmdSeq+0xf4>
 80055a4:	7b7b      	ldrb	r3, [r7, #13]
 80055a6:	b299      	uxth	r1, r3
 80055a8:	683b      	ldr	r3, [r7, #0]
 80055aa:	3301      	adds	r3, #1
 80055ac:	461a      	mov	r2, r3
 80055ae:	6878      	ldr	r0, [r7, #4]
 80055b0:	f7ff ff2b 	bl	800540a <ucg_com_SendStringP>
 80055b4:	7b7b      	ldrb	r3, [r7, #13]
 80055b6:	3301      	adds	r3, #1
 80055b8:	461a      	mov	r2, r3
 80055ba:	683b      	ldr	r3, [r7, #0]
 80055bc:	4413      	add	r3, r2
 80055be:	603b      	str	r3, [r7, #0]
 80055c0:	e0b4      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 80055c2:	683b      	ldr	r3, [r7, #0]
 80055c4:	3301      	adds	r3, #1
 80055c6:	603b      	str	r3, [r7, #0]
 80055c8:	683b      	ldr	r3, [r7, #0]
 80055ca:	781b      	ldrb	r3, [r3, #0]
 80055cc:	73fb      	strb	r3, [r7, #15]
 80055ce:	7b7b      	ldrb	r3, [r7, #13]
 80055d0:	b29b      	uxth	r3, r3
 80055d2:	021b      	lsls	r3, r3, #8
 80055d4:	b29a      	uxth	r2, r3
 80055d6:	7bfb      	ldrb	r3, [r7, #15]
 80055d8:	b29b      	uxth	r3, r3
 80055da:	4413      	add	r3, r2
 80055dc:	b29b      	uxth	r3, r3
 80055de:	4619      	mov	r1, r3
 80055e0:	6878      	ldr	r0, [r7, #4]
 80055e2:	f7ff feea 	bl	80053ba <ucg_com_DelayMilliseconds>
 80055e6:	683b      	ldr	r3, [r7, #0]
 80055e8:	3301      	adds	r3, #1
 80055ea:	603b      	str	r3, [r7, #0]
 80055ec:	e09e      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 80055ee:	683b      	ldr	r3, [r7, #0]
 80055f0:	3301      	adds	r3, #1
 80055f2:	603b      	str	r3, [r7, #0]
 80055f4:	683b      	ldr	r3, [r7, #0]
 80055f6:	781b      	ldrb	r3, [r3, #0]
 80055f8:	73fb      	strb	r3, [r7, #15]
 80055fa:	7b7b      	ldrb	r3, [r7, #13]
 80055fc:	b29b      	uxth	r3, r3
 80055fe:	021b      	lsls	r3, r3, #8
 8005600:	b29a      	uxth	r2, r3
 8005602:	7bfb      	ldrb	r3, [r7, #15]
 8005604:	b29b      	uxth	r3, r3
 8005606:	4413      	add	r3, r2
 8005608:	b29b      	uxth	r3, r3
 800560a:	4619      	mov	r1, r3
 800560c:	6878      	ldr	r0, [r7, #4]
 800560e:	f7ff fec3 	bl	8005398 <ucg_com_DelayMicroseconds>
 8005612:	683b      	ldr	r3, [r7, #0]
 8005614:	3301      	adds	r3, #1
 8005616:	603b      	str	r3, [r7, #0]
 8005618:	e088      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 800561a:	683b      	ldr	r3, [r7, #0]
 800561c:	3301      	adds	r3, #1
 800561e:	603b      	str	r3, [r7, #0]
 8005620:	683b      	ldr	r3, [r7, #0]
 8005622:	781b      	ldrb	r3, [r3, #0]
 8005624:	73fb      	strb	r3, [r7, #15]
 8005626:	683b      	ldr	r3, [r7, #0]
 8005628:	3301      	adds	r3, #1
 800562a:	603b      	str	r3, [r7, #0]
 800562c:	683b      	ldr	r3, [r7, #0]
 800562e:	781b      	ldrb	r3, [r3, #0]
 8005630:	733b      	strb	r3, [r7, #12]
 8005632:	683b      	ldr	r3, [r7, #0]
 8005634:	3301      	adds	r3, #1
 8005636:	603b      	str	r3, [r7, #0]
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800563e:	f003 0301 	and.w	r3, r3, #1
 8005642:	b2db      	uxtb	r3, r3
 8005644:	4619      	mov	r1, r3
 8005646:	6878      	ldr	r0, [r7, #4]
 8005648:	f7ff fe96 	bl	8005378 <ucg_com_SetCDLineStatus>
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8005652:	461a      	mov	r2, r3
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 800565a:	441a      	add	r2, r3
 800565c:	7b7b      	ldrb	r3, [r7, #13]
 800565e:	fa42 f303 	asr.w	r3, r2, r3
 8005662:	b2da      	uxtb	r2, r3
 8005664:	7bfb      	ldrb	r3, [r7, #15]
 8005666:	4013      	ands	r3, r2
 8005668:	b2da      	uxtb	r2, r3
 800566a:	7b3b      	ldrb	r3, [r7, #12]
 800566c:	4313      	orrs	r3, r2
 800566e:	b2db      	uxtb	r3, r3
 8005670:	4619      	mov	r1, r3
 8005672:	6878      	ldr	r0, [r7, #4]
 8005674:	f7ff feb7 	bl	80053e6 <ucg_com_SendByte>
 8005678:	e058      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 800567a:	683b      	ldr	r3, [r7, #0]
 800567c:	3301      	adds	r3, #1
 800567e:	603b      	str	r3, [r7, #0]
 8005680:	683b      	ldr	r3, [r7, #0]
 8005682:	781b      	ldrb	r3, [r3, #0]
 8005684:	73fb      	strb	r3, [r7, #15]
 8005686:	683b      	ldr	r3, [r7, #0]
 8005688:	3301      	adds	r3, #1
 800568a:	603b      	str	r3, [r7, #0]
 800568c:	683b      	ldr	r3, [r7, #0]
 800568e:	781b      	ldrb	r3, [r3, #0]
 8005690:	733b      	strb	r3, [r7, #12]
 8005692:	683b      	ldr	r3, [r7, #0]
 8005694:	3301      	adds	r3, #1
 8005696:	603b      	str	r3, [r7, #0]
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800569e:	f003 0301 	and.w	r3, r3, #1
 80056a2:	b2db      	uxtb	r3, r3
 80056a4:	4619      	mov	r1, r3
 80056a6:	6878      	ldr	r0, [r7, #4]
 80056a8:	f7ff fe66 	bl	8005378 <ucg_com_SetCDLineStatus>
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 80056b2:	461a      	mov	r2, r3
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	@ 0x22
 80056ba:	441a      	add	r2, r3
 80056bc:	7b7b      	ldrb	r3, [r7, #13]
 80056be:	fa42 f303 	asr.w	r3, r2, r3
 80056c2:	b2da      	uxtb	r2, r3
 80056c4:	7bfb      	ldrb	r3, [r7, #15]
 80056c6:	4013      	ands	r3, r2
 80056c8:	b2da      	uxtb	r2, r3
 80056ca:	7b3b      	ldrb	r3, [r7, #12]
 80056cc:	4313      	orrs	r3, r2
 80056ce:	b2db      	uxtb	r3, r3
 80056d0:	4619      	mov	r1, r3
 80056d2:	6878      	ldr	r0, [r7, #4]
 80056d4:	f7ff fe87 	bl	80053e6 <ucg_com_SendByte>
 80056d8:	e028      	b.n	800572c <ucg_com_SendCmdSeq+0x26c>
 80056da:	7b7b      	ldrb	r3, [r7, #13]
 80056dc:	089b      	lsrs	r3, r3, #2
 80056de:	73bb      	strb	r3, [r7, #14]
 80056e0:	7b7b      	ldrb	r3, [r7, #13]
 80056e2:	f003 0303 	and.w	r3, r3, #3
 80056e6:	737b      	strb	r3, [r7, #13]
 80056e8:	7bbb      	ldrb	r3, [r7, #14]
 80056ea:	2b01      	cmp	r3, #1
 80056ec:	d00c      	beq.n	8005708 <ucg_com_SendCmdSeq+0x248>
 80056ee:	2b03      	cmp	r3, #3
 80056f0:	d013      	beq.n	800571a <ucg_com_SendCmdSeq+0x25a>
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	d116      	bne.n	8005724 <ucg_com_SendCmdSeq+0x264>
 80056f6:	7b7b      	ldrb	r3, [r7, #13]
 80056f8:	f003 0301 	and.w	r3, r3, #1
 80056fc:	b2db      	uxtb	r3, r3
 80056fe:	4619      	mov	r1, r3
 8005700:	6878      	ldr	r0, [r7, #4]
 8005702:	f7ff fe19 	bl	8005338 <ucg_com_SetResetLineStatus>
 8005706:	e00d      	b.n	8005724 <ucg_com_SendCmdSeq+0x264>
 8005708:	7b7b      	ldrb	r3, [r7, #13]
 800570a:	f003 0301 	and.w	r3, r3, #1
 800570e:	b2db      	uxtb	r3, r3
 8005710:	4619      	mov	r1, r3
 8005712:	6878      	ldr	r0, [r7, #4]
 8005714:	f7ff fe20 	bl	8005358 <ucg_com_SetCSLineStatus>
 8005718:	e004      	b.n	8005724 <ucg_com_SendCmdSeq+0x264>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	7b7a      	ldrb	r2, [r7, #13]
 800571e:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 8005722:	bf00      	nop
 8005724:	683b      	ldr	r3, [r7, #0]
 8005726:	3301      	adds	r3, #1
 8005728:	603b      	str	r3, [r7, #0]
 800572a:	bf00      	nop
 800572c:	e6cd      	b.n	80054ca <ucg_com_SendCmdSeq+0xa>
 800572e:	bf00      	nop
 8005730:	3710      	adds	r7, #16
 8005732:	46bd      	mov	sp, r7
 8005734:	bd80      	pop	{r7, pc}
 8005736:	bf00      	nop

08005738 <siprintf>:
 8005738:	b40e      	push	{r1, r2, r3}
 800573a:	b500      	push	{lr}
 800573c:	b09c      	sub	sp, #112	@ 0x70
 800573e:	ab1d      	add	r3, sp, #116	@ 0x74
 8005740:	9002      	str	r0, [sp, #8]
 8005742:	9006      	str	r0, [sp, #24]
 8005744:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8005748:	4809      	ldr	r0, [pc, #36]	@ (8005770 <siprintf+0x38>)
 800574a:	9107      	str	r1, [sp, #28]
 800574c:	9104      	str	r1, [sp, #16]
 800574e:	4909      	ldr	r1, [pc, #36]	@ (8005774 <siprintf+0x3c>)
 8005750:	f853 2b04 	ldr.w	r2, [r3], #4
 8005754:	9105      	str	r1, [sp, #20]
 8005756:	6800      	ldr	r0, [r0, #0]
 8005758:	9301      	str	r3, [sp, #4]
 800575a:	a902      	add	r1, sp, #8
 800575c:	f000 f994 	bl	8005a88 <_svfiprintf_r>
 8005760:	9b02      	ldr	r3, [sp, #8]
 8005762:	2200      	movs	r2, #0
 8005764:	701a      	strb	r2, [r3, #0]
 8005766:	b01c      	add	sp, #112	@ 0x70
 8005768:	f85d eb04 	ldr.w	lr, [sp], #4
 800576c:	b003      	add	sp, #12
 800576e:	4770      	bx	lr
 8005770:	2000007c 	.word	0x2000007c
 8005774:	ffff0208 	.word	0xffff0208

08005778 <memset>:
 8005778:	4402      	add	r2, r0
 800577a:	4603      	mov	r3, r0
 800577c:	4293      	cmp	r3, r2
 800577e:	d100      	bne.n	8005782 <memset+0xa>
 8005780:	4770      	bx	lr
 8005782:	f803 1b01 	strb.w	r1, [r3], #1
 8005786:	e7f9      	b.n	800577c <memset+0x4>

08005788 <__errno>:
 8005788:	4b01      	ldr	r3, [pc, #4]	@ (8005790 <__errno+0x8>)
 800578a:	6818      	ldr	r0, [r3, #0]
 800578c:	4770      	bx	lr
 800578e:	bf00      	nop
 8005790:	2000007c 	.word	0x2000007c

08005794 <__libc_init_array>:
 8005794:	b570      	push	{r4, r5, r6, lr}
 8005796:	4d0d      	ldr	r5, [pc, #52]	@ (80057cc <__libc_init_array+0x38>)
 8005798:	4c0d      	ldr	r4, [pc, #52]	@ (80057d0 <__libc_init_array+0x3c>)
 800579a:	1b64      	subs	r4, r4, r5
 800579c:	10a4      	asrs	r4, r4, #2
 800579e:	2600      	movs	r6, #0
 80057a0:	42a6      	cmp	r6, r4
 80057a2:	d109      	bne.n	80057b8 <__libc_init_array+0x24>
 80057a4:	4d0b      	ldr	r5, [pc, #44]	@ (80057d4 <__libc_init_array+0x40>)
 80057a6:	4c0c      	ldr	r4, [pc, #48]	@ (80057d8 <__libc_init_array+0x44>)
 80057a8:	f000 fc66 	bl	8006078 <_init>
 80057ac:	1b64      	subs	r4, r4, r5
 80057ae:	10a4      	asrs	r4, r4, #2
 80057b0:	2600      	movs	r6, #0
 80057b2:	42a6      	cmp	r6, r4
 80057b4:	d105      	bne.n	80057c2 <__libc_init_array+0x2e>
 80057b6:	bd70      	pop	{r4, r5, r6, pc}
 80057b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80057bc:	4798      	blx	r3
 80057be:	3601      	adds	r6, #1
 80057c0:	e7ee      	b.n	80057a0 <__libc_init_array+0xc>
 80057c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80057c6:	4798      	blx	r3
 80057c8:	3601      	adds	r6, #1
 80057ca:	e7f2      	b.n	80057b2 <__libc_init_array+0x1e>
 80057cc:	08006bcc 	.word	0x08006bcc
 80057d0:	08006bcc 	.word	0x08006bcc
 80057d4:	08006bcc 	.word	0x08006bcc
 80057d8:	08006bd0 	.word	0x08006bd0

080057dc <__retarget_lock_acquire_recursive>:
 80057dc:	4770      	bx	lr

080057de <__retarget_lock_release_recursive>:
 80057de:	4770      	bx	lr

080057e0 <_free_r>:
 80057e0:	b538      	push	{r3, r4, r5, lr}
 80057e2:	4605      	mov	r5, r0
 80057e4:	2900      	cmp	r1, #0
 80057e6:	d041      	beq.n	800586c <_free_r+0x8c>
 80057e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80057ec:	1f0c      	subs	r4, r1, #4
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	bfb8      	it	lt
 80057f2:	18e4      	addlt	r4, r4, r3
 80057f4:	f000 f8e0 	bl	80059b8 <__malloc_lock>
 80057f8:	4a1d      	ldr	r2, [pc, #116]	@ (8005870 <_free_r+0x90>)
 80057fa:	6813      	ldr	r3, [r2, #0]
 80057fc:	b933      	cbnz	r3, 800580c <_free_r+0x2c>
 80057fe:	6063      	str	r3, [r4, #4]
 8005800:	6014      	str	r4, [r2, #0]
 8005802:	4628      	mov	r0, r5
 8005804:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005808:	f000 b8dc 	b.w	80059c4 <__malloc_unlock>
 800580c:	42a3      	cmp	r3, r4
 800580e:	d908      	bls.n	8005822 <_free_r+0x42>
 8005810:	6820      	ldr	r0, [r4, #0]
 8005812:	1821      	adds	r1, r4, r0
 8005814:	428b      	cmp	r3, r1
 8005816:	bf01      	itttt	eq
 8005818:	6819      	ldreq	r1, [r3, #0]
 800581a:	685b      	ldreq	r3, [r3, #4]
 800581c:	1809      	addeq	r1, r1, r0
 800581e:	6021      	streq	r1, [r4, #0]
 8005820:	e7ed      	b.n	80057fe <_free_r+0x1e>
 8005822:	461a      	mov	r2, r3
 8005824:	685b      	ldr	r3, [r3, #4]
 8005826:	b10b      	cbz	r3, 800582c <_free_r+0x4c>
 8005828:	42a3      	cmp	r3, r4
 800582a:	d9fa      	bls.n	8005822 <_free_r+0x42>
 800582c:	6811      	ldr	r1, [r2, #0]
 800582e:	1850      	adds	r0, r2, r1
 8005830:	42a0      	cmp	r0, r4
 8005832:	d10b      	bne.n	800584c <_free_r+0x6c>
 8005834:	6820      	ldr	r0, [r4, #0]
 8005836:	4401      	add	r1, r0
 8005838:	1850      	adds	r0, r2, r1
 800583a:	4283      	cmp	r3, r0
 800583c:	6011      	str	r1, [r2, #0]
 800583e:	d1e0      	bne.n	8005802 <_free_r+0x22>
 8005840:	6818      	ldr	r0, [r3, #0]
 8005842:	685b      	ldr	r3, [r3, #4]
 8005844:	6053      	str	r3, [r2, #4]
 8005846:	4408      	add	r0, r1
 8005848:	6010      	str	r0, [r2, #0]
 800584a:	e7da      	b.n	8005802 <_free_r+0x22>
 800584c:	d902      	bls.n	8005854 <_free_r+0x74>
 800584e:	230c      	movs	r3, #12
 8005850:	602b      	str	r3, [r5, #0]
 8005852:	e7d6      	b.n	8005802 <_free_r+0x22>
 8005854:	6820      	ldr	r0, [r4, #0]
 8005856:	1821      	adds	r1, r4, r0
 8005858:	428b      	cmp	r3, r1
 800585a:	bf04      	itt	eq
 800585c:	6819      	ldreq	r1, [r3, #0]
 800585e:	685b      	ldreq	r3, [r3, #4]
 8005860:	6063      	str	r3, [r4, #4]
 8005862:	bf04      	itt	eq
 8005864:	1809      	addeq	r1, r1, r0
 8005866:	6021      	streq	r1, [r4, #0]
 8005868:	6054      	str	r4, [r2, #4]
 800586a:	e7ca      	b.n	8005802 <_free_r+0x22>
 800586c:	bd38      	pop	{r3, r4, r5, pc}
 800586e:	bf00      	nop
 8005870:	2000155c 	.word	0x2000155c

08005874 <sbrk_aligned>:
 8005874:	b570      	push	{r4, r5, r6, lr}
 8005876:	4e0f      	ldr	r6, [pc, #60]	@ (80058b4 <sbrk_aligned+0x40>)
 8005878:	460c      	mov	r4, r1
 800587a:	6831      	ldr	r1, [r6, #0]
 800587c:	4605      	mov	r5, r0
 800587e:	b911      	cbnz	r1, 8005886 <sbrk_aligned+0x12>
 8005880:	f000 fba6 	bl	8005fd0 <_sbrk_r>
 8005884:	6030      	str	r0, [r6, #0]
 8005886:	4621      	mov	r1, r4
 8005888:	4628      	mov	r0, r5
 800588a:	f000 fba1 	bl	8005fd0 <_sbrk_r>
 800588e:	1c43      	adds	r3, r0, #1
 8005890:	d103      	bne.n	800589a <sbrk_aligned+0x26>
 8005892:	f04f 34ff 	mov.w	r4, #4294967295
 8005896:	4620      	mov	r0, r4
 8005898:	bd70      	pop	{r4, r5, r6, pc}
 800589a:	1cc4      	adds	r4, r0, #3
 800589c:	f024 0403 	bic.w	r4, r4, #3
 80058a0:	42a0      	cmp	r0, r4
 80058a2:	d0f8      	beq.n	8005896 <sbrk_aligned+0x22>
 80058a4:	1a21      	subs	r1, r4, r0
 80058a6:	4628      	mov	r0, r5
 80058a8:	f000 fb92 	bl	8005fd0 <_sbrk_r>
 80058ac:	3001      	adds	r0, #1
 80058ae:	d1f2      	bne.n	8005896 <sbrk_aligned+0x22>
 80058b0:	e7ef      	b.n	8005892 <sbrk_aligned+0x1e>
 80058b2:	bf00      	nop
 80058b4:	20001558 	.word	0x20001558

080058b8 <_malloc_r>:
 80058b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058bc:	1ccd      	adds	r5, r1, #3
 80058be:	f025 0503 	bic.w	r5, r5, #3
 80058c2:	3508      	adds	r5, #8
 80058c4:	2d0c      	cmp	r5, #12
 80058c6:	bf38      	it	cc
 80058c8:	250c      	movcc	r5, #12
 80058ca:	2d00      	cmp	r5, #0
 80058cc:	4606      	mov	r6, r0
 80058ce:	db01      	blt.n	80058d4 <_malloc_r+0x1c>
 80058d0:	42a9      	cmp	r1, r5
 80058d2:	d904      	bls.n	80058de <_malloc_r+0x26>
 80058d4:	230c      	movs	r3, #12
 80058d6:	6033      	str	r3, [r6, #0]
 80058d8:	2000      	movs	r0, #0
 80058da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80058de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80059b4 <_malloc_r+0xfc>
 80058e2:	f000 f869 	bl	80059b8 <__malloc_lock>
 80058e6:	f8d8 3000 	ldr.w	r3, [r8]
 80058ea:	461c      	mov	r4, r3
 80058ec:	bb44      	cbnz	r4, 8005940 <_malloc_r+0x88>
 80058ee:	4629      	mov	r1, r5
 80058f0:	4630      	mov	r0, r6
 80058f2:	f7ff ffbf 	bl	8005874 <sbrk_aligned>
 80058f6:	1c43      	adds	r3, r0, #1
 80058f8:	4604      	mov	r4, r0
 80058fa:	d158      	bne.n	80059ae <_malloc_r+0xf6>
 80058fc:	f8d8 4000 	ldr.w	r4, [r8]
 8005900:	4627      	mov	r7, r4
 8005902:	2f00      	cmp	r7, #0
 8005904:	d143      	bne.n	800598e <_malloc_r+0xd6>
 8005906:	2c00      	cmp	r4, #0
 8005908:	d04b      	beq.n	80059a2 <_malloc_r+0xea>
 800590a:	6823      	ldr	r3, [r4, #0]
 800590c:	4639      	mov	r1, r7
 800590e:	4630      	mov	r0, r6
 8005910:	eb04 0903 	add.w	r9, r4, r3
 8005914:	f000 fb5c 	bl	8005fd0 <_sbrk_r>
 8005918:	4581      	cmp	r9, r0
 800591a:	d142      	bne.n	80059a2 <_malloc_r+0xea>
 800591c:	6821      	ldr	r1, [r4, #0]
 800591e:	1a6d      	subs	r5, r5, r1
 8005920:	4629      	mov	r1, r5
 8005922:	4630      	mov	r0, r6
 8005924:	f7ff ffa6 	bl	8005874 <sbrk_aligned>
 8005928:	3001      	adds	r0, #1
 800592a:	d03a      	beq.n	80059a2 <_malloc_r+0xea>
 800592c:	6823      	ldr	r3, [r4, #0]
 800592e:	442b      	add	r3, r5
 8005930:	6023      	str	r3, [r4, #0]
 8005932:	f8d8 3000 	ldr.w	r3, [r8]
 8005936:	685a      	ldr	r2, [r3, #4]
 8005938:	bb62      	cbnz	r2, 8005994 <_malloc_r+0xdc>
 800593a:	f8c8 7000 	str.w	r7, [r8]
 800593e:	e00f      	b.n	8005960 <_malloc_r+0xa8>
 8005940:	6822      	ldr	r2, [r4, #0]
 8005942:	1b52      	subs	r2, r2, r5
 8005944:	d420      	bmi.n	8005988 <_malloc_r+0xd0>
 8005946:	2a0b      	cmp	r2, #11
 8005948:	d917      	bls.n	800597a <_malloc_r+0xc2>
 800594a:	1961      	adds	r1, r4, r5
 800594c:	42a3      	cmp	r3, r4
 800594e:	6025      	str	r5, [r4, #0]
 8005950:	bf18      	it	ne
 8005952:	6059      	strne	r1, [r3, #4]
 8005954:	6863      	ldr	r3, [r4, #4]
 8005956:	bf08      	it	eq
 8005958:	f8c8 1000 	streq.w	r1, [r8]
 800595c:	5162      	str	r2, [r4, r5]
 800595e:	604b      	str	r3, [r1, #4]
 8005960:	4630      	mov	r0, r6
 8005962:	f000 f82f 	bl	80059c4 <__malloc_unlock>
 8005966:	f104 000b 	add.w	r0, r4, #11
 800596a:	1d23      	adds	r3, r4, #4
 800596c:	f020 0007 	bic.w	r0, r0, #7
 8005970:	1ac2      	subs	r2, r0, r3
 8005972:	bf1c      	itt	ne
 8005974:	1a1b      	subne	r3, r3, r0
 8005976:	50a3      	strne	r3, [r4, r2]
 8005978:	e7af      	b.n	80058da <_malloc_r+0x22>
 800597a:	6862      	ldr	r2, [r4, #4]
 800597c:	42a3      	cmp	r3, r4
 800597e:	bf0c      	ite	eq
 8005980:	f8c8 2000 	streq.w	r2, [r8]
 8005984:	605a      	strne	r2, [r3, #4]
 8005986:	e7eb      	b.n	8005960 <_malloc_r+0xa8>
 8005988:	4623      	mov	r3, r4
 800598a:	6864      	ldr	r4, [r4, #4]
 800598c:	e7ae      	b.n	80058ec <_malloc_r+0x34>
 800598e:	463c      	mov	r4, r7
 8005990:	687f      	ldr	r7, [r7, #4]
 8005992:	e7b6      	b.n	8005902 <_malloc_r+0x4a>
 8005994:	461a      	mov	r2, r3
 8005996:	685b      	ldr	r3, [r3, #4]
 8005998:	42a3      	cmp	r3, r4
 800599a:	d1fb      	bne.n	8005994 <_malloc_r+0xdc>
 800599c:	2300      	movs	r3, #0
 800599e:	6053      	str	r3, [r2, #4]
 80059a0:	e7de      	b.n	8005960 <_malloc_r+0xa8>
 80059a2:	230c      	movs	r3, #12
 80059a4:	6033      	str	r3, [r6, #0]
 80059a6:	4630      	mov	r0, r6
 80059a8:	f000 f80c 	bl	80059c4 <__malloc_unlock>
 80059ac:	e794      	b.n	80058d8 <_malloc_r+0x20>
 80059ae:	6005      	str	r5, [r0, #0]
 80059b0:	e7d6      	b.n	8005960 <_malloc_r+0xa8>
 80059b2:	bf00      	nop
 80059b4:	2000155c 	.word	0x2000155c

080059b8 <__malloc_lock>:
 80059b8:	4801      	ldr	r0, [pc, #4]	@ (80059c0 <__malloc_lock+0x8>)
 80059ba:	f7ff bf0f 	b.w	80057dc <__retarget_lock_acquire_recursive>
 80059be:	bf00      	nop
 80059c0:	20001554 	.word	0x20001554

080059c4 <__malloc_unlock>:
 80059c4:	4801      	ldr	r0, [pc, #4]	@ (80059cc <__malloc_unlock+0x8>)
 80059c6:	f7ff bf0a 	b.w	80057de <__retarget_lock_release_recursive>
 80059ca:	bf00      	nop
 80059cc:	20001554 	.word	0x20001554

080059d0 <__ssputs_r>:
 80059d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059d4:	688e      	ldr	r6, [r1, #8]
 80059d6:	461f      	mov	r7, r3
 80059d8:	42be      	cmp	r6, r7
 80059da:	680b      	ldr	r3, [r1, #0]
 80059dc:	4682      	mov	sl, r0
 80059de:	460c      	mov	r4, r1
 80059e0:	4690      	mov	r8, r2
 80059e2:	d82d      	bhi.n	8005a40 <__ssputs_r+0x70>
 80059e4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80059e8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80059ec:	d026      	beq.n	8005a3c <__ssputs_r+0x6c>
 80059ee:	6965      	ldr	r5, [r4, #20]
 80059f0:	6909      	ldr	r1, [r1, #16]
 80059f2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80059f6:	eba3 0901 	sub.w	r9, r3, r1
 80059fa:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80059fe:	1c7b      	adds	r3, r7, #1
 8005a00:	444b      	add	r3, r9
 8005a02:	106d      	asrs	r5, r5, #1
 8005a04:	429d      	cmp	r5, r3
 8005a06:	bf38      	it	cc
 8005a08:	461d      	movcc	r5, r3
 8005a0a:	0553      	lsls	r3, r2, #21
 8005a0c:	d527      	bpl.n	8005a5e <__ssputs_r+0x8e>
 8005a0e:	4629      	mov	r1, r5
 8005a10:	f7ff ff52 	bl	80058b8 <_malloc_r>
 8005a14:	4606      	mov	r6, r0
 8005a16:	b360      	cbz	r0, 8005a72 <__ssputs_r+0xa2>
 8005a18:	6921      	ldr	r1, [r4, #16]
 8005a1a:	464a      	mov	r2, r9
 8005a1c:	f000 fae8 	bl	8005ff0 <memcpy>
 8005a20:	89a3      	ldrh	r3, [r4, #12]
 8005a22:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005a26:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005a2a:	81a3      	strh	r3, [r4, #12]
 8005a2c:	6126      	str	r6, [r4, #16]
 8005a2e:	6165      	str	r5, [r4, #20]
 8005a30:	444e      	add	r6, r9
 8005a32:	eba5 0509 	sub.w	r5, r5, r9
 8005a36:	6026      	str	r6, [r4, #0]
 8005a38:	60a5      	str	r5, [r4, #8]
 8005a3a:	463e      	mov	r6, r7
 8005a3c:	42be      	cmp	r6, r7
 8005a3e:	d900      	bls.n	8005a42 <__ssputs_r+0x72>
 8005a40:	463e      	mov	r6, r7
 8005a42:	6820      	ldr	r0, [r4, #0]
 8005a44:	4632      	mov	r2, r6
 8005a46:	4641      	mov	r1, r8
 8005a48:	f000 faa8 	bl	8005f9c <memmove>
 8005a4c:	68a3      	ldr	r3, [r4, #8]
 8005a4e:	1b9b      	subs	r3, r3, r6
 8005a50:	60a3      	str	r3, [r4, #8]
 8005a52:	6823      	ldr	r3, [r4, #0]
 8005a54:	4433      	add	r3, r6
 8005a56:	6023      	str	r3, [r4, #0]
 8005a58:	2000      	movs	r0, #0
 8005a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a5e:	462a      	mov	r2, r5
 8005a60:	f000 fad4 	bl	800600c <_realloc_r>
 8005a64:	4606      	mov	r6, r0
 8005a66:	2800      	cmp	r0, #0
 8005a68:	d1e0      	bne.n	8005a2c <__ssputs_r+0x5c>
 8005a6a:	6921      	ldr	r1, [r4, #16]
 8005a6c:	4650      	mov	r0, sl
 8005a6e:	f7ff feb7 	bl	80057e0 <_free_r>
 8005a72:	230c      	movs	r3, #12
 8005a74:	f8ca 3000 	str.w	r3, [sl]
 8005a78:	89a3      	ldrh	r3, [r4, #12]
 8005a7a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005a7e:	81a3      	strh	r3, [r4, #12]
 8005a80:	f04f 30ff 	mov.w	r0, #4294967295
 8005a84:	e7e9      	b.n	8005a5a <__ssputs_r+0x8a>
	...

08005a88 <_svfiprintf_r>:
 8005a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a8c:	4698      	mov	r8, r3
 8005a8e:	898b      	ldrh	r3, [r1, #12]
 8005a90:	061b      	lsls	r3, r3, #24
 8005a92:	b09d      	sub	sp, #116	@ 0x74
 8005a94:	4607      	mov	r7, r0
 8005a96:	460d      	mov	r5, r1
 8005a98:	4614      	mov	r4, r2
 8005a9a:	d510      	bpl.n	8005abe <_svfiprintf_r+0x36>
 8005a9c:	690b      	ldr	r3, [r1, #16]
 8005a9e:	b973      	cbnz	r3, 8005abe <_svfiprintf_r+0x36>
 8005aa0:	2140      	movs	r1, #64	@ 0x40
 8005aa2:	f7ff ff09 	bl	80058b8 <_malloc_r>
 8005aa6:	6028      	str	r0, [r5, #0]
 8005aa8:	6128      	str	r0, [r5, #16]
 8005aaa:	b930      	cbnz	r0, 8005aba <_svfiprintf_r+0x32>
 8005aac:	230c      	movs	r3, #12
 8005aae:	603b      	str	r3, [r7, #0]
 8005ab0:	f04f 30ff 	mov.w	r0, #4294967295
 8005ab4:	b01d      	add	sp, #116	@ 0x74
 8005ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005aba:	2340      	movs	r3, #64	@ 0x40
 8005abc:	616b      	str	r3, [r5, #20]
 8005abe:	2300      	movs	r3, #0
 8005ac0:	9309      	str	r3, [sp, #36]	@ 0x24
 8005ac2:	2320      	movs	r3, #32
 8005ac4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005ac8:	f8cd 800c 	str.w	r8, [sp, #12]
 8005acc:	2330      	movs	r3, #48	@ 0x30
 8005ace:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005c6c <_svfiprintf_r+0x1e4>
 8005ad2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005ad6:	f04f 0901 	mov.w	r9, #1
 8005ada:	4623      	mov	r3, r4
 8005adc:	469a      	mov	sl, r3
 8005ade:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ae2:	b10a      	cbz	r2, 8005ae8 <_svfiprintf_r+0x60>
 8005ae4:	2a25      	cmp	r2, #37	@ 0x25
 8005ae6:	d1f9      	bne.n	8005adc <_svfiprintf_r+0x54>
 8005ae8:	ebba 0b04 	subs.w	fp, sl, r4
 8005aec:	d00b      	beq.n	8005b06 <_svfiprintf_r+0x7e>
 8005aee:	465b      	mov	r3, fp
 8005af0:	4622      	mov	r2, r4
 8005af2:	4629      	mov	r1, r5
 8005af4:	4638      	mov	r0, r7
 8005af6:	f7ff ff6b 	bl	80059d0 <__ssputs_r>
 8005afa:	3001      	adds	r0, #1
 8005afc:	f000 80a7 	beq.w	8005c4e <_svfiprintf_r+0x1c6>
 8005b00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005b02:	445a      	add	r2, fp
 8005b04:	9209      	str	r2, [sp, #36]	@ 0x24
 8005b06:	f89a 3000 	ldrb.w	r3, [sl]
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	f000 809f 	beq.w	8005c4e <_svfiprintf_r+0x1c6>
 8005b10:	2300      	movs	r3, #0
 8005b12:	f04f 32ff 	mov.w	r2, #4294967295
 8005b16:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005b1a:	f10a 0a01 	add.w	sl, sl, #1
 8005b1e:	9304      	str	r3, [sp, #16]
 8005b20:	9307      	str	r3, [sp, #28]
 8005b22:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005b26:	931a      	str	r3, [sp, #104]	@ 0x68
 8005b28:	4654      	mov	r4, sl
 8005b2a:	2205      	movs	r2, #5
 8005b2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005b30:	484e      	ldr	r0, [pc, #312]	@ (8005c6c <_svfiprintf_r+0x1e4>)
 8005b32:	f7fa fb55 	bl	80001e0 <memchr>
 8005b36:	9a04      	ldr	r2, [sp, #16]
 8005b38:	b9d8      	cbnz	r0, 8005b72 <_svfiprintf_r+0xea>
 8005b3a:	06d0      	lsls	r0, r2, #27
 8005b3c:	bf44      	itt	mi
 8005b3e:	2320      	movmi	r3, #32
 8005b40:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005b44:	0711      	lsls	r1, r2, #28
 8005b46:	bf44      	itt	mi
 8005b48:	232b      	movmi	r3, #43	@ 0x2b
 8005b4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005b4e:	f89a 3000 	ldrb.w	r3, [sl]
 8005b52:	2b2a      	cmp	r3, #42	@ 0x2a
 8005b54:	d015      	beq.n	8005b82 <_svfiprintf_r+0xfa>
 8005b56:	9a07      	ldr	r2, [sp, #28]
 8005b58:	4654      	mov	r4, sl
 8005b5a:	2000      	movs	r0, #0
 8005b5c:	f04f 0c0a 	mov.w	ip, #10
 8005b60:	4621      	mov	r1, r4
 8005b62:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005b66:	3b30      	subs	r3, #48	@ 0x30
 8005b68:	2b09      	cmp	r3, #9
 8005b6a:	d94b      	bls.n	8005c04 <_svfiprintf_r+0x17c>
 8005b6c:	b1b0      	cbz	r0, 8005b9c <_svfiprintf_r+0x114>
 8005b6e:	9207      	str	r2, [sp, #28]
 8005b70:	e014      	b.n	8005b9c <_svfiprintf_r+0x114>
 8005b72:	eba0 0308 	sub.w	r3, r0, r8
 8005b76:	fa09 f303 	lsl.w	r3, r9, r3
 8005b7a:	4313      	orrs	r3, r2
 8005b7c:	9304      	str	r3, [sp, #16]
 8005b7e:	46a2      	mov	sl, r4
 8005b80:	e7d2      	b.n	8005b28 <_svfiprintf_r+0xa0>
 8005b82:	9b03      	ldr	r3, [sp, #12]
 8005b84:	1d19      	adds	r1, r3, #4
 8005b86:	681b      	ldr	r3, [r3, #0]
 8005b88:	9103      	str	r1, [sp, #12]
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	bfbb      	ittet	lt
 8005b8e:	425b      	neglt	r3, r3
 8005b90:	f042 0202 	orrlt.w	r2, r2, #2
 8005b94:	9307      	strge	r3, [sp, #28]
 8005b96:	9307      	strlt	r3, [sp, #28]
 8005b98:	bfb8      	it	lt
 8005b9a:	9204      	strlt	r2, [sp, #16]
 8005b9c:	7823      	ldrb	r3, [r4, #0]
 8005b9e:	2b2e      	cmp	r3, #46	@ 0x2e
 8005ba0:	d10a      	bne.n	8005bb8 <_svfiprintf_r+0x130>
 8005ba2:	7863      	ldrb	r3, [r4, #1]
 8005ba4:	2b2a      	cmp	r3, #42	@ 0x2a
 8005ba6:	d132      	bne.n	8005c0e <_svfiprintf_r+0x186>
 8005ba8:	9b03      	ldr	r3, [sp, #12]
 8005baa:	1d1a      	adds	r2, r3, #4
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	9203      	str	r2, [sp, #12]
 8005bb0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005bb4:	3402      	adds	r4, #2
 8005bb6:	9305      	str	r3, [sp, #20]
 8005bb8:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005c7c <_svfiprintf_r+0x1f4>
 8005bbc:	7821      	ldrb	r1, [r4, #0]
 8005bbe:	2203      	movs	r2, #3
 8005bc0:	4650      	mov	r0, sl
 8005bc2:	f7fa fb0d 	bl	80001e0 <memchr>
 8005bc6:	b138      	cbz	r0, 8005bd8 <_svfiprintf_r+0x150>
 8005bc8:	9b04      	ldr	r3, [sp, #16]
 8005bca:	eba0 000a 	sub.w	r0, r0, sl
 8005bce:	2240      	movs	r2, #64	@ 0x40
 8005bd0:	4082      	lsls	r2, r0
 8005bd2:	4313      	orrs	r3, r2
 8005bd4:	3401      	adds	r4, #1
 8005bd6:	9304      	str	r3, [sp, #16]
 8005bd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005bdc:	4824      	ldr	r0, [pc, #144]	@ (8005c70 <_svfiprintf_r+0x1e8>)
 8005bde:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005be2:	2206      	movs	r2, #6
 8005be4:	f7fa fafc 	bl	80001e0 <memchr>
 8005be8:	2800      	cmp	r0, #0
 8005bea:	d036      	beq.n	8005c5a <_svfiprintf_r+0x1d2>
 8005bec:	4b21      	ldr	r3, [pc, #132]	@ (8005c74 <_svfiprintf_r+0x1ec>)
 8005bee:	bb1b      	cbnz	r3, 8005c38 <_svfiprintf_r+0x1b0>
 8005bf0:	9b03      	ldr	r3, [sp, #12]
 8005bf2:	3307      	adds	r3, #7
 8005bf4:	f023 0307 	bic.w	r3, r3, #7
 8005bf8:	3308      	adds	r3, #8
 8005bfa:	9303      	str	r3, [sp, #12]
 8005bfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005bfe:	4433      	add	r3, r6
 8005c00:	9309      	str	r3, [sp, #36]	@ 0x24
 8005c02:	e76a      	b.n	8005ada <_svfiprintf_r+0x52>
 8005c04:	fb0c 3202 	mla	r2, ip, r2, r3
 8005c08:	460c      	mov	r4, r1
 8005c0a:	2001      	movs	r0, #1
 8005c0c:	e7a8      	b.n	8005b60 <_svfiprintf_r+0xd8>
 8005c0e:	2300      	movs	r3, #0
 8005c10:	3401      	adds	r4, #1
 8005c12:	9305      	str	r3, [sp, #20]
 8005c14:	4619      	mov	r1, r3
 8005c16:	f04f 0c0a 	mov.w	ip, #10
 8005c1a:	4620      	mov	r0, r4
 8005c1c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005c20:	3a30      	subs	r2, #48	@ 0x30
 8005c22:	2a09      	cmp	r2, #9
 8005c24:	d903      	bls.n	8005c2e <_svfiprintf_r+0x1a6>
 8005c26:	2b00      	cmp	r3, #0
 8005c28:	d0c6      	beq.n	8005bb8 <_svfiprintf_r+0x130>
 8005c2a:	9105      	str	r1, [sp, #20]
 8005c2c:	e7c4      	b.n	8005bb8 <_svfiprintf_r+0x130>
 8005c2e:	fb0c 2101 	mla	r1, ip, r1, r2
 8005c32:	4604      	mov	r4, r0
 8005c34:	2301      	movs	r3, #1
 8005c36:	e7f0      	b.n	8005c1a <_svfiprintf_r+0x192>
 8005c38:	ab03      	add	r3, sp, #12
 8005c3a:	9300      	str	r3, [sp, #0]
 8005c3c:	462a      	mov	r2, r5
 8005c3e:	4b0e      	ldr	r3, [pc, #56]	@ (8005c78 <_svfiprintf_r+0x1f0>)
 8005c40:	a904      	add	r1, sp, #16
 8005c42:	4638      	mov	r0, r7
 8005c44:	f3af 8000 	nop.w
 8005c48:	1c42      	adds	r2, r0, #1
 8005c4a:	4606      	mov	r6, r0
 8005c4c:	d1d6      	bne.n	8005bfc <_svfiprintf_r+0x174>
 8005c4e:	89ab      	ldrh	r3, [r5, #12]
 8005c50:	065b      	lsls	r3, r3, #25
 8005c52:	f53f af2d 	bmi.w	8005ab0 <_svfiprintf_r+0x28>
 8005c56:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005c58:	e72c      	b.n	8005ab4 <_svfiprintf_r+0x2c>
 8005c5a:	ab03      	add	r3, sp, #12
 8005c5c:	9300      	str	r3, [sp, #0]
 8005c5e:	462a      	mov	r2, r5
 8005c60:	4b05      	ldr	r3, [pc, #20]	@ (8005c78 <_svfiprintf_r+0x1f0>)
 8005c62:	a904      	add	r1, sp, #16
 8005c64:	4638      	mov	r0, r7
 8005c66:	f000 f879 	bl	8005d5c <_printf_i>
 8005c6a:	e7ed      	b.n	8005c48 <_svfiprintf_r+0x1c0>
 8005c6c:	08006b8e 	.word	0x08006b8e
 8005c70:	08006b98 	.word	0x08006b98
 8005c74:	00000000 	.word	0x00000000
 8005c78:	080059d1 	.word	0x080059d1
 8005c7c:	08006b94 	.word	0x08006b94

08005c80 <_printf_common>:
 8005c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c84:	4616      	mov	r6, r2
 8005c86:	4698      	mov	r8, r3
 8005c88:	688a      	ldr	r2, [r1, #8]
 8005c8a:	690b      	ldr	r3, [r1, #16]
 8005c8c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005c90:	4293      	cmp	r3, r2
 8005c92:	bfb8      	it	lt
 8005c94:	4613      	movlt	r3, r2
 8005c96:	6033      	str	r3, [r6, #0]
 8005c98:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8005c9c:	4607      	mov	r7, r0
 8005c9e:	460c      	mov	r4, r1
 8005ca0:	b10a      	cbz	r2, 8005ca6 <_printf_common+0x26>
 8005ca2:	3301      	adds	r3, #1
 8005ca4:	6033      	str	r3, [r6, #0]
 8005ca6:	6823      	ldr	r3, [r4, #0]
 8005ca8:	0699      	lsls	r1, r3, #26
 8005caa:	bf42      	ittt	mi
 8005cac:	6833      	ldrmi	r3, [r6, #0]
 8005cae:	3302      	addmi	r3, #2
 8005cb0:	6033      	strmi	r3, [r6, #0]
 8005cb2:	6825      	ldr	r5, [r4, #0]
 8005cb4:	f015 0506 	ands.w	r5, r5, #6
 8005cb8:	d106      	bne.n	8005cc8 <_printf_common+0x48>
 8005cba:	f104 0a19 	add.w	sl, r4, #25
 8005cbe:	68e3      	ldr	r3, [r4, #12]
 8005cc0:	6832      	ldr	r2, [r6, #0]
 8005cc2:	1a9b      	subs	r3, r3, r2
 8005cc4:	42ab      	cmp	r3, r5
 8005cc6:	dc26      	bgt.n	8005d16 <_printf_common+0x96>
 8005cc8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005ccc:	6822      	ldr	r2, [r4, #0]
 8005cce:	3b00      	subs	r3, #0
 8005cd0:	bf18      	it	ne
 8005cd2:	2301      	movne	r3, #1
 8005cd4:	0692      	lsls	r2, r2, #26
 8005cd6:	d42b      	bmi.n	8005d30 <_printf_common+0xb0>
 8005cd8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005cdc:	4641      	mov	r1, r8
 8005cde:	4638      	mov	r0, r7
 8005ce0:	47c8      	blx	r9
 8005ce2:	3001      	adds	r0, #1
 8005ce4:	d01e      	beq.n	8005d24 <_printf_common+0xa4>
 8005ce6:	6823      	ldr	r3, [r4, #0]
 8005ce8:	6922      	ldr	r2, [r4, #16]
 8005cea:	f003 0306 	and.w	r3, r3, #6
 8005cee:	2b04      	cmp	r3, #4
 8005cf0:	bf02      	ittt	eq
 8005cf2:	68e5      	ldreq	r5, [r4, #12]
 8005cf4:	6833      	ldreq	r3, [r6, #0]
 8005cf6:	1aed      	subeq	r5, r5, r3
 8005cf8:	68a3      	ldr	r3, [r4, #8]
 8005cfa:	bf0c      	ite	eq
 8005cfc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005d00:	2500      	movne	r5, #0
 8005d02:	4293      	cmp	r3, r2
 8005d04:	bfc4      	itt	gt
 8005d06:	1a9b      	subgt	r3, r3, r2
 8005d08:	18ed      	addgt	r5, r5, r3
 8005d0a:	2600      	movs	r6, #0
 8005d0c:	341a      	adds	r4, #26
 8005d0e:	42b5      	cmp	r5, r6
 8005d10:	d11a      	bne.n	8005d48 <_printf_common+0xc8>
 8005d12:	2000      	movs	r0, #0
 8005d14:	e008      	b.n	8005d28 <_printf_common+0xa8>
 8005d16:	2301      	movs	r3, #1
 8005d18:	4652      	mov	r2, sl
 8005d1a:	4641      	mov	r1, r8
 8005d1c:	4638      	mov	r0, r7
 8005d1e:	47c8      	blx	r9
 8005d20:	3001      	adds	r0, #1
 8005d22:	d103      	bne.n	8005d2c <_printf_common+0xac>
 8005d24:	f04f 30ff 	mov.w	r0, #4294967295
 8005d28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005d2c:	3501      	adds	r5, #1
 8005d2e:	e7c6      	b.n	8005cbe <_printf_common+0x3e>
 8005d30:	18e1      	adds	r1, r4, r3
 8005d32:	1c5a      	adds	r2, r3, #1
 8005d34:	2030      	movs	r0, #48	@ 0x30
 8005d36:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005d3a:	4422      	add	r2, r4
 8005d3c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005d40:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005d44:	3302      	adds	r3, #2
 8005d46:	e7c7      	b.n	8005cd8 <_printf_common+0x58>
 8005d48:	2301      	movs	r3, #1
 8005d4a:	4622      	mov	r2, r4
 8005d4c:	4641      	mov	r1, r8
 8005d4e:	4638      	mov	r0, r7
 8005d50:	47c8      	blx	r9
 8005d52:	3001      	adds	r0, #1
 8005d54:	d0e6      	beq.n	8005d24 <_printf_common+0xa4>
 8005d56:	3601      	adds	r6, #1
 8005d58:	e7d9      	b.n	8005d0e <_printf_common+0x8e>
	...

08005d5c <_printf_i>:
 8005d5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005d60:	7e0f      	ldrb	r7, [r1, #24]
 8005d62:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005d64:	2f78      	cmp	r7, #120	@ 0x78
 8005d66:	4691      	mov	r9, r2
 8005d68:	4680      	mov	r8, r0
 8005d6a:	460c      	mov	r4, r1
 8005d6c:	469a      	mov	sl, r3
 8005d6e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005d72:	d807      	bhi.n	8005d84 <_printf_i+0x28>
 8005d74:	2f62      	cmp	r7, #98	@ 0x62
 8005d76:	d80a      	bhi.n	8005d8e <_printf_i+0x32>
 8005d78:	2f00      	cmp	r7, #0
 8005d7a:	f000 80d2 	beq.w	8005f22 <_printf_i+0x1c6>
 8005d7e:	2f58      	cmp	r7, #88	@ 0x58
 8005d80:	f000 80b9 	beq.w	8005ef6 <_printf_i+0x19a>
 8005d84:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005d88:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005d8c:	e03a      	b.n	8005e04 <_printf_i+0xa8>
 8005d8e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005d92:	2b15      	cmp	r3, #21
 8005d94:	d8f6      	bhi.n	8005d84 <_printf_i+0x28>
 8005d96:	a101      	add	r1, pc, #4	@ (adr r1, 8005d9c <_printf_i+0x40>)
 8005d98:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005d9c:	08005df5 	.word	0x08005df5
 8005da0:	08005e09 	.word	0x08005e09
 8005da4:	08005d85 	.word	0x08005d85
 8005da8:	08005d85 	.word	0x08005d85
 8005dac:	08005d85 	.word	0x08005d85
 8005db0:	08005d85 	.word	0x08005d85
 8005db4:	08005e09 	.word	0x08005e09
 8005db8:	08005d85 	.word	0x08005d85
 8005dbc:	08005d85 	.word	0x08005d85
 8005dc0:	08005d85 	.word	0x08005d85
 8005dc4:	08005d85 	.word	0x08005d85
 8005dc8:	08005f09 	.word	0x08005f09
 8005dcc:	08005e33 	.word	0x08005e33
 8005dd0:	08005ec3 	.word	0x08005ec3
 8005dd4:	08005d85 	.word	0x08005d85
 8005dd8:	08005d85 	.word	0x08005d85
 8005ddc:	08005f2b 	.word	0x08005f2b
 8005de0:	08005d85 	.word	0x08005d85
 8005de4:	08005e33 	.word	0x08005e33
 8005de8:	08005d85 	.word	0x08005d85
 8005dec:	08005d85 	.word	0x08005d85
 8005df0:	08005ecb 	.word	0x08005ecb
 8005df4:	6833      	ldr	r3, [r6, #0]
 8005df6:	1d1a      	adds	r2, r3, #4
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	6032      	str	r2, [r6, #0]
 8005dfc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005e00:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005e04:	2301      	movs	r3, #1
 8005e06:	e09d      	b.n	8005f44 <_printf_i+0x1e8>
 8005e08:	6833      	ldr	r3, [r6, #0]
 8005e0a:	6820      	ldr	r0, [r4, #0]
 8005e0c:	1d19      	adds	r1, r3, #4
 8005e0e:	6031      	str	r1, [r6, #0]
 8005e10:	0606      	lsls	r6, r0, #24
 8005e12:	d501      	bpl.n	8005e18 <_printf_i+0xbc>
 8005e14:	681d      	ldr	r5, [r3, #0]
 8005e16:	e003      	b.n	8005e20 <_printf_i+0xc4>
 8005e18:	0645      	lsls	r5, r0, #25
 8005e1a:	d5fb      	bpl.n	8005e14 <_printf_i+0xb8>
 8005e1c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005e20:	2d00      	cmp	r5, #0
 8005e22:	da03      	bge.n	8005e2c <_printf_i+0xd0>
 8005e24:	232d      	movs	r3, #45	@ 0x2d
 8005e26:	426d      	negs	r5, r5
 8005e28:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005e2c:	4859      	ldr	r0, [pc, #356]	@ (8005f94 <_printf_i+0x238>)
 8005e2e:	230a      	movs	r3, #10
 8005e30:	e011      	b.n	8005e56 <_printf_i+0xfa>
 8005e32:	6821      	ldr	r1, [r4, #0]
 8005e34:	6833      	ldr	r3, [r6, #0]
 8005e36:	0608      	lsls	r0, r1, #24
 8005e38:	f853 5b04 	ldr.w	r5, [r3], #4
 8005e3c:	d402      	bmi.n	8005e44 <_printf_i+0xe8>
 8005e3e:	0649      	lsls	r1, r1, #25
 8005e40:	bf48      	it	mi
 8005e42:	b2ad      	uxthmi	r5, r5
 8005e44:	2f6f      	cmp	r7, #111	@ 0x6f
 8005e46:	4853      	ldr	r0, [pc, #332]	@ (8005f94 <_printf_i+0x238>)
 8005e48:	6033      	str	r3, [r6, #0]
 8005e4a:	bf14      	ite	ne
 8005e4c:	230a      	movne	r3, #10
 8005e4e:	2308      	moveq	r3, #8
 8005e50:	2100      	movs	r1, #0
 8005e52:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005e56:	6866      	ldr	r6, [r4, #4]
 8005e58:	60a6      	str	r6, [r4, #8]
 8005e5a:	2e00      	cmp	r6, #0
 8005e5c:	bfa2      	ittt	ge
 8005e5e:	6821      	ldrge	r1, [r4, #0]
 8005e60:	f021 0104 	bicge.w	r1, r1, #4
 8005e64:	6021      	strge	r1, [r4, #0]
 8005e66:	b90d      	cbnz	r5, 8005e6c <_printf_i+0x110>
 8005e68:	2e00      	cmp	r6, #0
 8005e6a:	d04b      	beq.n	8005f04 <_printf_i+0x1a8>
 8005e6c:	4616      	mov	r6, r2
 8005e6e:	fbb5 f1f3 	udiv	r1, r5, r3
 8005e72:	fb03 5711 	mls	r7, r3, r1, r5
 8005e76:	5dc7      	ldrb	r7, [r0, r7]
 8005e78:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005e7c:	462f      	mov	r7, r5
 8005e7e:	42bb      	cmp	r3, r7
 8005e80:	460d      	mov	r5, r1
 8005e82:	d9f4      	bls.n	8005e6e <_printf_i+0x112>
 8005e84:	2b08      	cmp	r3, #8
 8005e86:	d10b      	bne.n	8005ea0 <_printf_i+0x144>
 8005e88:	6823      	ldr	r3, [r4, #0]
 8005e8a:	07df      	lsls	r7, r3, #31
 8005e8c:	d508      	bpl.n	8005ea0 <_printf_i+0x144>
 8005e8e:	6923      	ldr	r3, [r4, #16]
 8005e90:	6861      	ldr	r1, [r4, #4]
 8005e92:	4299      	cmp	r1, r3
 8005e94:	bfde      	ittt	le
 8005e96:	2330      	movle	r3, #48	@ 0x30
 8005e98:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005e9c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005ea0:	1b92      	subs	r2, r2, r6
 8005ea2:	6122      	str	r2, [r4, #16]
 8005ea4:	f8cd a000 	str.w	sl, [sp]
 8005ea8:	464b      	mov	r3, r9
 8005eaa:	aa03      	add	r2, sp, #12
 8005eac:	4621      	mov	r1, r4
 8005eae:	4640      	mov	r0, r8
 8005eb0:	f7ff fee6 	bl	8005c80 <_printf_common>
 8005eb4:	3001      	adds	r0, #1
 8005eb6:	d14a      	bne.n	8005f4e <_printf_i+0x1f2>
 8005eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8005ebc:	b004      	add	sp, #16
 8005ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ec2:	6823      	ldr	r3, [r4, #0]
 8005ec4:	f043 0320 	orr.w	r3, r3, #32
 8005ec8:	6023      	str	r3, [r4, #0]
 8005eca:	4833      	ldr	r0, [pc, #204]	@ (8005f98 <_printf_i+0x23c>)
 8005ecc:	2778      	movs	r7, #120	@ 0x78
 8005ece:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005ed2:	6823      	ldr	r3, [r4, #0]
 8005ed4:	6831      	ldr	r1, [r6, #0]
 8005ed6:	061f      	lsls	r7, r3, #24
 8005ed8:	f851 5b04 	ldr.w	r5, [r1], #4
 8005edc:	d402      	bmi.n	8005ee4 <_printf_i+0x188>
 8005ede:	065f      	lsls	r7, r3, #25
 8005ee0:	bf48      	it	mi
 8005ee2:	b2ad      	uxthmi	r5, r5
 8005ee4:	6031      	str	r1, [r6, #0]
 8005ee6:	07d9      	lsls	r1, r3, #31
 8005ee8:	bf44      	itt	mi
 8005eea:	f043 0320 	orrmi.w	r3, r3, #32
 8005eee:	6023      	strmi	r3, [r4, #0]
 8005ef0:	b11d      	cbz	r5, 8005efa <_printf_i+0x19e>
 8005ef2:	2310      	movs	r3, #16
 8005ef4:	e7ac      	b.n	8005e50 <_printf_i+0xf4>
 8005ef6:	4827      	ldr	r0, [pc, #156]	@ (8005f94 <_printf_i+0x238>)
 8005ef8:	e7e9      	b.n	8005ece <_printf_i+0x172>
 8005efa:	6823      	ldr	r3, [r4, #0]
 8005efc:	f023 0320 	bic.w	r3, r3, #32
 8005f00:	6023      	str	r3, [r4, #0]
 8005f02:	e7f6      	b.n	8005ef2 <_printf_i+0x196>
 8005f04:	4616      	mov	r6, r2
 8005f06:	e7bd      	b.n	8005e84 <_printf_i+0x128>
 8005f08:	6833      	ldr	r3, [r6, #0]
 8005f0a:	6825      	ldr	r5, [r4, #0]
 8005f0c:	6961      	ldr	r1, [r4, #20]
 8005f0e:	1d18      	adds	r0, r3, #4
 8005f10:	6030      	str	r0, [r6, #0]
 8005f12:	062e      	lsls	r6, r5, #24
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	d501      	bpl.n	8005f1c <_printf_i+0x1c0>
 8005f18:	6019      	str	r1, [r3, #0]
 8005f1a:	e002      	b.n	8005f22 <_printf_i+0x1c6>
 8005f1c:	0668      	lsls	r0, r5, #25
 8005f1e:	d5fb      	bpl.n	8005f18 <_printf_i+0x1bc>
 8005f20:	8019      	strh	r1, [r3, #0]
 8005f22:	2300      	movs	r3, #0
 8005f24:	6123      	str	r3, [r4, #16]
 8005f26:	4616      	mov	r6, r2
 8005f28:	e7bc      	b.n	8005ea4 <_printf_i+0x148>
 8005f2a:	6833      	ldr	r3, [r6, #0]
 8005f2c:	1d1a      	adds	r2, r3, #4
 8005f2e:	6032      	str	r2, [r6, #0]
 8005f30:	681e      	ldr	r6, [r3, #0]
 8005f32:	6862      	ldr	r2, [r4, #4]
 8005f34:	2100      	movs	r1, #0
 8005f36:	4630      	mov	r0, r6
 8005f38:	f7fa f952 	bl	80001e0 <memchr>
 8005f3c:	b108      	cbz	r0, 8005f42 <_printf_i+0x1e6>
 8005f3e:	1b80      	subs	r0, r0, r6
 8005f40:	6060      	str	r0, [r4, #4]
 8005f42:	6863      	ldr	r3, [r4, #4]
 8005f44:	6123      	str	r3, [r4, #16]
 8005f46:	2300      	movs	r3, #0
 8005f48:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005f4c:	e7aa      	b.n	8005ea4 <_printf_i+0x148>
 8005f4e:	6923      	ldr	r3, [r4, #16]
 8005f50:	4632      	mov	r2, r6
 8005f52:	4649      	mov	r1, r9
 8005f54:	4640      	mov	r0, r8
 8005f56:	47d0      	blx	sl
 8005f58:	3001      	adds	r0, #1
 8005f5a:	d0ad      	beq.n	8005eb8 <_printf_i+0x15c>
 8005f5c:	6823      	ldr	r3, [r4, #0]
 8005f5e:	079b      	lsls	r3, r3, #30
 8005f60:	d413      	bmi.n	8005f8a <_printf_i+0x22e>
 8005f62:	68e0      	ldr	r0, [r4, #12]
 8005f64:	9b03      	ldr	r3, [sp, #12]
 8005f66:	4298      	cmp	r0, r3
 8005f68:	bfb8      	it	lt
 8005f6a:	4618      	movlt	r0, r3
 8005f6c:	e7a6      	b.n	8005ebc <_printf_i+0x160>
 8005f6e:	2301      	movs	r3, #1
 8005f70:	4632      	mov	r2, r6
 8005f72:	4649      	mov	r1, r9
 8005f74:	4640      	mov	r0, r8
 8005f76:	47d0      	blx	sl
 8005f78:	3001      	adds	r0, #1
 8005f7a:	d09d      	beq.n	8005eb8 <_printf_i+0x15c>
 8005f7c:	3501      	adds	r5, #1
 8005f7e:	68e3      	ldr	r3, [r4, #12]
 8005f80:	9903      	ldr	r1, [sp, #12]
 8005f82:	1a5b      	subs	r3, r3, r1
 8005f84:	42ab      	cmp	r3, r5
 8005f86:	dcf2      	bgt.n	8005f6e <_printf_i+0x212>
 8005f88:	e7eb      	b.n	8005f62 <_printf_i+0x206>
 8005f8a:	2500      	movs	r5, #0
 8005f8c:	f104 0619 	add.w	r6, r4, #25
 8005f90:	e7f5      	b.n	8005f7e <_printf_i+0x222>
 8005f92:	bf00      	nop
 8005f94:	08006b9f 	.word	0x08006b9f
 8005f98:	08006bb0 	.word	0x08006bb0

08005f9c <memmove>:
 8005f9c:	4288      	cmp	r0, r1
 8005f9e:	b510      	push	{r4, lr}
 8005fa0:	eb01 0402 	add.w	r4, r1, r2
 8005fa4:	d902      	bls.n	8005fac <memmove+0x10>
 8005fa6:	4284      	cmp	r4, r0
 8005fa8:	4623      	mov	r3, r4
 8005faa:	d807      	bhi.n	8005fbc <memmove+0x20>
 8005fac:	1e43      	subs	r3, r0, #1
 8005fae:	42a1      	cmp	r1, r4
 8005fb0:	d008      	beq.n	8005fc4 <memmove+0x28>
 8005fb2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005fb6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005fba:	e7f8      	b.n	8005fae <memmove+0x12>
 8005fbc:	4402      	add	r2, r0
 8005fbe:	4601      	mov	r1, r0
 8005fc0:	428a      	cmp	r2, r1
 8005fc2:	d100      	bne.n	8005fc6 <memmove+0x2a>
 8005fc4:	bd10      	pop	{r4, pc}
 8005fc6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005fca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005fce:	e7f7      	b.n	8005fc0 <memmove+0x24>

08005fd0 <_sbrk_r>:
 8005fd0:	b538      	push	{r3, r4, r5, lr}
 8005fd2:	4d06      	ldr	r5, [pc, #24]	@ (8005fec <_sbrk_r+0x1c>)
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	4604      	mov	r4, r0
 8005fd8:	4608      	mov	r0, r1
 8005fda:	602b      	str	r3, [r5, #0]
 8005fdc:	f7fb ff4c 	bl	8001e78 <_sbrk>
 8005fe0:	1c43      	adds	r3, r0, #1
 8005fe2:	d102      	bne.n	8005fea <_sbrk_r+0x1a>
 8005fe4:	682b      	ldr	r3, [r5, #0]
 8005fe6:	b103      	cbz	r3, 8005fea <_sbrk_r+0x1a>
 8005fe8:	6023      	str	r3, [r4, #0]
 8005fea:	bd38      	pop	{r3, r4, r5, pc}
 8005fec:	20001550 	.word	0x20001550

08005ff0 <memcpy>:
 8005ff0:	440a      	add	r2, r1
 8005ff2:	4291      	cmp	r1, r2
 8005ff4:	f100 33ff 	add.w	r3, r0, #4294967295
 8005ff8:	d100      	bne.n	8005ffc <memcpy+0xc>
 8005ffa:	4770      	bx	lr
 8005ffc:	b510      	push	{r4, lr}
 8005ffe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006002:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006006:	4291      	cmp	r1, r2
 8006008:	d1f9      	bne.n	8005ffe <memcpy+0xe>
 800600a:	bd10      	pop	{r4, pc}

0800600c <_realloc_r>:
 800600c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006010:	4680      	mov	r8, r0
 8006012:	4615      	mov	r5, r2
 8006014:	460c      	mov	r4, r1
 8006016:	b921      	cbnz	r1, 8006022 <_realloc_r+0x16>
 8006018:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800601c:	4611      	mov	r1, r2
 800601e:	f7ff bc4b 	b.w	80058b8 <_malloc_r>
 8006022:	b92a      	cbnz	r2, 8006030 <_realloc_r+0x24>
 8006024:	f7ff fbdc 	bl	80057e0 <_free_r>
 8006028:	2400      	movs	r4, #0
 800602a:	4620      	mov	r0, r4
 800602c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006030:	f000 f81a 	bl	8006068 <_malloc_usable_size_r>
 8006034:	4285      	cmp	r5, r0
 8006036:	4606      	mov	r6, r0
 8006038:	d802      	bhi.n	8006040 <_realloc_r+0x34>
 800603a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800603e:	d8f4      	bhi.n	800602a <_realloc_r+0x1e>
 8006040:	4629      	mov	r1, r5
 8006042:	4640      	mov	r0, r8
 8006044:	f7ff fc38 	bl	80058b8 <_malloc_r>
 8006048:	4607      	mov	r7, r0
 800604a:	2800      	cmp	r0, #0
 800604c:	d0ec      	beq.n	8006028 <_realloc_r+0x1c>
 800604e:	42b5      	cmp	r5, r6
 8006050:	462a      	mov	r2, r5
 8006052:	4621      	mov	r1, r4
 8006054:	bf28      	it	cs
 8006056:	4632      	movcs	r2, r6
 8006058:	f7ff ffca 	bl	8005ff0 <memcpy>
 800605c:	4621      	mov	r1, r4
 800605e:	4640      	mov	r0, r8
 8006060:	f7ff fbbe 	bl	80057e0 <_free_r>
 8006064:	463c      	mov	r4, r7
 8006066:	e7e0      	b.n	800602a <_realloc_r+0x1e>

08006068 <_malloc_usable_size_r>:
 8006068:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800606c:	1f18      	subs	r0, r3, #4
 800606e:	2b00      	cmp	r3, #0
 8006070:	bfbc      	itt	lt
 8006072:	580b      	ldrlt	r3, [r1, r0]
 8006074:	18c0      	addlt	r0, r0, r3
 8006076:	4770      	bx	lr

08006078 <_init>:
 8006078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800607a:	bf00      	nop
 800607c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800607e:	bc08      	pop	{r3}
 8006080:	469e      	mov	lr, r3
 8006082:	4770      	bx	lr

08006084 <_fini>:
 8006084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006086:	bf00      	nop
 8006088:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800608a:	bc08      	pop	{r3}
 800608c:	469e      	mov	lr, r3
 800608e:	4770      	bx	lr
